{"version":3,"sources":["App/libs/AzPureFunctions2.ts","App/libs/storageFns.web.ts","App/libs/storageFns.native.ts","App/myApp/actions/reduxInitialState.ts","App/myApp/actions/sharedVars.ts","App/libs/gif.ts","App/myApp/actions/fns.ts","App/myApp/actions/webViewCommunicationFns.ts","App/myApp/actions/init/initAppAfterComponentDidMount.ts","App/myApp/actions/index.ts","App/reducers/index.ts","App/utils/store.ts","App/myApp/pages/Init/TmpCmpToResolveRouterIssue.tsx","App/myApp/pages/Init/index.tsx","App/myApp/pages/EsWebView/index.tsx","App/myApp/pages/WebviewLoader/index.tsx","App/myApp/pages/MySkills/index.tsx","App/myApp/pages/ItemDetails/index.tsx","App/myApp/pages/EsSlider/index.tsx","App/myApp/pages/Dashboard/index.tsx","App/utils/Router.tsx","App/myApp/pages/EsEnvUiContentManager/index.tsx","App/myApp/pages/Popup/index.tsx","App/myApp/pages/TopBar/index.tsx","App/myApp/pages/Toast/index.tsx","App/myApp/pages/Spinner/index.tsx","App/index.tsx","index.tsx","App/myApp/actions/configs.ts"],"names":["Platform","OS","require","clearStorage","getStorage","setStorage","delay","a","timeMs","Promise","resolve","setTimeout","localStorageLib","clearAll","key","argToSet","set","JSON","stringify","get","parse","AsyncStorage","clear","e","setItem","getItem","r","reduxInitialState","setting_muteAudio","setting_darkTheme","setting_notifications","confirmedUsersPerDay","confirmedSalesPerDay","windowSize","totalConfirmedPersonalSaleCounter","activateTopMenu","popupDetail","toastDetails","spinnerDetails","sharedVars","toastTimer","messagesTimer","his","mainScrollViewRef","spinnerTimer","tmpPopupCallbackFn","contentManagerHeight","setStore","object","store","dispatch","type","payload","getStore","getState","gifr","goto","routeName","params","myApp","scrollTo","animated","y","error","console","log","push","goBack","routerGoBack","getRouteName","router","location","pathname","imgLoader","path","uri","createAnim","args","animXVal","Animated","Value","timingOptions","toValue","useNativeDriver","duration","anim","timing","val","interpolate","inputRange","outputRange","from","to","run","start","setValue","showPupop","callbackFn","gif","visible","content","title","icon","withCheckBox","callThePopupCallback","res","checkBoxChecked","showToast","clearTimeout","showSpinner","data","event","convertMarketerClassToVisNet","technologies","sendRenderNetworkCommand","webview1Ref","warn","skills","id","edges","nodes","label","image","level","techno","node","parent","options","layout","hierarchical","brokenImage","defaultMarketerImg","shadow","color","enabled","size","x","shape","smooth","autoResize","sendMessageToWebView","initAppAfterComponentDidMount","history","configs","asd2","sharedVars_","HistoryModule","isDev","development","composeEnhancers","window","compose","createStore","combineReducers","connectRouter","state","action","undefined","applyMiddleware","promiseMiddleware","thunk","routerMiddleware","TmpCmpToResolveRouterIssue","props","this","View","React","Component","connect","testID","style","marginVertical","Text","initilizingMsg","Cmp","loaded","finalStyle","webviewRef","createRef","finalSource","fakeDelay","setState","forceUpdate","mockLoading","postMessage","current","parsedMessage","nativeEvent","onChildMessage","call","valueOf","src","jsxComponent","htmlUrl","Asdasd","finalRenderedElement","renderToStaticMarkup","html","LoadingCmp","justifyContent","borderRadius","ActivityIndicator","source","onLoad","startInLoadingState","containerStyle","onMessage","onMessageFromEveywhere","keyboardDisplayRequiresUserAction","automaticallyAdjustContentInsets","scalesPageToFit","mixedContentMode","ref","originWhitelist","allowFileAccess","allowFileAccessFromFileURLs","allowUniversalAccessFromFileURLs","domStorageEnabled","javaScriptEnabled","pullToRefreshEnabled","javaScriptCanOpenWindowsAutomatically","pagingEnabled","onError","err","onContentProcessDidTerminate","thirdPartyCookiesEnabled","cacheEnabled","cacheMode","unknownUser","username","password","backgroundColor","transparent","margin","padding","overflow","width","Dimensions","height","alignContent","alignItems","alignSelf","flexDirection","items","map","itemKey","item","paddingLeft","Image","resizeMode","fontWeight","textAlign","routerStates","ScrollView","Card","Title","marginTop","borderWidth","borderColor","Colors","grey700","grey500","subtitle","publishDate","Content","comment","web","length","url","Button","mode","contentStyle","grey200","onPress","includes","open","Linking","openURL","Divider","MySkills","usedTechnologies","img","grey800","page","pagesData","routerStatesLoaded","currentPage","scrollRef","_handleOnViewChanged","handleOnViewChanged","bind","info","viewableItems","isViewable","index","itemSize","finalItemSize","FlatList","tmp","horizontal","onScroll","contentOffset","keyExtractor","toString","onScrollToIndexFailed","getItemLayout","offset","renderItem","interpolatedDegree","interpolatedDegree2","transform","scale","opacity","zIndex","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","deepPurpleA700","borderBottomColor","shadowColor","deepPurpleA400","shadowOffset","shadowRadius","borderBottomWidth","grey100","fontSize","marginRight","display","scrollEventThrottle","onViewableItemsChanged","onEndReachedThreshold","ListFooterComponent","i","scrollToIndex","IconButton","labelStyle","marginBottom","paddingTop","paddingBottom","compact","black","Icon","mainBtnTitle","onMainBtnClicked","nextProps","prevState","firstName","lastname","aboutMe","trim","red900","email","github","fontStyle","EsSlider","routes_","AzRouter","exact","component","Init","ItemDetails","WebviewLoader","Dashboard","position","top","left","blurRadius","translateXVal","anim1","anim2","opacityOfMenu","reset","Dialog","onDismiss","white","marginLeft","toUpperCase","Actions","text","Checkbox","status","defaultValue","Appbar","Header","BackAction","on_goBack_cb","rotateX","rotateY","rotateZ","Action","newState","on_activateTopMenu_cb","Snackbar","wrapperStyle","grey900","theme","DefaultTheme","colors","App","BackHandler","addEventListener","c_r","split","exitApp","asd","reload","StrictMode","Fragment","TopBar","EsEnvUiContentManager","Router","Portal","Spinner","Popup","Toast","ReactDOM","render","document","getElementById","nodeEnv","process","argv0","useFbSdk","normalSdk","useFbEmulator","host","tmpFirebaseProxy","firebaseHost","pathsToVisible","appName","aboutUs","number","descreiption","firebase_auth_url","firebase_auth_url_reseter","firebase_fireStore_url","firebase_fireStore_url_reseter","firebase_storage_url","firebase_hosting","firebase_auth_port","firebase_fireStore_port","firebase_storage_port","firebase_hosting_port","imagesUrl","defaultMarketerImgPlain","defaultBgPlain","assetDir_a","defaultBgImg","imageComponentPlatformQuirk","userProfileImage","maxSize","maxWidthHeight","maxTryToCompression","defaultAppData","version","app","appPackageNameInAndroid","maxSalePrice","minSalePrice","minAllowedUsers","maxAllowedUsers","minAllowedDirects","maxAllowedDirects","min_groupPercentageCalculationConfigs","max_groupPercentageCalculationConfigs","loginTitleMsg","red500","purple800","blue900","yellow900","blue700","blue400","blue800","blueGrey600","red800","purple400","max_length","min_length","match"],"mappings":"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","file":"static/js/main.375562c1.chunk.js","sourcesContent":["/* =========================== */\nimport { Platform } from \"react-native\"\n/* todo:fix err on webpack to be able to use these directly(export * from './storageFns') */\nconst { clearStorage, getStorage, setStorage }: typeof import('./storageFns.native') =\n  Platform.OS == 'web' ? require('./storageFns.web') : require('./storageFns.native')\nexport {\n  clearStorage,\n  setStorage,\n  getStorage,\n}\n/* =========================== */\nexport function convertImportedFileToAWebWorker(worker: any) {\n  const code = worker.toString()\n  const blob = new Blob(['(' + code + ')()'])\n  return URL.createObjectURL(blob)\n}\n/* =========================== */\nexport function hardObjectCopy(objOrArr: any) {\n  /* todo: make this works with Float32Array */\n  /* todo:this might go very deep in the object because this fn is recursive ,prevent it by limiting it */\n  if (!objOrArr) {\n    return objOrArr\n  }\n  // let variable\n  const newObjOrArr = Array.isArray(objOrArr) ? [] : {}\n  for (const key in objOrArr) {\n    const variable = objOrArr[key]\n    newObjOrArr[key] = (typeof variable === 'object') ? hardObjectCopy(variable) : variable\n  }\n\n  return newObjOrArr\n}\n/* =========================== */\nexport function makeArray(length: number, initializeValue: any | { min: number, max: number } = null) {\n  return Array.from({ length }, () => {\n    if (typeof initializeValue == 'object') {\n      return random(initializeValue.min, initializeValue.max)\n    } else {\n      return initializeValue\n    }\n  })\n}\n/* =========================== */\n/* ============================================ */\nexport function random(min = undefined, max = undefined) {\n  const rand = Math.random()\n  if (typeof min === 'undefined') {\n    return rand\n  } else if (typeof max === 'undefined') {\n    if (min instanceof Array) {\n      return min[Math.floor(rand * min.length)]\n    } else {\n      return rand * min\n    }\n  } else {\n    if (min > max) {\n      const tmp = min\n      min = max\n      max = tmp\n    }\n\n    return rand * (max - min) + min\n  }\n}\n/* =========================== */\nexport async function delay(timeMs = 1000) {\n  return new Promise(resolve => setTimeout(() => { resolve(1) }, timeMs))\n}\n/* =========================== */\n/* =========================== */\nexport async function getDaysEventsOfJalali() {\n\n  const allEvents = []\n  let daysLengthInMonth = 0\n  for (let month = 1; month <= 12; month++) {\n    if (month <= 6) {\n      daysLengthInMonth = 31\n    } else {\n      daysLengthInMonth = 30\n    }\n    for (let day = 1; day <= daysLengthInMonth; day++) {\n      const res = await (await global.fetch(`https://farsicalendar.com/api/sh/${day}/${month}`)).json()\n      /* api/sh,wc,ic/11,1,27/3,6,9 */\n      if (!res || res.type != 'success') throw 'error_in_event_fetch'\n      allEvents.push(res.values)\n    }\n  }\n  return allEvents\n}\n/* =========================== */\nexport function gregorian_to_jalali(gy, gm, gd) {\n  gy = Math.trunc(gy)\n  gm = Math.trunc(gm)\n  gd = Math.trunc(gd)\n  const g_d_m = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]\n  let jy, days\n  if (gy > 1600) {\n    jy = 979\n    gy -= 1600\n  } else {\n    jy = 0\n    gy -= 621\n  }\n  const gy2 = (gm > 2) ? (gy + 1) : gy\n  days = (365 * gy) + (Math.trunc((gy2 + 3) / 4)) - (Math.trunc((gy2 + 99) / 100)) + (Math.trunc((gy2 + 399) / 400)) - 80 + gd + g_d_m[gm - 1]\n  jy += 33 * (Math.trunc(days / 12053))\n  days %= 12053\n  jy += 4 * (Math.trunc(days / 1461))\n  days %= 1461\n  if (days > 365) {\n    jy += Math.trunc((days - 1) / 365)\n    days = (days - 1) % 365\n  }\n  const jm = (days < 186) ? 1 + Math.trunc(days / 31) : 7 + Math.trunc((days - 186) / 30)\n  const jd = 1 + ((days < 186) ? (days % 31) : ((days - 186) % 30))\n  return [jy, jm, jd]\n}\n/* =========================== */\nexport function jalali_to_gregorian(jy, jm, jd) {\n  return new Promise(resolve => {\n    jy = Math.trunc(jy)\n    jm = Math.trunc(jm)\n    jd = Math.trunc(jd)\n    let gy, days, gd, gm\n    if (jy > 979) {\n      gy = 1600\n      jy -= 979\n    } else {\n      gy = 621\n    }\n    days = (365 * jy) + ((Math.trunc(jy / 33)) * 8) + (Math.trunc(((jy % 33) + 3) / 4)) + 78 + jd + ((jm < 7) ? (jm - 1) * 31 : ((jm - 7) * 30) + 186)\n    gy += 400 * (Math.trunc(days / 146097))\n    days %= 146097\n    if (days > 36524) {\n      gy += 100 * (Math.trunc(--days / 36524))\n      days %= 36524\n      if (days >= 365) days++\n    }\n    gy += 4 * (Math.trunc(days / 1461))\n    days %= 1461\n    if (days > 365) {\n      gy += Math.trunc((days - 1) / 365)\n      days = (days - 1) % 365\n    }\n    gd = days + 1\n    const sal_a = [0, 31, ((gy % 4 == 0 && gy % 100 != 0) || (gy % 400 == 0)) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    for (gm = 0; gm < 13; gm++) {\n      const v = sal_a[gm]\n      if (gd <= v) break\n      gd -= v\n    }\n    return resolve([gy, gm, gd])\n  })\n}\n/* =========================== */\n/* =========================== */\nexport function jsonToCsv(JSONData, ReportTitle, ShowLabel, addtionalHeaderRow) {\n  return new Promise(resolve => {\n    //If JSONData is not an object then JSON.parse will parse the JSON string in an Object\n    const arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData\n    let CSV = ''\n    //Set Report title in first row or line\n    CSV += `${ReportTitle}\\r\\n\\n`\n    CSV += (addtionalHeaderRow ? addtionalHeaderRow : '')\n    CSV += '\\r\\n\\n'\n    //This condition will generate the Label/Header\n    if (ShowLabel) {\n      let row = ''\n      //This loop will extract the label from 1st index of on array\n      for (const index in arrData[0]) {\n        //Now convert each value to string and comma-seprated\n        row += `${index},`\n      }\n      row = row.slice(0, -1)\n      //append Label row with line break\n      CSV += `${row}\\r\\n`\n    }\n    //1st loop is to extract each row\n    for (let i = 0; i < arrData.length; i++) {\n      let row = ''\n      //2nd loop will extract each column and convert it in string comma-seprated\n      for (const index in arrData[i]) {\n        row += `\"${arrData[i][index]}\",`\n        //  TODO: test this\n        //  row += '\"' + arrData[i][index] + '\",'\n      }\n      row.slice(0, row.length - 1)\n      //add a line break after each row\n      CSV += `${row}\\r\\n`\n    }\n    if (CSV == '') {\n      alert('Invalid data')\n      return resolve(0)\n    }\n    //Generate a file name\n    let fileName = ''\n    //this will remove the blank-spaces from the title and replace it with an underscore\n    fileName += ReportTitle.replace(/ /g, '_')\n    //Initialize file format you want csv or xls\n    const uri = `data:text/csv;charset=utf-8,${encodeURIComponent(`\\uFEFF${CSV}\\r\\nsep=,`)}` /*sep=, */\n    // let uri = 'data:text/csv;charset=utf-8,' + escape(CSV);\n    // Now the little tricky part.\\uFEFF sep=;\\r\\n\n    // you can use either>> window.open(uri);\n    // but this will not work in some browsers\n    // or you will not get the correct file extension    \n    //this trick will generate a temp <a /> tag\n    const link = document.createElement('a')\n    link.href = uri\n    //set the visibility hidden so it will not effect on your web-layout\n    /* link.style = 'visibility:hidden' */ /* note:this was the orginal code that disabled after ts (needs testing) */\n    /* link.style.cssText = 'visibility:hidden' */ /* this might work too if below line didn't*/\n    link.style.display = 'none'\n    link.download = `${fileName}.csv`\n    //this part will append the anchor tag and remove it after automatic click\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    return resolve(1)\n  })\n}\n/* =========================== */\nexport function isNumber(n) {\n  return new Promise(resolve => resolve(!isNaN(n)))\n}\n/* =========================== */\n\n/* =========================== */\n/* =========================== */\n\n/* =========================== */\n/* =========================== */\nexport async function fetch(args: {\n  url: string,\n  body?: any,\n  token?: string,\n  method?: string,\n}) {\n\n  // console.log(JSON.stringify(args.body))\n  const res = await global.fetch(encodeURI(args.url), {\n    method: args.body ? 'post' : 'get',\n    // cache:\"no-cache\",\n    // credentials:'same-origin',\n    // mode:'cors',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      // 'Authorization': args.token && args.token != '' ? `Bearer ${args.token}` : null,\n    },\n    body: JSON.stringify(args.body),\n  })\n  if (res.status != 200) return false\n  const jsonRes = await res.json()\n  return jsonRes\n}\n  /* =========================== */\n/* =========================== */\n// }/* end of class */\n","import localStorageLib from 'store/dist/store.modern'\n\nexport function clearStorage(): Promise<boolean> {\n    return new Promise(async resolve => {\n        await localStorageLib.clearAll()\n        return resolve(true)\n    })\n}\n/* =========================== */\nexport function setStorage(key, argToSet): Promise<boolean> {\n    return new Promise(resolve => {\n        localStorageLib.set(key, JSON.stringify(argToSet))\n        return resolve(true)\n    })\n}\n/* =========================== */\nexport function getStorage(key: string): Promise<any> {\n    return new Promise(resolve => {\n        const tmp = localStorageLib.get(key)\n\n        if (tmp) {\n            return resolve(JSON.parse(localStorageLib.get(key)))\n        } else {\n            resolve(null)\n        }\n    })\n}\n","import AsyncStorage from '@react-native-community/async-storage'\n/* =========================== */\nexport function clearStorage(): Promise<boolean> {\n    return new Promise(async resolve => {\n        AsyncStorage.clear(e => {\n            if (e) {\n                throw e\n            } else {\n                return resolve(true)\n            }\n        })\n    })\n}\n/* =========================== */\nexport function setStorage(key, argToSet): Promise<boolean> {\n    return new Promise(resolve => {\n        AsyncStorage.setItem(key, JSON.stringify(argToSet), e => {\n            if (e) {\n                throw e\n            } else {\n                return resolve(true)\n            }\n        })\n    })\n}\n/* =========================== */\nexport function getStorage(key: string): Promise<any> {\n    return new Promise(async resolve => {\n        await AsyncStorage.getItem(key, (e, r) => {\n            if (e) {\n                throw e\n            } else {\n                return resolve(JSON.parse(r))\n            }\n        })\n    })\n}\n","import * as types from './types'\nimport { ScaledSize } from 'react-native'\n/* just variables which will be used by components here (plus split view(V) from controllers(C) */\n/* ------------ */\n/**\n * note: this will be converted to a plain object(the way redux likes it!) \n *  but now i used class to combine types and objects(line) \n * Note: dont forget ?: \n */\nclass reduxInitialState_ {\n  /* ------------------------------- */\n  /* setting */\n  setting_muteAudio?: boolean = null\n  setting_darkTheme?: boolean = null\n  setting_notifications?: boolean = true\n  /* ------------------------------- */\n  /* note:dont put these toghether because in that case when ur using setStore all items must be set */\n  /* ------------------------------- */\n  confirmedUsersPerDay?: { x: number, y: number }[] = []\n  confirmedSalesPerDay?: { x: number, y: number }[] = []\n  // asdasd?=false\n  windowSize?: ScaledSize = null \n  totalConfirmedPersonalSaleCounter?: number = 0\n\n  activateTopMenu?: boolean = null \n  popupDetail?: {\n    visible: boolean,\n    title?: string,\n    icon?: string,\n    content?: string,\n    type?: 'alert' | 'confirm',\n    withCheckBox?: {\n      defaultValue: boolean,\n      text: string,\n    },\n    // callbackFn?: Function\n  } = null\n  toastDetails?: {\n    visible: boolean,\n    title?: string,\n    content?: string,\n    type?: 'alert' | 'confirm',\n    // callbackFn?: Function\n  } = null\n  spinnerDetails?: {\n    visible: boolean,\n    title?: string,\n    content?: string,\n    type?: 'alert' | 'confirm',\n    // callbackFn?: Function\n  } = null\n  /* ----------------------------- */\n}\n/* ----------------------------- */\nconst reduxInitialState = new reduxInitialState_()\n/* ----------------------------- */\nexport default reduxInitialState\n/* ----------------------------- */\n\n\n// export interface reduxInitialState_ {\n//   confirmedMarketers?: types.marketer[],\n//   unConfirmedMarketers?: types.marketer[],\n//   activateTopMenu?: boolean,\n//   /* note:use ?: to make these optional(for now) */\n//   userDetails?: types.usersTbl,\n//   adminDetails?: types.adminsTbl,\n//   adminGroupDetail?: types.groupsTbl,\n//   popupDetail?: {\n//     visible:boolean,\n//     title?:string,\n//     content?:string,\n//     type?:'alert'|'confirm',\n//     callbackFn?:Function\n//   },\n// }\n\n// const reduxInitialState/* :  reduxInitialState */:any = {\n//       /* note:remember to not set reduxInitialState variables to \"undefined\" (otherwise reducerIndex gonna ignore its changes) */\n//       userDetails: null,\n//       adminDetails: null,\n//       adminGroupDetail: null,\n//       popupDetail:null,\n//       activateTopMenu:null,\n//       confirmedMarketers:null,\n//       unConfirmedMarketers:null,\n// }\n","import * as types from './types'\nimport { View, ScrollView } from 'react-native'\n// import firebase from 'firebase/app'\nimport {History} from 'history'\n\n\n/* note:dont define default value for below variables values will be assing by Start function(for reseting  sake) */\nexport default class sharedVars {\n  // static generationNumber: number;/* todo:rm this */\n  // static bestBirdOfCurrentBirdsIndex: number;\n  // static animationContainer?: HTMLDivElement /* mount */\n  // static animationFrameTimer: any;\n  // static makeGameHarderTimer: any;\n  // static disabledAgentCounter:  number ;\n  // static counter: number ;\n  // static startTrainingTime: number ;\n  // static serverWorker: Worker=null ;\n  // static userCredential: firebase.auth.UserCredential = null;\n  // static toastTimer: NodeJS.Timeout = null;\n  static toastTimer/* : NodeJS.Timeout */ = null;\n  // static userCredential: types.userCredential = null;\n  // static messagesTimer: NodeJS.Timeout=null;\n  static messagesTimer/* : NodeJS.Timeout */=null;\nstatic his:History \n  static mainScrollViewRef:ScrollView=null;\n  // static appData:types.appData=null;\n  static spinnerTimer: any=null;\n  static tmpPopupCallbackFn: Function=()=>{};\n  static contentManagerHeight = 0;\n\n\n  // static adminDetails: types.adminsTbl;\n  // static adminGroupDetail: types.groupsTbl;\n  /* =============== */\n\n\n}\n","// import * as AzPureFunctions from '../actions/stk/AzPureFunctions'\n// import * as types from '../actions/stk/types'\nimport * as types from '../myApp/actions/types'\nimport store, { history }/* , { history }  */ from '../utils/store'\n// import { Variables } from './Defines' \n// import * as AzPureFunctions2 from './AzPureFunctions2'\nimport { connect } from 'react-redux'\nimport { push, goBack as routerGoBack, } from 'connected-react-router'\n// import * as AzPureFunctions2 from './AzPureFunctions2'\n// import reduxInitialState from '../myApp/actions/reduxInitialState'\n// import { Alert, BackHandler } from 'react-native'\n// import * as AzPureFunctions2 from './AzPureFunctions2';\nimport * as myApp from '../myApp/actions'\n// import { useHistory } from 'react-router'\n// import { History } from 'history'\n// import React from 'react'\nimport { } from 'redux-promise-middleware'\nimport { delay } from './AzPureFunctions2'\nimport { BackHandler, Platform } from 'react-native'\n\n// import {  Navigate, useNavigate } from 'react-router-native';\n// export const storeVariables: Readonly<types.reduxInitialState> = AzPureFunctions2.hardObjectCopy(reduxInitialState)\n// export  const  storeVariables   = AzPureFunctions2.hardObjectCopy(reduxInitialState)\n\n\n// export default class gif { \n/* ============================================ */\n// export function changeCurrentLanguage(event) {\n//   this.setStore({ currentLanguage: event.target.value })\n// }\n\n/* ----------------------------- */\n// export function translateThis(phrase) {\n//   try {\n//     return Variables.data.languages[this.currentLanguage][phrase]\n//   } catch (err) {\n//     return 'no-translated-data!'\n//   }\n// }\n/* ----------------------------- */\n// export function pushStore(object:types.reduxInitialState) {\n//   gif.setStore({speciesHistory:gif.getStore('speciesHistory').push() })\n\n// } \n/* ----------------------------- */\nexport async function setStore_(object: types.reduxInitialState, time?) {\n  // console.log('setStore: ',object) \n\n  for (const key in object) {\n    // if (object.hasOwnProperty(key)) {\n    // let tmp\n    // if (typeof object[key] == 'object') {\n    //   tmp = AzPureFunctions2.hardObjectCopy(object[key])\n    // } else {\n    // tmp = object[key]\n    // }\n    /* ----- */\n    /* todo:rm this in production (storeVariables[key] will be transformed with webpack alias) */\n    // storeVariables[key] = object[key]\n    /* ----- */\n    /* note: await is optional if u dont need it rm it */\n    // return await store.dispatch({ type: key, payload: object[key] })\n    // const \n    // const asd:any=(dispatch)=> {\n    //   dispatch({ type: key, payload: object[key] })\n    // }\n    // const res= store.dispatch(asd)\n    // console.log(res)\n    // return res\n    // async function fakeFetch() {\n    //   return true\n    // }\n\n    const syncFn: any = () => dispatch =>\n      dispatch({\n        type: key,\n        payload:\n        {\n          promise: new Promise(async resolve => {\n            if (time) await delay(time)\n            resolve(object[key])\n          })\n        }\n      })\n\n    return await store.dispatch(syncFn())\n    // .then((e) => {\n    //   console.log('async from component A fulfilled', e)\n    //   console.log(1, gif.getStore('states_sales_onlySpecificItems'))\n    // })\n  }\n}\n/* ----------------------------- */\nexport async function setStore__(object: types.reduxInitialState, time?) {\n  // console.log('setStore: ',object) \n\n  for (const key in object) {\n    // if (object.hasOwnProperty(key)) {\n    // let tmp\n    // if (typeof object[key] == 'object') {\n    //   tmp = AzPureFunctions2.hardObjectCopy(object[key])\n    // } else {\n    // tmp = object[key]\n    // }\n    /* ----- */\n    /* todo:rm this in production (storeVariables[key] will be transformed with webpack alias) */\n    // storeVariables[key] = object[key]\n    /* ----- */\n    /* note: await is optional if u dont need it rm it */\n    // return await store.dispatch({ type: key, payload: object[key] })\n    // const \n    // const asd:any=(dispatch)=> {\n    //   dispatch({ type: key, payload: object[key] })\n    // }\n    // const res= store.dispatch(asd)\n    // console.log(res)\n    // return res\n    // async function fakeFetch() {\n    //   return true\n    // }\n    //   return dispatch => {\n    //     setTimeout(() => {\n    //       // Yay! Can invoke sync or async actions with `dispatch`\n    //       dispatch(increment())\n    //     }, 1000)\n    //   }\n    // }\n\n    const syncFn: any = (dispatch) => {\n      // if (time) await delay(time)\n      // console.log(dispatch)\n      setTimeout(() => {\n        dispatch({\n          type: key,\n          payload: object[key]\n        })\n      }, 1000)\n    }\n\n\n    return await store.dispatch(syncFn())\n    // .then((e) => {\n    //   console.log('async from component A fulfilled', e)\n    //   console.log(1, gif.getStore('states_sales_onlySpecificItems'))\n    // })\n  }\n}\n/* ----------------------------- */\nexport function resetStore() {\n  return store.dispatch({ type: 'resetStoreFn' })\n}\n/* ----------------------------- */\nexport function setStore(object: types.reduxInitialState) {\n  // console.log('setStore: ',object) \n\n  for (const key in object) {\n    store.dispatch({ type: key, payload: object[key] })\n    // if (object.hasOwnProperty(key)) {\n    // let tmp\n    // if (typeof object[key] == 'object') {\n    //   tmp = AzPureFunctions2.hardObjectCopy(object[key])\n    // } else {\n    // tmp = object[key]\n    // }\n    /* ----- */\n    /* todo:rm this in production (storeVariables[key] will be transformed with webpack alias) */\n    // storeVariables[key] = object[key]\n    /* ----- */\n    /* note: await is optional if u dont need it rm it */\n    // const \n    // const asd:any=(dispatch)=> {\n    //   dispatch({ type: key, payload: object[key] })\n    // }\n    // const res= store.dispatch(asd)\n    // // console.log(res)\n    // return res\n\n    // return ()/* : AsyncAction */ => ({\n    //   type: 'GET_DOG',\n    //   payload: fetch('https://dog.ceo/api/breeds/image/random')\n    //     .then(response => response.json()),\n    // });\n    // await store.dispatch({ type: key, payload: object[key] })\n    // }\n  }\n}\n// /* ----------------------------- */\n// export function setStore(object: types.reduxInitialState) {\n//   // console.log('setStore: ',object) \n//   for (const key in object) {\n//     if (object.hasOwnProperty(key)) {\n//       let tmp\n//       if (typeof object[key] == 'object') {\n//         tmp = AzPureFunctions2.hardObjectCopy(object[key])\n//       } else {\n//         tmp = object[key]\n//       }\n//       store.dispatch({ type: key, payload: tmp })\n//     }\n//   }\n// }\n/* -update each time on setStore and direct access(\n  performance issue on high changes:\n    just update changed field\n  )\n  todo:search for save store on global var and use its vars directly\n  -  use a fn such as getStore and if states has changed ,update var */\n/* ================================================================== */\n// export function getStore(key: string) {/* issue:how to just get what is in redux */\n// interface State {\n//   name: string;\n//   age: number;\n// }\ntype StateKeys = keyof types.reduxInitialState;\nexport function getStore<K extends StateKeys>(key: K): types.reduxInitialState[K] {/* issue[asdkjh3ui2]  */\n  return store.getState().gifr[key]\n}\n// getStore('activateTopMenu')\n// /* ---------------------- */\n// export function switchWaitingOn(mode) {\n//   return (dispatch) => {\n//     dispatch({ type: initialState.SET_WAITING_STATUS, payload: mode })\n//   }\n// }\n/* ---------------------- */\n// export function cmp(props,State) {\n//   connect(props)(class cmp extends React.Component<ReturnType<typeof props>, State> {\n// }\n/* ---------------------- */\nexport function glue(component, sprops) {\n  return connect(sprops)(component)\n}\n/* ---------------------- */\n// export function goto(routeName, params = null, his: History<any>) {\n// type asd=  typeof types.routes_\n// type StateKeys2 = keyof asd;\n// goto('')\n// export function goto<K extends StateKeys2>(routeName: K, params = null ) {\nexport function goto(routeName: types.routes, params = null) {\n  /* todo[optional]:add types here(pages names) */\n  try {\n    if (myApp.sharedVars.mainScrollViewRef) myApp.sharedVars.mainScrollViewRef.scrollTo({ animated: true, y: 0 })\n  } catch (error) {/* in case this get changed by flatlist or something */\n    console.log(error)\n  }\n  // alert(JSON.stringify(['ok ',]))\n  // const goto6=useNavigate()\n\n  // Navigate({ to: routeName, state: params, replace: true  })\n  // return <Navigate />\n  // return\n  // goto6(routeName, {\n  //   // state:params,\n  //   replace:true,\n  // })\n  // await store.dispatch(push(routeName, params))\n  // history.replace('/Dashboard')\n  // history.listen(i=>\n  //   alert(JSON.stringify([i]))\n  //   ) \n  // history.location.pathname='/EsSlider'\n  // history.goBack() \n  // history  \n  // console.log(store.getState().router.location.pathname)\n  /* await */\n  store.dispatch(push(routeName, params))\n  // his.push(routeName, params)\n  // his.push(routeName, params)\n  /* ------------ */\n  /* note:this is temporary till fixing react router native problems */\n  try {\n    myApp.sharedVars.his.push(routeName, params)\n  } catch (error) {\n    console.error(error)\n  }\n  /* ------------ */\n  //  window.location.reload()\n  // alert(JSON.stringify([store.getState().router,]))\n  // let history = useHistory();\n\n  // await push(routeName, params)\n\n}\n/* ---------------------- */\nexport function goBack() {\n  // return null \n  // return dispatch => {\n  // dispatch(routerGoBack())\n  try {\n    if (myApp.sharedVars.mainScrollViewRef) myApp.sharedVars.mainScrollViewRef.scrollTo({ animated: true, y: 0 })\n  } catch (error) {/* in case this get changed by flatlist or something */\n    console.log(error)\n  }\n  store.dispatch(routerGoBack())\n  /* ------------ */\n  /* note:this is temporary till fixing react router native problems */\n  try {\n    myApp.sharedVars.his.goBack()\n  } catch (error) {\n    console.error(error)\n  }\n  /* ------------ */\n  // }\n}\n/* ---------------------- */\n/**\n * \n * @returns  '/' + types.routes\n */\nexport function getRouteName(): types.routes {\n  // if (store.getState().router) {\n  // const rt: any = store.getState().router\n  const rt = store.getState().router\n  const routeName: any = rt.location.pathname\n  return routeName\n  // }\n  // return null\n}\n// /* ---------------------- */\n// export function getRouteName() {\n//   if (store.getState().router) {\n//     // const rt: any = store.getState().router\n//     const rt = store.getState().router\n//     const routeName = rt.location.pathname\n//     return routeName ? routeName : null\n//   }\n//   return null\n// }\n/* ---------------------- */\nexport function imgLoader(path: string) {\n  const imageComponentPlatformQuirk = Platform.OS == 'web' ? 'assets/' : 'asset:/'\n  // return { uri: (imageComponentPlatformQuirk + 'media/images/' + path) }\n  return { uri: (imageComponentPlatformQuirk + 'images/' + path) }\n  // return { uri: require('../myApp/media/images/' + path)  }\n  // return { uri: require('../../../public/assets/media/images/'+path)  }\n  // const assetDir_a = Platform.OS == 'web' ? './' : 'file:///android_asset'\n}\n\n/* ---------------------- */\n/**\n * \n * @returns  '/' + types.routes\n */\nexport function getPrvPage() {\n  const pages = history.entries\n  return pages[pages.length - 2].pathname\n}\n/* ---------------------- */\nexport function getRouteParams() {\n  // return null\n  // if (store.getState().router) {\n  // const rt: any = store.getState().router\n  const rt = store.getState().router\n  const routeName = rt.location.state\n  // myApp.sharedVars.his.location.state\n  return routeName\n  // }\n  // return null\n}\n// /* ---------------------- */\n// export function getRouteParams() {\n//   // return null\n//   if (store.getState().router) {\n//     // const rt: any = store.getState().router\n//     const rt = store.getState().router\n//     const routeName = rt.location.state\n//     return routeName ? routeName : null\n//   }\n//   return null\n// }\n/* ---------------------- */\nexport function handleBackPress_() {\n\n  try { /* using try catch since it is still possible to have err on some devices(and back btn not worth an app crash) */\n    /* ---------- */\n    /* prevent back btn functionality while spinner is active */\n    if (getStore('spinnerDetails')?.visible) {\n      return true\n    }\n    /* ---------- */\n    /* manage paths */\n    const c_r: types.routes = getRouteName().split('/')[1] as any\n    // alert(JSON.stringify([c_r,]))\n    const ignoreBackBtn: types.routes[] = [\n      'Dashboard',\n      '',\n      'Init',\n    ]\n    console.log(getRouteName())\n    if (ignoreBackBtn.includes(c_r)) {\n\n    } else {\n      goBack()\n    }\n    return true\n  } catch (error) {\n    console.log(error)\n    return true\n  }\n\n}\n/* ---------------------- */\nexport function handleBackPress() {\n  BackHandler.addEventListener('hardwareBackPress', () => {\n    try { /* using try catch since it is still possible to have err on some devices(and back btn not worth an app crash) */\n\n\n    /* ---------- */\n    /* prevent back btn functionality while spinner is active */\n    if (getStore('spinnerDetails')?.visible) {\n      return true\n    }\n    /* ---------- */\n    /* manage paths */\n      const c_r: types.routes = getRouteName().split('/')[1] as any\n    // alert(JSON.stringify([c_r,]))\n    const ignoreBackBtn: types.routes[] = [\n      'Dashboard',\n      '',\n      'Init',\n    ]\n      console.log(getRouteName())\n    if (ignoreBackBtn.includes(c_r)) {\n      // if (c_r != '/AdminDashboard' && c_r != '/EsSlider' && c_r != '/' && c_r != '/Init') {\n      //     return false\n      // } else {\n      // return true\n      // alert(JSON.stringify(['cant go back',]))\n      myApp.showPupop({\n        title: 'exit',\n        content: 'exit the app?',\n        type: 'confirm',\n        callbackFn: (e) => {\n          if (e) {\n            try {\n              BackHandler.exitApp()\n            } catch (error) {\n              console.log(error)\n            }\n          }\n        }\n      })\n    } else {\n      goBack()\n    }\n    return true\n    } catch (error) {\n      console.log(error)\n      return true\n    }\n  })\n}\n//   // return null\n\n//   const c_r = getRouteName()\n//   // alert(JSON.stringify([c_r,]))\n//   if (c_r == 'AdminDashboard') {\n//     return false\n//   } else {\n//     goBack()\n//     return true\n//   }\n// }\n/* ---------------------- */\n// export function handleBackPress() {\n//   // return null\n//   //  gif.goBack()\n//   const c_r = getRouteName()\n//   if (c_r == 'AdminDashboard') {\n//     // alert(JSON.stringify([,]))\n//     // Alert.alert(\n//     //               ' ',\n//     //               'ا د؟',\n//     //               [\n//     //                   { text: 'خیر', onPress: () => console.log('cancel exit !'), style: 'cancel' },\n//     //                   { text: 'بله', onPress: () => { this.goto('/'); BackHandler.exitApp() } },\n//     //               ]\n//     //           )\n//   } else {\n\n//   }\n//   return true\n\n// }\n/* ================================================================== */\n/* ================================================================== */\n/* ================================================================== */\n/* ================================================================== */\n/* ================================================================== */\n/* ----------------------------- */\n\n// }\n/* shortcuts */\n// export const uif = AzPureFunctions2\n// export const exct = store.dispatch\n/* ---------------------- */\n// export function getCurrentPlatform() {\n//   if (window && window.cordova && window.device) {\n//     if (window.device.platform == 'android') {\n//       return 'cordova_android'\n//     } else if (window.device.platform == 'ios') {\n//       return 'cordova_ios'\n//     } else if (window.device.platform == 'browser') {\n//       return 'cordova_browser'\n//     }\n//   }\n// else if (Platform.OS === 'android') {\n//     return 'rn_android'\n// } else if (Platform.OS === 'ios') {\n//     return 'rn_ios'\n// }\n//   return 'simple_web'\n// }\n/* ---------------------- */\n// export const currentPlatform = getCurrentPlatform()\nexport const isDev = true\n// export const isWeb = Platform.OS === 'web'\n// export const isNative = Platform.OS === 'ios' || Platform.OS === 'android'\n// export const isIos = Platform.OS === 'ios' \n/* native --------------------------- */\n// import { Platform } from 'react-native';\n// export const isDev = process.env.NODE_ENV !== 'production';\n/* hybrid ---------------------------*/\n/* TODO: handle electron */\n/* TODO: handle node */\n// let Platform={os:'web'} \n/* ---------------------- */\n/* ---------------------- */\n/* ---------------------- */\n/* ---------------------- */\n","import * as gif from '../../libs/gif'\n\nimport * as myApp from '.'\nimport * as configs from './configs'\nimport * as AzPureFunctions2 from '../../libs/AzPureFunctions2'\n// import MainScene from \"./MainScene\";\nimport * as types from './types'\nimport sharedVars from './sharedVars'\nimport { Platform, Animated, Image, Alert } from 'react-native'\n\n\n/* ============================================================ */\n/* ============================================================ */\n\n\n/* ============================================================ */\n// export function createAnimation(args:{from:{value:number},to:{value:number}}) {\n//   const xVal = new Animated.Value(0)\n//   const start = Animated.timing(xVal, { toValue: args.from.value, useNativeDriver: true, })\n//   const undo = Animated.timing(xVal, { toValue: -args.to.value, useNativeDriver: true })\n//   const anim={\n//     start:start.start,\n//     undo:undo.start\n//   }\n//   return anim\n// }\n\n// /* --------------- */\n/* --------------- */\nexport function collectErrors(args: {\n  val: string,\n  match?: RegExp,\n  max?: number,\n  min?: number,\n  matchErr?: string,\n}) {\n  /*\\w: is a shortcut for [a-zA-Z0-9_]...4 to 20...$ is the end */\n  //   const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n  // const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n  // const reg=new RegExp(args.match,'i') \n  // const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  // const res=\n\n  const errors: string[] = []\n  if (args.match && !args.match.test(args.val)) {\n    errors.push(args.matchErr ? args.matchErr + '\\n' : 'not allowed\\n')\n  }\n  if (args.max && args.val.length > args.max) {\n    // if (args.max && args.val.length >= args.max) {\n    errors.push(`cant be more than ${args.max}\\n`)\n  }\n  if (args.min && args.val.length < args.min) {\n    // if (args.min && args.val.length <= args.min) {\n    errors.push(`cant be less than ${args.min}\\n`)\n  }\n  // if(errors.length>0)return errors\n  // return false\n  return errors\n  /* /^\n  (?=.*\\d)          // should contain at least one digit\n  (?=.*[a-z])       // should contain at least one lower case\n  (?=.*[A-Z])       // should contain at least one upper case\n  [a-zA-Z0-9]{8,}   // should contain at least 8 from the mentioned characters\n$/ */\n}\n/* --------------- */\nexport function loadMore2() {\n  /* note:dont wory about using \"this\" it just changes its class variables not window object or other used fn thisBinds */\n  // console.log('loadMore2 process')\n  // if (this.loadingMore) return false\n  //because first we have some things in limitedItems and below fn will add more to it.\n  //why dont we get everything from start frrom this fn\n  // console.log(this.state.limitedItems)\n  // alert(JSON.stringify([this.range,]))\n\n  //@ts-expect-error\n  const _this = this as any\n  if (_this.state.loadingMore2) return false\n  const nextStartRangeTmp = _this.range + _this.limit\n  const restOfItems = _this.filteredItems.slice(nextStartRangeTmp, nextStartRangeTmp + _this.limit)\n  if (restOfItems.length == 0) {\n    console.log('no more to load')\n    return\n  }\n  console.log('loading more...')\n  _this.setState({ loadingMore2: true, })\n  // _this.loadingMore = true\n\n  setTimeout(() => {\n    _this.range = nextStartRangeTmp\n    const newItems = [..._this.state.limitedItems, ...restOfItems]\n    console.log(newItems.length)\n    _this.setState({\n      limitedItems: newItems,\n    })\n    _this.loadMoreIndexr += 1\n    _this.setState({ loadingMore2: false, })\n    // _this.loadingMore = false\n\n  }, 500)\n}\n/* --------------- */\n/* ============================================================ */\nexport function resetScroll() {\n  /* todo:we also need to disable current loading process(loadMore2) */\n  // myApp.showSpinner({ content: '' })\n  return new Promise(resolve => {\n    //@ts-expect-error\n    const _this = this as any\n    _this.range = 0 /* reset range */\n    // _this.loadMoreIndexr = 1\n    // _this.scrollRef.eve\n    _this.loadingMore = true /* disable scroll event(note:_this var has a different usage but since _this variable also disables scroll event we've used _this) */\n    _this.setState({ loadingMore2: true, })\n    // _this.scrollRef.scrollTo({ x: 0, y: 0, animated: false })\n    try {\n      _this.animXVal.stopAnimation(() => {\n        _this.animXVal.setValue(0)\n        _this.scrollRef.scrollToIndex({ animated: true, index: 0 })\n      })\n    } catch (error) {\n      if ((error as any).name == 'Invariant Violation') {\n        // console.log(error)\n        console.log('Invariant Violation: scrollToIndex out of range: 0 vs -1')\n      } else {\n        console.error(error)\n      }\n    }\n    setTimeout(() => {\n      /* note:_this is necessary since scrollTo is not a async fn */\n      _this.setState({ loadingMore2: false, })\n      _this.loadingMore = false\n      return resolve(true)\n      // myApp.showSpinner(false)\n    }, 100)\n  })\n}\n/* ============================================================ */\nexport function resetScroll2() {\n  /* todo:we also need to disable current loading process(loadMore2) */\n  // myApp.showSpinner({ content: '' })\n  return new Promise(resolve => {\n    //@ts-expect-error\n    const _this = this as any\n    _this.range = 0 /* reset range */\n    // _this.loadMoreIndexr = 1\n    // _this.scrollRef.eve\n    // _this.loadingMore = true /* disable scroll event(note:_this var has a different usage but since _this variable also disables scroll event we've used _this) */\n    // _this.setState({ loadingMore2: true, })\n    // _this.scrollRef.scrollTo({ x: 0, y: 0, animated: false })\n    try {\n      _this.animXVal.stopAnimation(() => {\n        _this.animXVal.setValue(0)\n      })\n      _this.scrollRef.scrollToIndex({ animated: false, index: 0 })\n    } catch (error) {\n      if ((error as any).name == 'Invariant Violation') {\n        // console.log(error)\n        console.log('Invariant Violation: scrollToIndex out of range: 0 vs -1')\n      } else {\n        console.error(error)\n      }\n    }\n    // setTimeout(() => {\n    //   /* note:_this is necessary since scrollTo is not a async fn */\n    //   // _this.setState({ loadingMore2: false, })\n    //   _this.loadingMore = false\n    return resolve(true)\n    //   // myApp.showSpinner(false)\n    // }, 1)\n  })\n}\n/* ============================================================ */\nexport function idShrinker(id: string) {\n  return id.slice(0, 4).toLowerCase()\n}\n/* ============================================================ */\n// export async function isAdmin(currentMarketer) {\n//   return ['admin', 'sub_admin'].includes(currentMarketer.role)\n// }\n/* ============================================================ */\n// export async function resizeImage(args: { file: File }) {\n//   // if( !( /image/i ).test( file.type ) )\n//   // { alert( \"File \"+ file.name +\" is not an image.\" );\n//   //     return false;\n//   // }\n//   const reader = new FileReader();\n//   reader.readAsArrayBuffer(args.file);\n//   reader.onload = function (event) {\n//     // blob stuff\n//     var blob = new Blob([event.target['result']]); // create blob...\n//     window.URL = window.URL || window.webkitURL;\n//     var blobURL = window.URL.createObjectURL(blob); // and get it's URL\n//     var image = new Image();\n//     image.src = blobURL;\n//     // image.onload=()=>{\n//     // }\n\n\n//     const img = document.createElement(\"img\");\n//     // console.log(e.target)\n//     // throw ''\n//     const asd: any = e.target['result']\n//     img.src = asd;\n//     var canvas = document.createElement('canvas');\n\n//     var width = img.width;\n//     var height = img.height;\n\n//     // // calculate the width and height, constraining the proportions\n//     // if (width > height) {\n//     //   if (width > max_width) {\n//     //     //height *= max_width / width;\n//     //     height = Math.round(height *= max_width / width);\n//     //     width = max_width;\n//     //   }\n//     // } else {\n//     //   if (height > max_height) {\n//     //     //width *= max_height / height;\n//     //     width = Math.round(width *= max_height / height);\n//     //     height = max_height;\n//     //   }\n//     // }\n\n//     // resize the canvas and draw the image data into it\n//     canvas.width = width;\n//     canvas.height = height;\n//     var ctx = canvas.getContext(\"2d\");\n//     ctx.drawImage(img, 0, 0, width, height);\n\n//     preview.appendChild(canvas); // do the actual resized preview\n\n//     return canvas.toDataURL(\"image/jpeg\", 0.7); // get the data from canvas as 70% JPG (can be also PNG, etc.)\n\n//   }\n// /* ============================================================ */\nexport async function toDataURL(url: string) {\n  return await fetch(url)\n    .then(response => response.blob())\n    .then(blob => new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onloadend = () => resolve(reader.result)\n      reader.onerror = reject\n      reader.readAsDataURL(blob)\n    }))\n}\n// /* ============================================================ */\nexport async function dataURLtoFile(dataurl, filename) {\n\n  const arr = dataurl.split(',')\n  const mime = arr[0].match(/:(.*?);/)[1]\n  const bstr = atob(arr[1])\n  let n = bstr.length\n  const u8arr = new Uint8Array(n)\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n)\n  }\n\n  return new File([u8arr], filename, { type: mime })\n}\n// // /* ============================================================ */\n// export async function resizeImage(args: { file: File, imgId, FbImageLoaderRef1 }) {\n\n//   // var fileName = args.file.name.split('.')[0];\n//   // var img = new Image();\n//   // img.src = URL.createObjectURL(args.file);\n//   // img.onload = function () {\n//   //   var canvas = document.createElement('canvas');\n//   //   canvas.width = img.width;\n//   //   canvas.height = img.height;\n//   //   var ctx = canvas.getContext('2d');\n//   //   ctx.drawImage(img, 0, 0);\n//   //   canvas.toBlob(async function (blob) {\n//   //     console.info(blob.size);\n//   //     var f2 = new File([blob], args.imgId + \".png\");\n//   //     console.log(URL.createObjectURL(f2))\n//   //     const res = await myApp.firebaseFns.uploadThis({\n//   //       file: f2,\n//   //       fileName: `${args.imgId}.png`,\n//   //     })\n//   //     args.FbImageLoaderRef1.refresh()\n//   //     console.log(res)\n\n//   //   }, 'image/jpeg', 0.5)\n//   // }\n\n//   // throw ''\n\n//   const reader = new FileReader();\n//   // Set the image for the FileReader\n//   let newFile: File\n//   // const form = document.getElementById('form');\n//   reader.onload = async function (e) {\n//     // console.log(e.target)\n//     // throw ''\n\n//     const stringFile: any = e.target['result']\n//     // console.log(asd)\n\n//     var blob = new Blob([stringFile]); // create blob...\n//     window.URL = window.URL || window['webkitURL'];\n//     var blobURL = window.URL.createObjectURL(blob); // and get it's URL\n//     console.log(blobURL)\n\n//     const img = new Image()\n//     img.src = stringFile;\n//     img.onload = function () {\n//       // console.log('asd')\n//       // console.log(img.src)\n\n\n//       // Create your canvas\n//       // let res1=''\n//       const canvas = document.createElement(\"canvas\");\n//       const ctx = canvas.getContext(\"2d\");\n//       ctx.drawImage(img, 0, 0);\n//       canvas.width = img.width;\n//       canvas.height = img.height;\n\n//       // ctx.drawImage(img, 0, 0,500,500);\n//       // ctx.stroke()\n//       // ctx.lineTo(50,50)\n//       // ctx.lineTo(0,0)\n//       // ctx.fillText('ooooooooooooookooooooooooooooook',0,0)\n//       // ctx.save()\n//       // const res1 = canvas.toDataURL()\n//       // console.log('res1')\n//       // console.log(res1)\n//       // const a = document.createElement(\"img\");\n//       // a.src=res1\n//       // a.width=500\n//       // a.height=500\n//       // a.setAttribute('style','position:fixed;left:0;top:0;z-index:8')\n\n//       // a.style\n\n\n//       canvas.toBlob(async (blob) => {\n//         const newFile = new File([blob], 'iii.png')\n//         const asd: any = blob\n//         const res = await myApp.firebaseFns.uploadThis({\n//           file: asd,\n//           fileName: `${args.imgId}.png`,\n//         })\n\n//         // args.FbImageLoaderRef1.directSet(window.URL.createObjectURL(blob))\n//         // args.FbImageLoaderRef1.refresh()\n//         console.log(res)\n\n//       }, 'image/jpeg', 0.5)\n\n//     }\n//     // const resized = canvas.toDataURL(args.file.type)\n//     // // console.log('this must be false', resized == res1)\n//     // console.log(111,resized)\n//     // //  newFile= new File([Buffer.from(resized) ], args.imgId,{type:'image/png'}, );\n//     // // const asdss=new Blob([resized]).slice()\n//     // newFile=dataURLtoFile(resized,args.imgId)\n\n//     // var blob = new Blob([resized]); // create blob...\n//     // window.URL = window.URL || window['webkitURL'];\n//     // var blobURL = window.URL.createObjectURL(blob); // and get it's URL\n//     // console.log('xxx',blobURL)\n\n//     // function urltoFile(url, filename, mimeType) {\n//     //   return (fetch(url)\n//     //     .then(function (res) { return res.arrayBuffer(); })\n//     //     .then(function (buf) { return new File([buf], filename, { type: mimeType }); })\n//     //   );\n//     // }\n//     // newFile = await urltoFile(resized, args.imgId, 'image/png')\n\n\n//     // console.log('222222222222222222222222')\n//     // console.log(newFile)\n//     // console.log('222222222222222222222222')\n\n//     // const asdkjasd=Buffer.from(resized)\n//     // const res = await myApp.firebaseFns.uploadThis({\n//     //   file: newFile,\n//     //   fileName: `${args.imgId}.png`,\n//     // })\n//     // args.FbImageLoaderRef1.refresh()\n//     // console.log(res)\n//     //we want to pass a file not string!\n//     // const reader = new FileReader();\n//     // reader.readAsDataURL();\n//     // reader.onload = e => {\n//     //   console.log(e.target)\n//     // }\n//     //   reader.onload = function (event) {\n//     //     // blob stuff\n//     // var blob = new Blob([resized])\n//     // blob.\n//     // result = res2\n\n//     // const newinput=document.createElement('input')\n//     // newinput.name = 'images';\n//     // newinput.type = 'hidden'\n//     // newinput.onchange=e=>{\n//     //   // result=e.target['files'][0]\n//     //   result=e.target['files'][0]\n//     //   console.log(result)\n//     // }\n//     // newinput.click()\n//     // newinput.value = resized;\n//     // newinput.select()\n//     // newinput.remove()\n\n//     // form.appendChild(newinput)\n//     // setTimeout(() => {\n//     //   const asdasd= document.getElementsByName('images') \n//     // console.log(asdasd)\n//     // console.log(newinput.files)\n//     // }, 3000);\n\n//     // console.log(newinput.files[0])\n//     // result=newinput.files[0]\n\n//   };\n//   reader.readAsDataURL(args.file);\n\n//   // reader.onloadend=e=>console.log(e.target)\n\n//   // inpTmp2.\n//   // const newasd=new File()\n//   return newFile\n//   // return  result\n// } \n/* ============================================================ */\nexport function createAnim(args: { from, to, duration?: number }) {\n  const animXVal = new Animated.Value(0)\n  const timingOptions = { toValue: 1, useNativeDriver: true }\n  if (args.duration) timingOptions['duration'] = args.duration\n  const anim = Animated.timing(animXVal, timingOptions)\n  const val = animXVal.interpolate({ inputRange: [0, 1], outputRange: [args.from, args.to] })\n  function run(): Promise<boolean> {\n    return new Promise(resolve => {\n      anim.start(() => {\n        animXVal.setValue(0)\n        resolve(true)\n      })\n    })\n  }\n  return {\n    // animXVal, anim, \n    val: val,\n    run,\n  }\n}\n/* ============================================================ */\nexport function showPupop(args: (false | {\n  duration?: number,\n  title: string,\n  content?: string,\n  icon?: string,\n  type?: 'alert' | 'confirm',\n  callbackFn?: Function,\n  dontCloseAfterUserClick?: boolean,\n  withCheckBox?: {\n    defaultValue: boolean,\n    text: string,\n  },\n\n})) {\n  // myApp.firebaseFns.get()\n  if (!args) {\n    gif.setStore({ popupDetail: { visible: false } })\n    myApp.sharedVars.tmpPopupCallbackFn = () => { }\n  } else {\n    myApp.sharedVars.tmpPopupCallbackFn = args.callbackFn ? args.callbackFn : () => { }\n    gif.setStore({\n      popupDetail: {\n        visible: true,\n        content: args.content,\n        title: args.title,\n        icon: args.icon,\n        type: args.type,\n        withCheckBox: args.withCheckBox,\n        /* #issue:asdq2322wfw223 */\n        // callbackFn: (res) => { \n        //   if (!args.dontCloseAfterUserClick) gif.setStore({ popupDetail: { visible: false } })\n        //   if (args.callbackFn) args.callbackFn(res)\n        // }\n      }\n    })\n  }\n}\n// let popupDetailTimer = null\n/* ---------- */\n/** we use this fn instead of saving a callback fn in redux store and use it later when user click on ok/cancel.\n * \n * note: we can define an event on reducers and call it from component (with a value true,false...) \n  but even there we needed to saved the callback we passed to showPopup fn. so that would be just a fancy way to directly call this fn from component\n */\nexport function callThePopupCallback(res, checkBoxChecked: boolean) {\n  gif.setStore({ popupDetail: { visible: false } })\n  myApp.sharedVars.tmpPopupCallbackFn(res, checkBoxChecked)/* this is for unit-testing */\n}\n/* ============================================================ */\n/*  ===================================== */\n// let popupDetailTimer = null\nexport function showToast(args: (false | {\n  duration?: number,\n  title?: string,\n  content: string,\n  type?: 'alert' | 'confirm',\n  callbackFn?: Function,\n  dontCloseAfterUserClick?: boolean,\n\n})) {\n\n  if (!args) {\n    gif.setStore({ toastDetails: { visible: false } })\n  } else {\n    // gif.setStore({ toastDetails: { visible: false } })\n    gif.setStore({\n      toastDetails: {\n        visible: true,\n        content: args.content,\n        title: !args.title ? null : args.title,\n        type: args.type,\n\n        /* callbackFn: (res) => {\n        if (!args.dontCloseAfterUserClick) gif.setStore({ toastDetails: { visible: false } })\n          if (args.callbackFn) args.callbackFn(res)\n        } */\n      }\n    })\n\n    if (sharedVars.toastTimer) clearTimeout(sharedVars.toastTimer)\n    sharedVars.toastTimer = setTimeout(() => {\n      gif.setStore({ toastDetails: { visible: false } })\n      // console.warn([].slice.call(args.callbackFn, 1));\n      // console.warn(args.callbackFn.mock);\n      // console.warn(args.callbackFn.arguments);\n      // const asd=args.callbackFn\n      // console.log(args.callbackFn.arguments)\n      // mockUpload.mock.calls[0][0]\n      // if (args.callbackFn) args.callbackFn.apply(null,args.callbackFn.arguments)\n      if (args.callbackFn) args.callbackFn()\n      // if (args.callbackFn) args.callbackFn(...args.callbackFn.arguments)\n      // if (args.callbackFn) args.callbackFn.apply(null,args.callbackFn.mock.calls[0][0]) \n    }, args.duration ? args.duration : 2000)\n    // alert(JSON.stringify([,]))\n    // },  20000)\n\n  }\n}\n/* ============================================================ */\n// let popupDetailTimer = null\nexport function showSpinner(args: (false | {\n  content?: string,\n  duration?: number,\n  title?: string,\n  type?: 'alert' | 'confirm',\n  /** note:this wont work if u dont use the duration  */\n  callbackFn?: Function,\n  // dontCloseAfterUserClick?: boolean,\n\n})) {\n\n  if (!args) {\n    gif.setStore({ spinnerDetails: { visible: false } })\n  } else {\n    // gif.setStore({ spinnerDetails: { visible: false } })\n    gif.setStore({\n      spinnerDetails: {\n        visible: true,\n        content: args.content,\n        title: args.title,\n        type: args.type,\n        // callbackFn: (res) => {\n        //   if (!args.dontCloseAfterUserClick) gif.setStore({ spinnerDetails: { visible: false } })\n        //   if (args.callbackFn) args.callbackFn(res)\n        // }\n      }\n    })\n\n    if (sharedVars.spinnerTimer) clearTimeout(sharedVars.spinnerTimer)\n    if (args.duration) {\n      sharedVars.spinnerTimer = setTimeout(() => {\n        gif.setStore({ spinnerDetails: { visible: false } })\n        if (args.callbackFn) args.callbackFn()\n      }, args.duration)\n    }\n\n\n  }\n}\n/* ============================================================ */\nexport function convertNumToMKNumber(num: number) {\n  const fnNum = num.toString()\n  if (!fnNum || fnNum == '0') return '$0'\n  if (fnNum.length == 7) return `$${fnNum[0]}.${fnNum[1]}M`\n  if (fnNum.length == 6) return `$${fnNum[0]}.${fnNum[1]}K`\n  return `$${fnNum}`\n}\n/* ============================================================ */\n","import * as gif from '../../libs/gif'\n// import main from \"../main\";\nimport visNetwork from \"vis-network\";\nimport chartJs from \"chart.js\";\n// import firebase from \"firebase/app\";\n// import * as myApp from \".\";\n// import * as AzPureFunctions2 from \"../../libs/AzPureFunctions2\";\n// // import MainScene from \"./MainScene\";\nimport * as types from './types'\nimport EsWebView from '../pages/EsWebView'\nimport * as myApp from '../actions/'\nimport * as AzPureFunctions2 from '../../libs/AzPureFunctions2'\nimport { Dimensions } from 'react-native'\nimport { technologie } from './configs';\n\n\n/* ============================================================ */\n// export function onChildMessage(args: { data: { event: string, content: any }, webview1Ref: React.RefObject<EsWebView> }) {\nexport async function onChildMessage(args: { data: { event: string, content: any }, webview1Ref: EsWebView }) {\n  if (args.data.event == 'imReady2') {\n    // console.log([\n    //   args.webview1Ref, gif.getStore('confirmedUsersPerDay'), gif.getStore('confirmedSalesPerDay')\n    // ])\n    // createChartConfigAndSendIt(args.webview1Ref, gif.getStore('confirmedUsersPerDay'), gif.getStore('confirmedSalesPerDay'))\n  } else if (args.data.event == 'imReady') {\n    // alert(JSON.stringify([,] ))\n    /* ------------ */\n    /* Note:below line is just for testing purposes(cypress) */\n    // window['firstItemForCypressTesting']=args.data.content.firstItemForCypressTesting\n    /* ------------ */\n\n    const res = await convertMarketerClassToVisNet(myApp.configs.technologies)\n    sendRenderNetworkCommand(args.webview1Ref, res)/* todo:send ref here as param */\n    /* ------ */\n    /* Note:this is just for cypress testing , so cypress can better undrestant */\n    // window['askdjnkdj'] = true\n    // setTimeout(() => {\n    //   window['askdjnkdj'] = false\n    // }, 1000); /* or instead change this on page change */\n    /* ------ */\n  } else if (args.data.event == 'userPressedANode') {\n\n  } else {\n    console.warn('this event is not supported', args.data)\n    // args.webview1Ref.sendMessageToWebView({\n    //   event: 'test',\n    //   content: {\n    //     'test':'ok'\n    //   }\n    // })\n  }\n}\n/* ================================= */\nexport async function createChartConfigAndSendIt(webview1Ref: EsWebView, confirmedUsersPerDay, confirmedSalesPerDay) {\n  console.log({ confirmedSalesPerDay })\n  // const data = {\n  const chartConfigs: chartJs.ChartConfiguration = {\n    type: 'line',\n    data: {\n      labels: confirmedUsersPerDay.map(i => i.x),\n      datasets: [\n        {\n          label: 'marketers',\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgb(255, 99, 132)',\n          data: confirmedUsersPerDay.map(i => i.y).reverse()\n        },\n      ]\n    },\n    options: {\n      /* asdi28hsa */\n      // height:200,\n    }\n  }\n  const chartConfigs2: chartJs.ChartConfiguration = {\n    type: 'line',\n    data: {\n      labels: confirmedSalesPerDay.map(i => i.x),\n      datasets: [\n        {\n          label: 'sales',\n          backgroundColor: 'rgb(55, 99, 32)',\n          borderColor: 'rgb(55, 19, 12)',\n          data: confirmedSalesPerDay.map(i => i.y).reverse()\n        }\n      ]\n    },\n    options: {\n      /* asdi28hsa */\n      // height:200,\n    }\n  }\n  webview1Ref.sendMessageToWebView({\n    event: 'rerenderWholeNetwork',\n    content: [\n      chartConfigs,\n      chartConfigs2,\n    ]\n  })\n}\n/* ================================= */\nexport async function convertMarketerClassToVisNet(skills: { [key: string]: technologie }) {\n\n  const nodes: visNetwork.Node[] = [\n    // { id: 1, label: \"you\", level: 0, image: 'http://localhost:3000/images/logo.png' },\n  ]\n  const edges: visNetwork.Edge[] = []\n\n  const node: visNetwork.Node = {\n    id: 'aminZarei72',\n    label: 'Amin Zarei',\n    image: `/assets/images/aminZarei.png`,\n    level: 0,\n  }\n  nodes.push(node)\n\n  for (const id in skills) {\n    // for (let index = 0; index < skills.length; index++) {\n    const techno = skills[id];\n\n    const node: visNetwork.Node = {\n      id: id,\n      label: techno.title,\n      image: `/assets/images/technologies/${techno.icon}.png`,\n      level: techno.level,\n    }\n    // node['image'] = imgPath\n\n    nodes.push(node)\n    if (techno.parent) {\n      // edges.push({ from: id, to: techno.parent })\n      edges.push({ from: techno.parent, to: id })\n    } else {\n      // edges.push({ from: id, to: 'aminZarei72' })\n      edges.push({ from: 'aminZarei72', to: id })\n    }\n  }\n\n  return { nodes, edges }\n}\n\n/* ================================= */\n// export async function sendRenderNetworkCommand(webview1Ref: React.RefObject<EsWebView>, childAndItself: types.marketer[]) {\nexport async function sendRenderNetworkCommand(webview1Ref: EsWebView, data: {\n  nodes: visNetwork.Node[];\n  edges: visNetwork.Edge[];\n}) {\n  //  alert(JSON.stringify([myApp.configs.defaultMarketerImg,]))\n  // alert(JSON.stringify([Dimensions.get('window').width,]))\n  // alert(JSON.stringify([Dimensions.get('window').height,]))\n  // alert(JSON.stringify([Dimensions.get('screen').scale,]))\n  // alert(JSON.stringify([myApp.sharedVars.contentManagerHeight,]))\n  const options: visNetwork.Options = {\n    layout: {\n      hierarchical: true,\n    },\n    nodes: {\n      /* todo: change this with actual server  */\n      brokenImage: myApp.configs.defaultMarketerImg,\n      image: myApp.configs.defaultMarketerImg,\n      shadow: { color: 'gray', enabled: true, size: 20, x: 10, y: 10 },\n      shape: 'circularImage',/* image|circularImage... */\n      // color:{background:}\n      // shapeProperties:{\n      // borderRadius:50,\n      // useBorderWithImage:true,\n\n      // useImageSize:true,\n      // interpolation:true,\n      // },\n    },\n    edges: {\n      color: 'green',\n      smooth: true,\n    },\n\n\n    /* ---------- */\n    /* Note:in case u had problem in Anbox vm ,try below sertting */\n    /*  width: (Dimensions.get('window').width),\n     height: (myApp.sharedVars.contentManagerHeight - 100),\n  */\n    /* ---------- */\n\n    // margin: '100px ',\n    // width: \"360px\",\n    // height: \"640px\",\n    // height: (Dimensions.get('window').height).toString(),\n    // width: (Dimensions.get('window').width).toString(),\n    // height: (myApp.sharedVars.contentManagerHeight - 130).toString(),\n    autoResize: true,\n    // zoom: 0.5,\n  }\n\n  // webview1Ref.current.sendMessageToWebView({\n  webview1Ref.sendMessageToWebView({\n    event: 'rerenderWholeNetwork',\n    content: {\n      nodes: data.nodes,\n      edges: data.edges,\n      options,\n    }\n  })\n}\n\n/* ============================================================ */\n/* ============================================================ */\n","import * as myApp from '../';\nimport * as gif from '../../../libs/gif';\nimport * as AzPureFunctions2 from '../../../libs/AzPureFunctions2';\nimport { Platform } from 'react-native';\n/* ============================================================ */\nexport async function initAppAfterComponentDidMount() {\n \n  myApp.showToast({\n    content: 'hi :)',\n  })  \n  gif.goto('Dashboard')\n  // gif.goto('WebviewLoader')\n\n  // gif.goto('ItemDetails',{item:myApp.configs.pagesData[0]})\n\n  \n//   gif.goto('EsSlider', {\n//     pagesData: myApp.configs.pagesData,\n// })\n}\n","\n// import * as asd from './firebaseFns'\nimport * as asd2 from './configs'\nimport sharedVars_ from './sharedVars'\n\n// export const firebaseFns=asd\nexport const configs=asd2\nexport const sharedVars=sharedVars_\n\n// export { default as firebaseFns } from './firebaseFns';\n// export { default as configs } from './configs';\n// export { default as sharedVars } from './sharedVars';\n  \n\nexport * from './fns'\n// export * from './init'\n// export * from './sharedVars';\n// export * from './login'\nexport * from './webViewCommunicationFns'\n// export * from './registerNewUser';\n// export * from './registerAsMarketer';\nexport * from './init'\n// export * from './groups/fns'\n// export * from './manageHierachyData'\n\n// export * from './messages'\n// export * from './users/registerNewUser'\n// export * from './users/fns'\n\n// export * from './sales/fns'\n\n\n// export * from './loadAppDataAfterWebviewLoader';\n// export * from './loadAppDataAfterWebviewLoader2';\n// export * from './fns';\n\n// export default asd\n \n","import { combineReducers } from 'redux'\nimport { connectRouter, RouterState } from 'connected-react-router'\n// import * as types from '../actions/stk/types'\n// import * as types from '../actions/stk/types'\nimport * as types from '../myApp/actions/types'\nimport reduxInitialState from '../myApp/actions/reduxInitialState'\nimport { History } from 'history'\n// import reduxInitialState from '../actions/myApp/newFunctions/reduxInitialState'\n// import gifr ;from './gifr'\n// const routerasd:RouterState=\n// reduxInitialState_.prototype\n// console.log(asd)\n// alert(JSON.stringify([,]))\n// combineReducers({\n//   router: routerReducer\n//   //... reducers //your reducers!\n// }),\n\n\nexport default (history: History) => combineReducers({/* orginal */\n  router: connectRouter(history),/* orginal */\n  /* ---------- */\n  /* using rr6 */\n  /* export default (routerReducer) => combineReducers({\n    router: routerReducer,  */\n  /* ---------- */\n\n  // asd: history.location.pathname,\n  // gifr,\n\n  gifr: (state: types.reduxInitialState = reduxInitialState, action: types.action) => { /* use this method for fast development */\n    /* todo:we can rerurn { ...state,[type]: action.payload} directly without loop(object like) */\n    /* todo:if we dont use switch case this will runs multiple times each time we call setStore or maybe other fns */\n    /* note:below for is just to prevents future errors when calling an unknown type */\n    /* --------- */\n    /* old  */\n    /* for (const type in reduxInitialState) {\n      if (action.type == type) return { ...state, [type]: action.payload }\n      if (!action.type) {\n        console.warn('no action:', action.type)\n        return reduxInitialState\n      }\n    }\n    return state */\n    /* --------- */\n    /* new */\n    if (action.type == 'resetStoreFn') {\n      // state=null\n      // console.log(reduxInitialState)\n      // return {}\n      return reduxInitialState\n    }\n    if (reduxInitialState[action.type] === undefined) {/* note:remember to not set reduxInitialState variables to undefined  */\n      /*these are normal: @@redux/INIT2.a.x.z.c @@redux/PROBE_UNKNOWN_ACTION_5.k.m.4.0.5 @@redux/INIT2.a.x.z.c  */\n      // console.log('unknown action:', action.type)\n      console.log('unknownAction')\n      return state\n    }\n\n    return { ...state, [action.type]: action.payload }\n\n    /* --------- */\n    /* ok for async(but skip it for now) */\n    /*  if(action.type.indexOf('_FULFILLED')>-1){\n       return { ...state, [action.type.split('_FULFILLED')[0]]: action.payload }\n     }else{\n       return { ...state, [action.type]: action.payload }\n     } */\n    // return { ...state, [action.type+'_FULFILLED']: action.payload }\n    /* --------- */\n    // switch (action.type) {\n    //   case 'GET_DOG_FULFILLED':\n    //     return {\n    //       isPending: false,\n    //       image: action.payload.message,\n    //     };\n\n    //   default: return state;\n    // }\n    /* --------- */\n\n  },\n})\n\n\n// /* ===================================================================== */\n// /* ===================================================================== */\n/* note:\nthis method is disabled for having less code!\nif you want to use redux development tools ,you may need to make this manually\n*/\n\n// export const types = { }\n// /* ===================================================================== */\n// /* ===================================================================== */\n// /* ===================================================================== */\n//     useGpu:'useGpu',\n//     isTfUsingGpu:'isTfUsingGpu',\n//     /* -------- */\n//     birdsFitnesses:'birdsFitnesses',\n//       TOTAL : 'TOTAL', \n//      counter : 'counter',\n//      slider:'slider',\n//      generationNumber : 'generationNumber',\n//     gravity : 'gravity',\n//     seeStructure:'seeStructure',  \n//     startDefenderDistanceRatio:'startDefenderDistanceRatio',\n//     increaseDistanceRatioEachLevel:'increaseDistanceRatioEachLevel',\n//     minDefenderDistanceRatio:'minDefenderDistanceRatio',\n//     checkNextLevelTimerDelay:'checkNextLevelTimerDelay',\n//     level:'level',\n//     /* -------- */\n//     hitedBird:'hitedBird',\n//     offScreenBirds:'offScreenBirds',\n//     savedBirdsLength:'savedBirdsLength',\n//     /* -------- */\n//     bestBirdOfCurrentBirdsScore:'bestBirdOfCurrentBirdsScore',\n//     previouseBestBirdScore:'previouseBestBirdScore',\n//     sumOfPreviousBirdsScore:'sumOfPreviousBirdsScore',\n//     sumOfCurrentBirdsScore:'sumOfCurrentBirdsScore',\n//     previouseBestBirdFitness:'previouseBestBirdFitness',\n//     bestBirdOfCurrentBirdsFitness:'bestBirdOfCurrentBirdsFitness',\n//     /* -------- */\n// /* ===================================================================== */\n// /* ===================================================================== */\n// /* ===================================================================== */  \n// }\n// export default types\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise-middleware'\nimport createRootReducer from '../reducers'\n// import devTools from 'remote-redux-devtools'\nimport * as HistoryModule from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport { Platform } from 'react-native'\nimport { configs } from '../myApp/actions'\n// import * as types from '../myApp/actions/types'\n// import reduxInitialState from '../myApp/actions/reduxInitialState'\n// import * as AzPureFunctions2 from '../libs/AzPureFunctions2'\n// import * as AzPureFunctions2 from './AzPureFunctions2';\n// import { createReduxHistoryContext, reachify } from 'redux-first-history'\n/* ===================================== */\n/* ===================================== */\n/* --------- */\n/* using rr6 */\nexport const history = HistoryModule.createMemoryHistory() /* temporary in test (old way was import createHistory from 'history/createBrowserHistory') */\n\n/* const tmp: any = history\nconsole.log({ tmp })\nconst { createReduxHistory, routerMiddleware, routerReducer } = createReduxHistoryContext({\n  // history: createBrowserHistory(),\n  //other options if needed \n  history: tmp,\n  // history, \n  // routerReducerKey = 'router', \n  // reduxTravelling = false, \n  // selectRouterState = null,\n  // savePreviousLocations = 0,\n  // batch = null,\n  // reachGlobalHistory = null\n}); */\n/* ===================================== */\n// const createHistory=HistoryModule.createMemoryHistory\n/* ===================================== */\n// history.push()\n/* temporary */\n// console.error(Platform.OS);\n// alert(JSON.stringify([location.port,]))\nconst isDev = configs.development\nconst isWeb = Platform.OS=='web'\nconst initialState = {}\n/**\n * note:window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] automaticly will be ignored on testing platform ,so dont wory about them\n */\nconst composeEnhancers = (( \n  isWeb &&\n  isDev &&\n  /* note:we temporary disable this cause this has problem with ts */\n  window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] \n) ||\n  compose)\n\nconst store = createStore(\n  /* --------- */\n  /* using rr6 */\n  /* createRootReducer(routerReducer), */\n  /* --------- */\n  createRootReducer(history),/* orginal */\n  initialState,\n  composeEnhancers(\n    applyMiddleware(\n      promiseMiddleware(),\n      thunk,\n      routerMiddleware(history) /* orginal */\n      /* --------- */\n      /* using rr6 */\n      /* routerMiddleware, */\n      /* --------- */\n    ),\n    /* note:enable this if u want to use redux debugger tools */\n    /* devTools({\n      name: 'Platform.OS',\n      hostname: '192.168.1.36',\n      port: 5678,\n    }) */\n  )\n)\n// export  const  storeVariables:types.reduxInitialState  = AzPureFunctions2.hardObjectCopy(reduxInitialState)\n/* --------- */\n/* using rr6 */\n/* export const history2: any = createReduxHistory(store)   */\n/* --------- */\n// console.log(history2)\nexport default store\n","import { View } from 'react-native'\n// import sharedVars from \"../myApp/actions/sharedVars\";\nimport React from 'react'\nimport sharedVars from '../../actions/sharedVars'\n\nexport default class TmpCmpToResolveRouterIssue extends React.Component {\n    // constructor(props) {\n    //   super(props)\n    // }\n    his:any\n    // children\n    props:{his,children}\n    componentDidMount(){\n      // console.error()\n      // sharedVars.his=this.props['history'];\n      // alert(JSON.stringify([this.props['history'],]))\n      sharedVars.his=this.props['his']\n      // console.log(this.props)\n      // setTimeout(() => {\n      //   sharedVars.his.push('/Dashboard',)\n      //   sharedVars.his.push('/Dashboard',)\n      // }, 3000);\n    }\n    render() {\n      return (\n        <View>\n          {this.props['children']}\n        </View>\n      )\n    }\n  }\n","import * as gif from '../../../libs/gif'\nimport React, { useState, useRef, useEffect } from 'react'\nimport { ActivityIndicator, View, Animated, Text } from 'react-native'\nimport * as types from '../../actions/types'\nimport TmpCmpToResolveRouterIssue from './TmpCmpToResolveRouterIssue'\nimport { connect } from 'react-redux'\nimport { configs } from '../../actions'\n\n/* ========== */\n// type State = {}\n// type Props = types.reduxInitialState\n\ntype State = {}\ntype Props = {}\nexport const rxProps = (props: types.reducers) => ({\n    // popupDetail: props.gifr.popupDetail,\n})\nexport default connect(rxProps)(\n    class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n        state: State\n\n\n        // class Cmp extends React.Component<Props, State> {\n        // state: State\n\n        render() {\n            return (\n                <TmpCmpToResolveRouterIssue his={this.props['history']}   >\n                    <View testID='init' style={{ marginVertical: 50 }}>\n                        <Text>{configs.initilizingMsg}</Text>\n                    </View>\n                </TmpCmpToResolveRouterIssue>\n            )\n        }\n    }\n)\n/* ================================== */\n// export default gif.glue(cmp, (props: types.reducers) => ({\n//     popupDetail: props.gifr.popupDetail,\n// }))\n","import React, { JSXElementConstructor } from 'react'\nimport { StyleProp, View, ViewStyle, Platform, Dimensions } from 'react-native'\nimport { FAB, Portal, Text, Button, ActivityIndicator } from 'react-native-paper'\n// import * as gif from '../../../libs/gif'\nimport * as myApp from '../../actions'\nimport * as types from '../../actions/types'\n// import * as configs from '../../actions/configs';\nimport WebView, { WebViewMessageEvent } from 'react-native-webview'\n// import ReactDOM from 'react-dom'\nimport { renderToStaticMarkup, renderToString } from 'react-dom/server'\n/* ================================== */\n// import Aaaa from './Aaaa'\n// const asds = \n// const asdasd=asd.apply(null)\n//  const zxc=await \n//  ReactDOM.render(<div >3</div>,<div></div>,(doc)=>doc)\n// console.log(ReactDOM.render(asd,,,))\n\n// alert(asds)\n// ReactDOM.render(, document.getElementById('root'))\n//       <div className=\"App\" dangerouslySetInnerHTML={{__html:renderToStaticMarkup(str)}}/>\n// const EsWebView = (props: types.reduxInitialState) => {\n/* ================================== */\n\nexport type RouterStates = {}\ntype State = {\n  loaded: boolean,\n  finalStyle: Object\n}\ntype Props = {\n  style?: StyleProp<ViewStyle>,\n  src: {\n    jsxComponent?: any,\n    // jsxComponent?: JSXElementConstructor<JSX.Element>,\n    // jsxComponent?: string,\n    htmlUrl?: string,\n  }\n  jsFnToRunOnInitString?: string,\n  // onChildMessage: Function,\n  // onChildMessage:   (arg1: string, arg2: number, ...args: any[]) => void  ,\n  onChildMessage: (data: { event: string, content: any }) => void,\n  mockLoading?: boolean,\n}\nexport const rxProps = (props: types.reducers) => ({\n})\nexport default /* connect(rxProps)( */\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n  state: State = {\n    loaded: false,\n    finalStyle: {}\n  }\n  // state: State\n\n  // type State = {\n  //   loaded: boolean,\n  //   finalStyle: Object\n  // }\n  // type Props = {\n  //   // jsFnToRunOnInit: Function,\n  //   // jsxComponent: React.ReactElement<any, string | React.JSXElementConstructor<any>>,\n  //   // jsxComponent: any,\n  //   style?: StyleProp<ViewStyle>,\n  //   src: {\n  //     jsxComponent?: any,\n  //     // jsxComponent?: JSXElementConstructor<JSX.Element>,\n  //     // jsxComponent?: string,\n  //     htmlUrl?: string,\n  //   }\n  //   jsFnToRunOnInitString?: string,\n  //   onChildMessage: Function,\n  // }\n  // class EsWebView extends React.Component<Props, State> {\n\n\n  // constructor(props) {\n  //   super(props)\n  // }\n  /* ---------------------------- */\n  // props: {\n  //   // jsFnToRunOnInit: Function,\n  //   // jsxComponent: React.ReactElement<any, string | React.JSXElementConstructor<any>>,\n  //   // jsxComponent: any,\n  //   style?: StyleProp<ViewStyle>,\n  //   src: {\n  //     jsxComponent?: any,\n  //     // jsxComponent?: JSXElementConstructor<JSX.Element>,\n  //     // jsxComponent?: string,\n  //     htmlUrl?: string,\n  //   }\n  //   jsFnToRunOnInitString?: string,\n  //   onChildMessage: Function,\n  // }\n  webviewRef: React.RefObject<WebView> = React.createRef()\n  /* ---------------------------- */\n  /* note:initFn and jsFnToRunOnInit must be completly string (for now they are not)*/\n  /* ---------------------------- */\n  mockLoading(fakeDelay?: number) {\n    // if (this.props.mockLoading === true) {\n    setTimeout(() => {\n      console.log('mockLoading...')\n      this.setState({\n        loaded: true\n      })\n    });\n    /* note:this makes jest to run this in the next tick so timeout number is not\nnecessary but in case u run into issues(for example different environment than node),add a timer(e.g:... },100); )\n*/\n  }\n  /* ---------------------------- */\n  refresh(fakeDelay?: number) {\n    this.setState({ loaded: false })\n    /* -------------- */\n    this.forceUpdate()\n    /* -------------- */\n    if (this.props.mockLoading) this.mockLoading()\n    /* -------------- */\n    // return new Promise(resolve => {\n    //   setTimeout(() => {\n    //     // this.forceUpdate()\n    //     // this.webviewRef.current.clearHistory()\n    //     // this.webviewRef.current.stopLoading()\n    //     // this.webviewRef.current.reload()\n    //     console.log('refreshhing.....')\n    //     this.forceUpdate(() => {\n    //       // this.webviewRef.current.clearHistory()\n    //       // this.webviewRef.current.stopLoading()\n    //       // this.webviewRef.current.reload()\n    //       console.log('okkkkkkkkkk')\n    //       return resolve(true)\n    //     })\n    //   }, fakeDelay);\n    // })\n  }\n  /* ---------------------------- */\n  // initFn() {\n  //   console.log('this is init')\n  // }\n  /* ---------------------------- */\n  sendMessageToWebView(data: Object) {\n    // webviewRef.current.postMessage('outToIn')\n    if (Platform.OS == 'web') {\n      window.postMessage(JSON.stringify(\n        { id: 'parent', data: data }\n      ), null)\n    } else {\n      this.webviewRef.current.postMessage(JSON.stringify(\n        { id: 'parent', data: data }\n        // ), null)\n      ))\n    }\n    /* note:on android/ios this should be \n    // this.webviewRef.current.postMessage(JSON.stringify(data),)\n    but needs more testing\n      */\n  }\n  /* ---------------------------- */\n  onMessageFromEveywhere(event: WebViewMessageEvent) {\n    console.log('555555555555555555555555555555555555')\n    // alert('onMessage attr ' + event.nativeEvent.data)\n    let parsedMessage = null\n    try {\n      parsedMessage = event.nativeEvent.data ? JSON.parse(event.nativeEvent.data) : null\n    } catch (error) {\n      console.warn(\n        'err on json parsing,data:',\n        event.nativeEvent.data,\n        ';errorMessage :',\n        error\n      )\n    }\n    // console.log(event)\n    if (parsedMessage && parsedMessage.id == 'child1') {/* todo:use a valid id like key or something(forse it in input or use key) */\n      this.props.onChildMessage.call(false, parsedMessage.data ? parsedMessage.data : null)\n    }\n  }\n  /* ---------------------------- */\n  // function getMessage(data:string) {\n  //   window.postMessage(JSON.stringify(data), null)\n  // }\n  /* ---------------------------- */\n  finalSource: any\n  componentDidMount() {\n    // this.webviewRef = React.createRef()\n\n    this.setState({ finalStyle: this.props.style ? this.props.style.valueOf() : {} })\n\n    // const asdkqjwdajsnd = this.props.style.valueOf()\n    // console.log({asdkqjwdajsnd})\n\n    if (!this.props.src.jsxComponent && !this.props.src.htmlUrl) {\n      console.log('you have to set a jsxComponent or htmlUrl')\n      this.finalSource = {\n        html: `\n        <div>_</div>\n        `}\n\n    } else if (this.props.src.jsxComponent) {\n\n      // <this.props.reactModule />\n      // const Asdasda=()=>this.props.jsxComponent\n      // const Asdasd=()=><div><Asdasda /></div>\n      // const reasdasdasd=async()=>await fetch('webView1/Aaaa.tsx').then((response) => response.text()).then((html) =>html)\n      // const Asdasd = await reasdasdasd()\n      // alert(Asdasd)\n      const Asdasd: any = this.props.src.jsxComponent\n      // const finalRenderedElement = renderToStaticMarkup(Asdasd)\n      // const finalRenderedElement = renderToStaticMarkup(<Asdasd />) /* ok */\n      const finalRenderedElement = renderToStaticMarkup(<Asdasd />)\n\n      // alert(finalRenderedElement)\n      // <div className=\"Container\" dangerouslySetInnerHTML={{__html: someHtml}}\n      //  const finalRenderedElement= renderToStaticMarkup(<div dangerouslySetInnerHTML={{__html:'<div>2</div>'}} />)\n      this.finalSource = {\n        html: `\n          ${finalRenderedElement}\n        `}\n    } else {\n      // const baseUrl = this.props.src.htmlUrl.substr(0, this.props.src.htmlUrl.lastIndexOf('/') + 1);\n\n      // this.finalSource = {\n      //   uri: this.props.src.htmlUrl\n      // }\n      // const uri = Platform.OS == \"android\" ?\n      //   \"file:///android_asset\" + this.props.src.htmlUrl :\n      //   this.props.src.htmlUrl\n      // \"file:///android_asset/www/index.html\" :\n      // \"./web/www/index.html\"   \n      const uri = Platform.OS == 'android'\n        ? 'file:///android_asset/' + this.props.src.htmlUrl + '/index.native.html'\n        // : '/' + this.props.src.htmlUrl + '/index.web.html'\n        : '/assets/' + this.props.src.htmlUrl + '/index.web.html'\n      // const uri = Platform.OS == 'android'\n      //   ? 'file:///android_asset/' + this.props.src.htmlUrl + '/index.native.html'\n      //   : '/' + this.props.src.htmlUrl + '/index.web.html'\n\n      this.finalSource = {\n        uri,\n        // html:require(\"./webView1/index.html\")\n      }\n\n    }\n\n    /* -------------- */\n    if (this.props.mockLoading) this.mockLoading()\n    /* -------------- */\n  }\n  /* ---------------------------- */\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   if (nextProps.mockLoading === true) {\n  //     setTimeout(() => {\n  //       return {\n  //         loaded: true\n  //       }\n  //     }, 100);\n  //   }\n  // }\n  /* ---------------------------- */\n  render() {\n    // if(this.props.marketerDetails||\n    //   this.props.marketers_full||\n    //   this.props.confirmedSales\n    //   )return null\n    /* ------------ */\n    // if (!this.state.loaded) {\n\n    // }\n    // /* ------------ */\n    // console.log(this.finalSource)\n    /* ------------ */\n    const LoadingCmp = (\n      <View testID='loading-container' style={{\n        //  /* flex: 1, */\n        justifyContent: 'center',\n        // display: 'none',\n        //       backgroundColor: myApp.configs.transparent,\n        borderRadius: 0,\n        ...this.state.finalStyle,\n      }}>\n        <ActivityIndicator color=\"red\" style={{ /* flex: 1, */ }} />\n      </View>\n    )\n    /* ------------ */\n    return (\n      <View style={{\n        borderRadius: 0,\n        ...this.state.finalStyle,\n      }}    >\n        {/* ------------ */}\n        {this.state.loaded === false && (LoadingCmp)}\n        {/* ------------ */}\n        {this.finalSource && this.finalSource.uri &&\n\n          <WebView\n          testID='webview-container'\n          style={{\n            // display: 'flex',\n            // backgroundColor: myApp.configs.transparent,\n            borderRadius: 0,\n            ...this.state.finalStyle,\n            // width: '60%',\n            // height: '60%',\n\n            // backgroundColor: Colors.blueGrey700\n            // margin: 0,\n            // padding: 0,\n            // overflow: 'hidden',\n            // position: 'relative',\n            // top: -100,\n          }}\n\n            // startInLoadingState\n            // injectedJavaScript={`(function() {alert('2testOk');window.ReactNativeWebView.postMessage(JSON.stringify({'id':'child1',data:{ event: 'imReady', content: null }}));return null})();`}\n            // injectedJavaScript={`(function() {alert('testOk');return null})();`}\n            // injectedJavaScript={`(function() {window.ReactNativeWebView.postMessage(JSON.stringify({'id':'child1',data:{ event: 'imReady', content: null }}));return null})();`}\n\n            source={{\n              ...this.finalSource\n\n              // html: `\n              // <div id=\"mynetwork\">okk</div>\n              // `\n              // html: `\n              // <div id=\"mynetwork\">okk</div>\n              // <script>(function() { window.ReactNativeWebView.postMessage(JSON.stringify({'id':'child1',data:{ event: 'imReady', content: null }}));return null})();</script>\n              // `\n            }}\n            /* ============================================== */\n          onLoad={() => {\n            /* Note:does not work in tests */\n            // console.log('aaaaaaaaaaaaaaaaaaaaa')\n            this.setState({ loaded: true });\n          }}\n            // onLoad={() => console.log(11111111)}\n          /* onLoadEnd={() => alert(JSON.stringify([222,]))} */ /* note:does not fire */\n            // renderLoading={() => <ActivityIndicator color=\"red\" style={{ flex: 1, }} />}\n            // onLoadEnd\n            startInLoadingState\n          /*  renderLoading={() => (LoadingCmp)}  */ /* buggy in web(askdj2ui3) */\n\n\n          containerStyle={{\n\n              // display: 'flex',\n              // backgroundColor: 'red',\n              // ...this.state.finalStyle,\n              // width: (Dimensions.get('window').width),\n              //     height: (myApp.sharedVars.contentManagerHeight - 200),\n            }}\n            // style={!this.state.loaded\n            //   ? {\n            //     display: 'none',\n            //     backgroundColor: myApp.configs.transparent,\n            //     ...this.state.finalStyle,\n            //   }\n            //   : {\n            //     display: 'flex',\n            //     backgroundColor: myApp.configs.transparent,\n            //     ...this.state.finalStyle,\n            //   }}\n            // style={this.props.style ? this.props.style : null}\n            /* ============================================== */\n\n            onMessage={(e) => this.onMessageFromEveywhere(e)}\n\n            /* ============= */\n            keyboardDisplayRequiresUserAction={false} //ios \n            // autoFocus={true} //android\n            automaticallyAdjustContentInsets={false}\n            scalesPageToFit={false}\n            mixedContentMode={'always'}\n\n            // javaScriptEnabledAndroid={true}\n            // startInLoadingState={true}\n            /* ============= */\n\n            // key\n            // key='123'\n            // style={this.props.style ? this.props.style : null}\n            // ref={(r) => (this.webref = r)}\n            // ref={this.webviewRef}\n            // originWhitelist={['*']}\n            // allowFileAccess={true}\n            // allowFileAccessFromFileURLs={true}\n            // allowUniversalAccessFromFileURLs={true}\n            // domStorageEnabled={true}\n            // javaScriptEnabled={true}\n            // pullToRefreshEnabled={false}\n            // javaScriptCanOpenWindowsAutomatically={true}\n            // pagingEnabled={false}\n            // onError={err => {\n            //   console.error(err)\n            //   // alert(JSON.stringify([err,]))\n            // }}\n\n            ref={this.webviewRef}\n            originWhitelist={['*']}\n            allowFileAccess\n            allowFileAccessFromFileURLs\n            allowUniversalAccessFromFileURLs\n            domStorageEnabled\n            javaScriptEnabled\n            pullToRefreshEnabled={false}\n            javaScriptCanOpenWindowsAutomatically={false}\n            pagingEnabled={false}\n            onError={err => console.error(err)}\n\n            // onLoad={event => {\n            //   this.webviewRef.current.injectJavaScript(`\n            //   (function() {alert('testOk');return null})();\n\n            //   `)\n            // }}\n            //   // console.error(event)\n            //   console.log(event.currentTarget);\n            //   this.webviewRef.current.postMessage('asd1')\n            //   this.webviewRef.current.injectJavaScript = (e) => {\n            //     console.log(e)\n            //     return 'alert(6)'\n            //   }\n            //   // event.nativeEvent.\n            //   // window.ReactNativeWebView.postMessage('asd')\n            //   // webviewRef.current.injectJavaScript(script)\n            // }}\n            onContentProcessDidTerminate={event => {\n              console.error('terminated', event.nativeEvent)\n              // webviewRef.current.reload()\n            }}\n            // renderLoading={ActivityIndicatorLoadingView}\n            thirdPartyCookiesEnabled\n            // startInLoadingState={true}\n            cacheEnabled={false}\n\n            cacheMode={'LOAD_NO_CACHE'}\n\n\n          // source={{ uri: \"/webView1/index.html\" }} /* ok */\n          // source={{ uri: \"file:///assets/HelloWorld.html\" }} /* ok in android */\n\n          // source={{\n          //   // html:'<script>alert()</script>',\n          //   uri:'/webView1/index.html'\n          // }} \n          // source={{ url: \"./\" }} \n          //       source={{\n\n          //         html: `\n          //     ${this.props.html}\n\n          //       <script>${this.props.jsFnToRunOnInitString.toString()}</script>\n          // `\n          //         // <script>(function ${this.initFn.toString()})()</script>\n\n          //         //  <script>( ${this.props.jsFnToRunOnInit.toString()})()</script>\n\n          //       }}\n          // injectedJavaScript={\"window.ReactNativeWebView.postMessage('333');alert(111);true;\"}\n          // injectedJavaScriptBeforeContentLoaded={\"window.ReactNativeWebView.postMessage('asd3');alert(111);true;\"}\n          // injectedJavaScriptBeforeContentLoaded={\"window.ReactNativeWebView.postMessage('asd3')\"}\n          // injectedJavaScriptBeforeContentLoaded={script}\n          // java\n          />\n\n        }\n      </View>\n    )\n  }\n}\n/*================================================== */\n// export default EsWebView\n// export default gif.glue(EsWebView, (props: types.reducers) => ({\n  // router: props.router,\n// }))\n/* use something like this^ or use something like on router change */\n","import * as gif from '../../../libs/gif'\nimport React, {useState, useRef, useEffect} from 'react'\n// import * as MainScene from '../../actions/myApp/myApp/MainScene'\nimport * as myApp from '../../actions'\nimport {ActivityIndicator, View, Animated, Dimensions} from 'react-native'\nimport {\n  Button,\n  Text,\n  TextInput,\n  Title,\n  Divider,\n  Colors,\n  Appbar,\n  IconButton,\n} from 'react-native-paper'\n// import PlusMenuBtn from '../PlusMenuBtn';\nimport * as types from '../../actions/types'\nimport * as configs from '../../actions/configs'\nimport {connect} from 'react-redux'\n// import { Link, useHistory } from 'react-router-native';\nimport EsWebView from '../EsWebView'\n/* ========== */\ntype State = {\n  unknownUser: {\n    username: string;\n    password: string;\n  };\n};\ntype Props = {\n  onSubmit?\n};\nexport const rxProps = (props: types.reducers) => ({\n})\nexport default connect(rxProps)(\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n    webview1Ref: EsWebView\n    state: State = {\n      unknownUser: {\n        username: null,\n        password: null,\n      },\n    }; \n    /* ================================== */\n    render() {\n      return (\n        <View style={{ }}>\n          <EsWebView\n              style={{\n                backgroundColor: myApp.configs.transparent,\n                margin: 0,\n                padding: 0,\n                overflow: 'hidden',\n                width: (Dimensions.get('window').width),\n              // height: myApp.sharedVars.contentManagerHeight ,\n              height: Dimensions.get('window').height,\n                alignContent: 'center',\n                alignItems: 'center',\n                alignSelf: 'center',\n               }}\n              ref={r => this.webview1Ref = r}\n              src={{\n                htmlUrl: 'webView1',\n              }}\n              onChildMessage={(data) => myApp.onChildMessage({ data: data, webview1Ref: this.webview1Ref })}\n\n            />\n        </View>\n      )\n    }\n  },\n)\n/* ================================== */\n\n// export default gif.glue(WebviewLoader, (props: types.reducers) => ({\n// }))\n","import * as gif from '../../../libs/gif'\nimport React, { useState, useEffect, useRef } from 'react'\n// import * as MainScene from '../../actions/myApp/myApp/MainScene'\nimport * as myApp from '../../actions'\nimport * as types from '../../actions/types'\nimport { View, ToastAndroid, ViewStyle, StyleProp, TextStyle, Dimensions, ScrollView, Image, } from 'react-native'\nimport { Button, Text, TextInput, Title, Divider, Colors, Appbar, IconButton, Chip, List, Menu, Searchbar, DataTable, Avatar, Card, Paragraph } from 'react-native-paper'\n// import FbImageLoader from '../FbImageLoader'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\n// import generalgeneralStyles from '../generalgeneralStyles'\nimport generalStyles from '../generalStyles'\n/* ================================== */\nexport type RouterStates = {\n}\ntype State = {\n}\ntype Props = {\n    items: (keyof (typeof myApp.configs.technologies))[]\n}\nexport const rxProps = (props: types.reducers) => ({\n})\nexport default connect(rxProps)(\n    class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n        state: State = {\n        }\n        render() {\n\n            return (\n                <View >\n\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-evenly' }}>\n\n                        {this.props.items.map(itemKey => {\n                            const item=myApp.configs.technologies[itemKey]\n                            return (\n                                <View style={{ flexDirection: 'column',paddingLeft: 20, }}>\n                                    {/* <List.Icon\n                                        icon={item.icon}\n                                        style={{  width: 0, height: 0,alignSelf:'center'}}\n                                        color={item.color}\n                                    /> */}\n                                    {/* <Image source={gif.imgLoader(item.icon)} /> */}\n                                    <Image\n                                        resizeMode='contain'\n                                        source={gif.imgLoader(`technologies/${item.icon}.png`)}\n                                        style={{\n                                            // alignSelf: 'baseline',\n                                            width: 50, height: 25,\n                                            // marginTop: 8,\n                                            // marginRight: 5,\n                                            // borderWidth: 1, borderRadius: 200,\n                                            // backgroundColor: Colors.grey200,\n                                        }}\n                                    />\n                                    <Text style={{ fontWeight: 'bold', textAlign: 'center' }}>{item.title}</Text>\n                                </View>\n                            )\n                        })}\n\n                        {/* <Image\n    source={gif.imgLoader('aminZarei.png')}\n    style={{ alignSelf: 'center', width: 50, height: 50, borderWidth: 1, borderRadius: 200 }}\n  /> */}\n                        {/* <View style={{ flexDirection: 'column' }}>\n                           \n                            <List.Icon\n                                icon={'language-typescript'}\n                                style={{ paddingLeft: 20, width: 0, height: 0 }}\n                                color={Colors.blue900}\n                            />\n\n                            <Text style={{ fontWeight: 'bold' }}>Typescript</Text>\n                        </View>\n\n                        <View style={{ flexDirection: 'column' }}>\n                            <List.Icon\n                                icon={'react'}\n                                style={{ paddingLeft: 20, width: 0, height: 0 }}\n                                color={Colors.blue400}\n                            />\n                            <Text style={{ fontWeight: 'bold' }}>React/Rn</Text>\n                        </View>\n\n                        <View style={{ flexDirection: 'column' }}>\n                            <List.Icon\n                                icon={'firebase'}\n                                style={{ paddingLeft: 20, width: 0, height: 0 }}\n                                color={Colors.red500}\n                            />\n                            <Text style={{ fontWeight: 'bold' }}>firebase</Text>\n                        </View>\n\n                        <View style={{ flexDirection: 'column' }}>\n                            <List.Icon\n                                icon={'nodejs'}\n                                style={{ paddingLeft: 20, width: 0, height: 0 }}\n                                color={Colors.yellow900}\n                            />\n                            <Text style={{ fontWeight: 'bold' }}>nodejs</Text>\n                        </View>\n\n                        <View style={{ flexDirection: 'column' }}>\n                            <List.Icon\n                                icon={'laravel'}\n                                style={{ paddingLeft: 20, width: 0, height: 0 }}\n                                color={Colors.blue900}\n                            />\n                            <Text style={{ fontWeight: 'bold' }}>laravel</Text>\n                        </View> */}\n\n\n                    </View>\n\n\n                </View>\n\n            )\n        }\n    }\n)\n/* ================================== */\n","import * as gif from '../../../libs/gif'\nimport React, { useState, useRef, useEffect } from 'react'\n// import * as MainScene from '../../actions/myApp/myApp/MainScene'\nimport * as myApp from '../../actions'\nimport { ActivityIndicator, View, Animated, Dimensions, Image, ScrollView, Linking } from 'react-native'\nimport {\n  Button,\n  Text,\n  TextInput,\n  Title,\n  Divider,\n  Colors,\n  Appbar,\n  IconButton,\n  Card,\n  List,\n} from 'react-native-paper'\n// import PlusMenuBtn from '../PlusMenuBtn';\nimport * as types from '../../actions/types'\nimport * as configs from '../../actions/configs'\nimport { connect } from 'react-redux'\n// import { Link, useHistory } from 'react-router-native';\nimport EsWebView from '../EsWebView'\nimport MySkills from '../MySkills'\n/* ========== */\nexport type RouterStates = {\n  item: configs.pageData,\n}\ntype State = {\n};\ntype Props = {\n};\nexport const rxProps = (props: types.reducers) => ({\n  routerStates: props.router?.location?.state as RouterStates\n})\n\nexport default connect(rxProps)(\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n    webview1Ref: EsWebView\n    state: State = {\n    };\n    /* ================================== */\n    render() {\n      if (!this.props.routerStates?.item) return null\n      const item = this.props.routerStates?.item\n      return (\n        <View style={{}}>\n          <ScrollView style={{\n            height: myApp.sharedVars.contentManagerHeight,\n          }}>\n\n            {/* ============= */}\n            <Card style={{\n              backgroundColor: myApp.configs.transparent\n            }}>\n              <Card.Title title={\n                <View style={{ flexDirection: 'column', marginTop: 10, }}>\n                  <Image\n                    resizeMode='contain'\n                    source={gif.imgLoader(item.icon)}\n                    style={{\n                      // alignSelf: 'baseline',\n                      width: 80, height: 40,\n                      // marginTop: 8,\n                      // marginRight: 5,\n                      borderWidth: 1,\n                      borderRadius: 50,\n                      borderColor: Colors.grey700,\n                      backgroundColor: Colors.grey500,\n                    }}\n                  />\n                  {/* <Image\n                  source={gif.imgLoader(item.icon)}\n                  style={{ alignSelf: 'baseline', width: 30, height: 30, borderWidth: 1, borderRadius: 200 }}\n                /> */}\n                  <Text>{item.title}</Text>\n                </View>}\n                subtitle={`publishing date: ${item.publishDate}`}\n              />\n              <Card.Content>\n\n                {/* <Text style={{ fontWeight: 'bold', alignSelf: 'baseline' }}>publish date: {item.publishDate}</Text> */}\n                {/* <Text style={{ fontWeight: 'bold', alignSelf: 'center' }}> {configs.aboutUs.firstName} {configs.aboutUs.lastname}</Text> */}\n                {/* <Text style={{ fontWeight: 'bold' }}>{configs.aboutUs.number}</Text> */}\n                <Text style={{ fontWeight: 'bold' }}>{item.comment}</Text>\n                <View style={{ flexDirection: 'column', marginTop: 10 }}>\n\n                </View>\n                {item.web?.length > 0 && item.web.map(url => (\n                  <Text style={{ fontWeight: 'bold' }}>\n                    {/* <List.Icon\n                    color={Colors.red700}\n                    icon={'google-chrome'}\n                    style={{ width: 0, height: 0 }}\n                  /> */}\n                    <Button\n                      icon={'google-chrome'}\n                      mode='outlined'\n                      contentStyle={{ backgroundColor: Colors.grey200 }}\n                      onPress={() => {\n                        if (item.title.includes('SmartTaxi')) {\n                          myApp.showPupop({\n                            title: 'Alert', content: `\n                           user: 123456\n                           pass: 123456\n                           open apps in different browser.\n                           Note: these webapps are just demo of actual versions in free hosts with potential bugs.\n                           `, callbackFn: () => {\n                              if (url.includes('driver') || url.includes('passenger')) {\n                                window.open(url, '_blank', 'location=yes,height=640,width=360,scrollbars=yes,status=yes');\n                              } else if (url.includes('manager')) {\n                                window.open(url, '_blank', 'location=yes,height=360,width=640,scrollbars=yes,status=yes');\n                              } else {\n                                window.open(url, '_blank', 'location=yes,scrollbars=yes,status=yes');\n                              }\n                            }\n                          })\n\n                        } else {\n                          // if (item.title.includes('bime') ||item.title.includes('shop')||item.title.includes('abmp')) {\n\n                          //   myApp.showPupop({\n                          //     title: 'Alert', content: `\n                          //    Note: these webapps are just a demo of actual versions in free hosts with potential bugs.\n                          //    `, callbackFn: () => {\n                          Linking.openURL(url)\n                          //       // window.open(url, '_blank', 'location=yes,scrollbars=yes,status=yes');\n                          //     },\n                          //   })\n                          // }\n                        }\n                        // Linking.openURL(url)\n                      }}>{url}</Button>\n                  </Text>\n                ))}\n\n\n              </Card.Content>\n            </Card>\n            <Divider />\n\n            {/* ============= */}\n            <Card style={{\n              backgroundColor: myApp.configs.transparent\n            }}>\n              <Card.Title title={'used technologies'}\n              // subtitle={`${configs.aboutUs.subtitle}`}\n              />\n              <Card.Content>\n                <MySkills items={item.usedTechnologies} />\n              </Card.Content>\n            </Card>\n            <Divider />\n\n            <Card style={{\n              backgroundColor: myApp.configs.transparent\n            }}>\n              <Card.Title title={'app environment'}\n              // subtitle={`${configs.aboutUs.subtitle}`}\n              />\n              <Card.Content>\n                <Image\n                  resizeMode='contain'\n                  source={gif.imgLoader(item.img)}\n                  style={{ alignSelf: 'center', width: '90%', height: 400, borderWidth: 1, borderRadius: 10, borderColor: Colors.grey800, backgroundColor: Colors.grey800 }}\n                />\n                {/* <EsSlider\n                  pagesData={configs.pagesData}\n                  mainBtnTitle='see a demo'\n                  onMainBtnClicked={page => {\n                    gif.goto('ItemDetails',{page})\n                  }}\n                /> */}\n\n              </Card.Content>\n            </Card>\n            {/* <Button\n              mode='contained'\n              onPress={() => {\n                // myApp.showPupop({\n                //   title:'Note',\n                //   content:'this is a demo of this project hosted on free servers ,so there might be bugs',\n                //   callbackFn:()=>{\n                Linking.openURL(item.web[0])\n                //   }\n                // })\n              }}>see a demo</Button> */}\n            {/* <View style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            flexDirection: 'column',\n            // flexWrap: 'wrap',\n            // backgroundColor:'blue',\n            width: '100%',\n            marginBottom: 10,\n          }}\n          >\n          </View> */}\n            <View style={{ height: 100 }} />\n          </ScrollView>\n        </View>\n      )\n    }\n  },\n)\n/* ================================== */\n\n// export default gif.glue(WebviewLoader, (props: types.reducers) => ({\n// }))\n","import * as gif from '../../../libs/gif'\nimport React, { useState, useEffect, useRef } from 'react'\n// import * as MainScene from '../../actions/myApp/myApp/MainScene'\nimport * as myApp from '../../actions'\nimport { Button as Btn, ActivityIndicator, View, Image, FlatList, Animated, ScrollView, ViewToken, Dimensions, Platform, } from 'react-native'\nimport { Button, Text, TextInput, Title, Divider, Colors, Appbar, IconButton, List } from 'react-native-paper'\n// import PlusMenuBtn from '../PlusMenuBtn';\nimport * as types from '../../actions/types'\nimport * as configs from '../../actions/configs'\nimport * as AzPureFunctions2 from '../../../libs/AzPureFunctions2'\nimport { connect } from 'react-redux'\nimport store from '../../../utils/store'\n/* ========== */\nexport type RouterStates = {\n    pagesData: configs.pageData[],\n}\ntype State = {\n    page?: number,\n    pagesData?: configs.pageData[],\n    routerStatesLoaded?: boolean,\n}\ntype Props = {\n    pagesData: configs.pageData[],\n    onMainBtnClicked?: (page: configs.pageData) => void,\n    mainBtnTitle: string,\n}\nexport const rxProps = (props: types.reducers) => ({\n    // pagesData:props.gifr.pagesData,\n    routerStates: props.router?.location?.state as RouterStates\n})\nexport default connect(rxProps)(\n    class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n        state: State = {\n            page: 0,\n            // pageData:\n            pagesData: [],\n            routerStatesLoaded: false,\n        }\n        currentPage = 0\n        scrollRef: FlatList\n        animXVal = new Animated.Value(0)\n\n        _handleOnViewChanged = this.handleOnViewChanged.bind(this)\n        handleOnViewChanged(info: {\n            viewableItems: ViewToken[];\n            changed: ViewToken[];\n        }) {\n            /* todo:(for more accuracy)we can get an item and measure its x value then decide weather its in screen or not(use something like react.getItem) */\n            if (info.viewableItems.length && info.viewableItems[0].item && info.viewableItems[info.viewableItems.length - 1] && info.viewableItems[info.viewableItems.length - 1].isViewable) {\n                this.currentPage = info.viewableItems[info.viewableItems.length - 1].index\n                this.setState({ page: this.currentPage })\n            }\n\n        }\n\n        static getDerivedStateFromProps(nextProps: Props & ReturnType<typeof rxProps>, prevState: State): State {\n            if (!prevState.routerStatesLoaded) {\n                if (nextProps.routerStates?.pagesData?.length) {\n                    return {/* note:this return is basicly is setState({}) */\n                        pagesData: nextProps.routerStates.pagesData,\n                        routerStatesLoaded: true,\n                        // page: 0\n                    }\n                } else if (nextProps.pagesData?.length) {\n                    return {/* note:this return is basicly is setState({}) */\n                        pagesData: nextProps.pagesData,\n                        routerStatesLoaded: true,\n                        // page: 0\n                    }\n                } else {\n                    console.log('no data passed to introduction!')\n                    return {}\n                }\n\n            }\n            return {}\n        }\n\n        render() {\n            if (!this.state.pagesData?.length) return null\n\n            /* ================================== */\n            const itemSize = Dimensions.get('window').width/* +(index*0.1) */\n            const margin = 0/* +(index*0.1) */\n            const finalItemSize = itemSize + (margin * 2)\n\n            // const thirthyPercent = Dimensions.get('window').width < 300 ? '80%' : '30%'\n            return (\n                <View style={{ alignSelf: 'center' }}>\n                    <View style={{ /* flex: 1, */\n                        width: Dimensions.get('window').width/*  - 200 */\n                        // width: '100%',\n                    }}>\n                        {/* ================================================================ */}\n                        <Animated.FlatList\n                            testID='flatlist0'\n\n                            //    data={posts}\n                            // snapToInterval={viewHeight}\n                            //    renderItem={renderItem}\n                            //    keyExtractor={keyExtractor}\n                            // getItemLayout={itemLayout}\n\n                            // initialNumToRender={1}\n                            //    maxToRenderPerBatch={1}\n                            //    windowSize={5}\n                            //    pagingEnabled\n                            //    bounces\n\n                            //    alwaysBounceVertical\n                            //    disableIntervalMomentum\n                            //    showsVerticalScrollIndicator={false}\n                            //    snapToAlignment={\"start\"}\n                            //    decelerationRate={\"fast\"}\n                            //    onScrollToIndexFailed={(error) => {\n                            //      flatListRef.current.scrollToOffset({ offset: error.averageItemLength * error.index, animated: true });\n                            //      setTimeout(() => {\n                            //        if (posts.length !== 0 && flatListRef.current !== null) {\n                            //          flatListRef.current.scrollToIndex({ index: error.index, animated: true });\n                            //        }\n                            //      }, 0);\n                            //    }}\n                            //    ref={(ref) => {\n                            //      flatListRef.current = ref;\n                            //    }}\n\n                            //    onViewableItemsChanged={onViewRef.current}\n                            //    viewabilityConfig={config.current}\n\n                            //    onScrollBeginDrag={beginDarg}\n                            //    onScrollEndDrag={endDrag}\n                            //    onEndReached={handleLoadMore}\n                            //    onEndReachedThreshold={0.5}\n                            //    ListFooterComponent={showFooter ? <Footer /> : null}\n                            //    ListFooterComponentStyle={{\n                            //      height: 80,\n                            //      backgroundColor: Colors.darkBlueOpaque,\n                            //      justifyContent: \"center\",\n                            //      alignItems: \"center\",\n                            //    }}\n\n                            // getItemLayout={()}\n                            style={{/*  marginLeft: 500  */\n                                // height: myApp.sharedVars.contentManagerHeight,\n                            }}\n                            // contentContainerStyle={{marginLeft:200}}\n                            ref={r => {\n                                const tmp: any = r /* note:this is RN type definition error not mine */\n                                this.scrollRef = tmp\n                            }}\n                            horizontal\n                            /* e => {\n                                           const asd: NativeSyntheticEvent<NativeScrollEvent> = e\n                                           // asd.nativeEvent.targetContentOffset.y\n                                           return */\n                            onScroll={Animated.event(\n                                [{\n                                    nativeEvent: {\n                                        contentOffset: { x: this.animXVal, },\n                                    }\n                                }]\n                                , { useNativeDriver: true, }\n                            )}\n                            data={this.state.pagesData}\n                            // onViewableItemsChanged={_handleOnViewableItemsChanged}\n                            // horizontal={false}\n                            keyExtractor={(item, index) => index.toString()}\n\n                            onScrollToIndexFailed={() => console.log('onScrollToIndexFailed')}\n                            getItemLayout={(data, index) => (\n                                { length: itemSize, offset: itemSize * index, index }\n                            )}\n                            renderItem={({ item, index }) => {\n                                // const itemSize = 320/* +(index*0.1) */\n\n                                // this.animXVal.setValue\n                                /* issue:how to do the same for above??? */\n                                const interpolatedDegree = this.animXVal.interpolate({\n                                    inputRange: [\n                                        -1,\n                                        0,\n                                        finalItemSize * index,\n                                        finalItemSize * (index + 2)\n                                    ],\n                                    outputRange: [1, 1, 1, 0]\n                                })\n\n                                const interpolatedDegree2 = this.animXVal.interpolate({\n                                    inputRange: [\n                                        -1,\n                                        0,\n                                        finalItemSize * index,\n                                        finalItemSize * (index + 0.6)\n                                    ],\n                                    outputRange: [1, 1, 1, 0]\n                                })\n\n                                //  alert(JSON.stringify([item,]))\n                                // return (<View key={index}  >\n                                return (<View   >\n                                    {/* <Text style={{ position: 'absolute' }}>{index}</Text> */}\n                                    <Animated.View\n                                        style={{\n                                            // maxHeight:itemSize,\n                                            overflow: 'hidden',\n                                            transform: [{ scale: interpolatedDegree }],\n                                            opacity: interpolatedDegree2,\n                                        }}\n                                    >\n\n                                        <View style={{\n                                            overflow: 'hidden',\n                                            width: itemSize,\n                                            margin: margin\n                                        }}>\n\n                                            <View style={{\n                                                // width: thirthyPercent,\n                                                width: Dimensions.get('window').width < 800 ? '80%' : '30%',\n                                                justifyContent: 'flex-end',\n                                                flexDirection: 'row',\n                                                zIndex: 2,\n                                                borderTopLeftRadius: 0,\n                                                borderTopRightRadius: 8,\n                                                borderBottomRightRadius: 3,\n                                                borderBottomLeftRadius: 0,\n\n                                                // backgroundColor: 'rgba(103, 58, 183, 0.79)',\n                                                // borderBottomColor: 'rgba(103, 58, 183, 0.79)',\n                                                // shadowColor: '#673AB7',\n                                                backgroundColor: Colors.deepPurpleA700 + 'ce',\n                                                borderBottomColor: Colors.deepPurpleA700 + 'ce',\n                                                shadowColor: Colors.deepPurpleA400 + 'ce',\n\n                                                shadowOffset: { width: -10, height: 8, },\n                                                shadowRadius: 15,\n\n                                                borderBottomWidth: 3,\n\n                                            }}>\n\n                                                <Text style={{\n                                                    // textAlign: 'right',\n                                                    color: Colors.grey100,\n                                                    fontSize: 20,\n                                                    fontWeight: 'bold',\n                                                    marginTop: 10,\n                                                }}>\n                                                    {item.title}\n                                                </Text>\n                                                <Image\n                                                    resizeMode='contain'\n                                                    source={gif.imgLoader(item.icon)}\n                                                    style={{\n                                                        // alignSelf: 'baseline',\n                                                        width: 50, height: 25,\n                                                        marginTop: 8,\n                                                        marginRight: 5,\n                                                        // borderWidth: 1, \n                                                        // borderRadius: 200,\n                                                        // backgroundColor: Colors.grey200,\n                                                        borderRadius: 50,\n                                                        borderColor: Colors.grey700,\n                                                        backgroundColor: Colors.grey500,\n                                                    }}\n                                                />\n                                            </View>\n\n                                            <View style={{\n                                                display: 'flex',\n                                                flexDirection: 'row',\n                                                width: '100%',\n                                                justifyContent: 'center',\n                                                alignSelf: 'center',\n                                                marginTop: 20,\n                                                backgroundColor: Colors.grey800,\n                                                borderColor: Colors.grey800,\n                                                borderWidth: 1,\n                                            }}>\n                                                <Image\n                                                    // width={803}\n                                                    style={{\n\n                                                        // width: itemSize - 20,\n                                                        width: '95%',\n                                                        height: 300,\n                                                        // height: Platform.OS === 'web' ? 450 : 500,\n                                                        // height: myApp.sharedVars.contentManagerHeight - 200,\n                                                        // borderStyle:'dashed',\n\n                                                        resizeMode: 'contain'\n                                                    }}\n                                                    // source={item.img} //this was with require\n                                                    // source={{ uri: item.img }}\n                                                    source={gif.imgLoader(item.img)}\n                                                />\n\n                                            </View>\n\n\n                                            {/* </View> */}\n                                            {/* <Text style={{\n                                                display: 'flex',\n                                                flexDirection: 'row',\n                                                width: '90%',\n                                                // backgroundColor:'red',\n                                                alignSelf: 'center',\n                                                textAlign: 'center',\n                                                // marginLeft: 1,\n                                                padding: 10,\n                                                // paddingBottom: 10,\n                                                borderStyle: 'dashed',\n                                                borderWidth: 1,\n                                                borderColor: Colors.grey400,\n                                                // width: 300,\n                                                height: 100,\n                                                overflow: 'scroll'\n                                            }}>{item.comment}</Text> */}\n\n                                        </View>\n\n                                    </Animated.View>\n\n                                </View>)\n                            }\n                            }\n                            //   keyExtractor={item => item.id}\n                            // ItemSeparatorComponent={() => <Text></Text>}\n                            //  parentStyle={{ backgroundColor:'red', alignItems: 'baseline' }}  \n                            //   onEndReached={_loadMore2}\n                            // extraData={filteredItems}\n                            // inverted={true}\n                            // onScroll={_loadMore}\n                            scrollEventThrottle={16}\n\n                            onViewableItemsChanged={this._handleOnViewChanged}\n                            // viewabilityConfig={}\n                            onEndReachedThreshold={0.01} /* zero is end,one is start */\n                            ListFooterComponent={e => (<View style={{ height: 100 }}>\n                            </View>)}\n                        // windowSize={4}\n                        // scrollToOverflowEnabled={true}\n                        // style={{ height: 900  }}\n                        //  onEndThreshold={0}\n                        />\n                        {/* ================================================================ */}\n                        {/* ================================================================ */}\n                        <View>\n                            <View style={{ flexDirection: 'row', width: '95%', justifyContent: 'space-evenly', alignSelf: 'center' }}>\n                                {this.state.pagesData.map((i, index) => (\n                                    <Text onPress={() => {\n                                        this.setState({ page: index })\n                                        try {\n                                            this.scrollRef.scrollToIndex({\n                                                animated: true,\n                                                index: index\n                                            })\n                                        } catch (error) {\n                                            console.log(error)\n                                        }\n\n                                    }}>\n                                        <View style={{ flexDirection: 'column', zIndex: -1 }} >\n                                            <IconButton\n                                                key={index}\n                                                size={12}\n                                                style={{ padding: 1, margin: 1, zIndex: -1 }} icon={index == this.state.page ? 'circle' : 'circle-outline'}\n                                            />\n                                            <Text style={{ textAlign: 'center' }}>{this.state.pagesData[index].publishDate}</Text>\n\n                                        </View>\n                                    </Text>\n                                ))}\n\n                            </View>\n                            <View style={{\n                                // backgroundColor:'red',\n                                marginTop: 10,\n                                display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly'\n                            }}>\n                                <Button\n                                    style={{ width: '20%' }}\n                                    testID='prv-btn'\n                                    labelStyle={{\n                                        padding: 0, margin: 0, marginTop: 0, marginBottom: 0, paddingTop: 1, paddingBottom: 1,\n                                    }}\n                                    compact\n                                    // mode={'contained'}\n                                    color={Colors.black}\n                                    onPress={() => {\n                                        this.currentPage = this.currentPage - 1 == -1 ? this.state.pagesData.length - 1 : this.currentPage - 1\n                                        this.setState({ page: this.currentPage })\n                                        try {\n                                            this.scrollRef.scrollToIndex({\n                                                animated: true,\n                                                index: this.currentPage\n                                            })\n                                        } catch (error) {\n                                            console.log(error)\n                                        }\n\n                                    }\n\n                                    }>\n                                    <List.Icon style={{ padding: 1, margin: 1, }} icon={'page-previous'} />\n                                    previous\n                                </Button>\n\n                                {this.props.mainBtnTitle && <Button style={{\n                                    width: '50%'\n                                }}\n                                    testID='skip-btn'\n                                    // color={Colors.brown500}\n                                    compact\n                                    icon={'skip-next-circle-outline'}\n                                    mode={'contained'}\n                                    onPress={() => {\n                                        if (this.props.onMainBtnClicked) {\n                                            this.props.onMainBtnClicked(this.state.pagesData[this.state.page])\n                                        }\n                                    }}>\n                                    {this.props.mainBtnTitle}\n                                </Button>}\n\n                                <Button\n                                    style={{ width: '20%' }}\n                                    testID='next-btn'\n                                    labelStyle={{\n                                        padding: 0, margin: 0, marginTop: 0, marginBottom: 0, paddingTop: 1, paddingBottom: 1,\n                                    }}\n                                    compact\n                                    // mode={'contained'}\n                                    color={Colors.black}\n                                    onPress={() => {\n                                        // alert(JSON.stringify([this.state.page,]))\n                                        this.currentPage = this.currentPage + 1 == this.state.pagesData.length ? 0 : this.currentPage + 1\n                                        this.setState({ page: this.currentPage })\n                                        // page + 1 == pagesData.length ?this.setState({page:0}) : this.setState({page:page} + 1)\n                                        try {\n                                            this.scrollRef.scrollToIndex({\n                                                animated: true,\n                                                index: this.currentPage\n                                            })\n                                        } catch (error) {\n                                            console.log(error)\n                                        }\n                                    }\n                                    }>\n                                    next\n                                    <List.Icon style={{ padding: 1, margin: 1 }} icon={'page-next'} />\n                                </Button>\n\n                            </View>\n\n\n                        </View>\n                    </View>\n\n\n                </View >\n            )\n        }\n    }\n)\n/* ================================== */\n// export default gif.glue(EsSlider, (props: types.reducers) => ({\n//     // popupDetail: props.gifr.popupDetail,\n// }))\n","import React, { Component } from 'react'\nimport * as gif from '../../../libs/gif'\nimport * as myApp from '../../actions'\nimport * as types from '../../actions/types'\nimport * as configs from '../../actions/configs'\nimport { ActivityIndicator, Dimensions, Image, ScrollView, View, } from 'react-native'\nimport { Button, Text, TextInput, Title, Divider, Colors, Appbar, IconButton, Chip, Card, List } from 'react-native-paper'\nimport { connect } from 'react-redux'\n// import FbImageLoader from '../FbImageLoader'\nimport EsSlider from '../EsSlider'\nimport MySkills from '../MySkills'\n\n/* ==================================================== */\nexport type RouterStates = {\n}\ntype State = {}\ntype Props = {}\nexport const rxProps = (props: types.reducers) => ({\n})\nexport default connect(rxProps)(\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n    // state: State\n    /* ------------------------------------------------------- */\n\n    // type State = {}\n    // type Props = types.reduxInitialState\n    // class Cmp extends React.Component<Props, State> {\n    // state:State\n    // const Dashboard = (props: types.reduxInitialState) => (\n    render() {\n      return (\n        <View style={{\n          padding: 10,\n        }}>\n          <ScrollView style={{\n            height: myApp.sharedVars.contentManagerHeight,\n          }}>\n\n            {/* ============= */}\n            <Card style={{\n              backgroundColor: myApp.configs.transparent\n            }}>\n              <Card.Title title={'about me'}\n              // subtitle={`${configs.aboutUs.subtitle}`}\n              />\n              <Card.Content>\n                <Image\n                  source={gif.imgLoader('aminZarei.png')}\n                  // source={gif.imgLoader('logo.png')}\n                  style={{ alignSelf: 'center', width: 100, height: 100, borderWidth: 1, borderRadius: 200 }}\n                />\n                <Text style={{ fontWeight: 'bold', alignSelf: 'center' }}> {configs.aboutUs.firstName} {configs.aboutUs.lastname}</Text>\n                {/* <Text style={{ fontWeight: 'bold' }}>{configs.aboutUs.number}</Text> */}\n                <Text>{configs.aboutUs.aboutMe.trim()}</Text>\n                <Text style={{ fontWeight: 'bold' }}>\n                  <List.Icon\n                    color={Colors.red900}\n                    icon={'gmail'}\n                    style={{ marginRight: 20, width: 0, height: 0 }}\n                  />\n                  {configs.aboutUs.email}\n                </Text>\n                <Text style={{ fontWeight: 'bold' }}>\n                  <List.Icon\n                    icon={'github'}\n                    style={{ marginRight: 20, width: 0, height: 0 }}\n                  />\n                  {configs.aboutUs.github}\n                </Text>\n              </Card.Content>\n            </Card>\n            <Divider />\n\n            {/* ============= */}\n            <Card style={{\n              backgroundColor: myApp.configs.transparent\n            }}>\n              <Card.Title title={'top skills'}\n              // subtitle={`${configs.aboutUs.subtitle}`}\n              />\n              <Card.Content>\n                <MySkills items={['react', 'firebase', 'typescript', 'nodejs', 'laravel',]} />\n\n                <View style={{ flexDirection: 'row', justifyContent: 'center', marginTop: 20, }}>\n                  <Button icon={'table-network'} mode='contained'\n                    onPress={() => {\n                      gif.goto('WebviewLoader')\n                    }}\n                  >\n                    <Text style={{ fontStyle: 'italic' }}>see full details</Text>\n                  </Button>\n                  {/* color: Colors.blue900 */}\n                  {/* <List.Icon icon={'table-network'} style={{ paddingLeft: 20, width: 0, height: 0 }} color={Colors.blue900} /> */}\n                </View>\n              </Card.Content>\n            </Card>\n            <Divider />\n\n\n            <Card style={{\n              backgroundColor: myApp.configs.transparent\n            }}>\n              <Card.Title title={'some of my projects'}\n              // subtitle={`${configs.aboutUs.subtitle}`}\n              />\n              <Card.Content>\n\n                <EsSlider\n                  pagesData={configs.pagesData}\n                  mainBtnTitle='see details'\n                  onMainBtnClicked={page => {\n                    gif.goto('ItemDetails', { item: page })\n                  }}\n                />\n\n              </Card.Content>\n            </Card>\n            {/* <View style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            alignSelf: 'center',\n            flexDirection: 'column',\n            // flexWrap: 'wrap',\n            // backgroundColor:'blue',\n            width: '100%',\n            marginBottom: 10,\n          }}\n          >\n          </View> */}\n            <View style={{ height: 100 }} />\n          </ScrollView>\n        </View>\n\n      )\n    }\n  }\n)\n/*================================================== */\n// export default gif.glue(cmp, (props: types.reducers) => ({\n//   // adminGroupDetail: props.gifr.adminGroupDetail,\n//   // adminDetail: props.gifr.adminDetails,\n// }))\n/*================================================== */\n","import React from 'react'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { history, /* history2 */ } from './store'\nimport Init from '../myApp/pages/Init'\nimport WebviewLoader from '../myApp/pages/WebviewLoader'\nimport ItemDetails from '../myApp/pages/ItemDetails'\nimport Dashboard from '../myApp/pages/Dashboard'\nimport EsSlider from '../myApp/pages/EsSlider'\nimport MySkills from '../myApp/pages/MySkills'\nimport * as types from '../myApp/actions/types'\n/* -------------- */\nimport { Route, Switch, MemoryRouter } from 'react-router-native' /* note:we used alias for web (webpack.config.js react-router-dom)*/\n/* use this if you just update your env and get lots of error:\n  const Test =()=>{\n  <View><Text>ok</Text></View>\n} */\n/* ========================================================================== */\nexport const routes_ = {\n  '': 'Init',\n  'Init': 'Init',\n  'ItemDetails': 'ItemDetails',\n  'WebviewLoader': 'WebviewLoader',\n  'Dashboard': 'Dashboard',\n  'EsSlider': 'EsSlider',\n  'MySkills': 'MySkills',\n}\n/* ========================================================================== */\ntype State = {}\ntype Props = {}\nclass AzRouter extends React.Component<Props, State> {\n  render() { \n    return (\n      <ConnectedRouter history={history}>\n        {/*   <Router history={history2}> */}\n        <MemoryRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Init} />\n            <Route exact path={'/' + routes_.Init} component={Init} />\n            <Route exact path={'/' + routes_.ItemDetails} component={ItemDetails} />\n            <Route exact path={'/' + routes_.WebviewLoader} component={WebviewLoader} />\n            <Route exact path={'/' + routes_.Dashboard} component={Dashboard} />\n            <Route exact path={'/' + routes_.EsSlider} component={EsSlider} />\n            <Route exact path={'/' + routes_.MySkills} component={MySkills} />\n          </Switch>\n        </MemoryRouter>\n        {/* </Router> */}\n      </ConnectedRouter>\n    )\n    /* ----------------------- */\n  }\n}\n/*================================================== */\nexport default AzRouter\n","import React from 'react'\nimport { View, ScrollView, Dimensions, Platform, ImageBackground, Image } from 'react-native'\n// import { FAB, Portal, Text, } from 'react-native-paper';\nimport * as gif from '../../../libs/gif'\nimport * as types from '../../actions/types'\nimport * as configs from '../../actions/configs'\nimport * as myApp from '../../actions'\nimport { connect } from 'react-redux'\n// import  bg1 from \"../media/bgs/bg1.jpg\";\n\n/* ================================== */\ntype State = {}\n// type Props = types.reduxInitialState\ntype Props = {}\nexport const rxProps = (props: types.reducers) => ({\n  // popupDetail: props.gifr.popupDetail,\n  router: props.router,\n\n})\n// const tmp:ConnectedComponent<any, Omit<unknown, never>>=(\nconst tmp: any = ( /* issue:a33ksjdh2 */\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n\n    // class EsEnvUiContentManager extends React.Component {\n    // props\n    // state: State\n    // class EsEnvUiContentManager extends React.Component {\n    // props:types.reduxInitialState\n    // constructor(props) {\n    //   super(props)\n    // }\n    componentDidMount() {\n      // this.props.\n      // Dimensions.addEventListener('change',(e)=>{\n      //   alert(JSON.stringify([e.window.height,]))\n      // })\n      // alert(JSON.stringify([myApp.sharedVars.contentManagerHeight,]))\n    }\n    render() {\n      if (!this.props.router || !this.props.router?.location) return null\n      //   }\n      // }\n      // const EsEnvUiContentManager = (props: types.reduxInitialState) => {\n\n      /* ---------------------------- */\n      // myApp.sharedVars.contentManagerHeight = configs.pathsToVisible.includes(gif.getRouteName()) ? Dimensions.get('window').height : Dimensions.get('window').height - 110\n      // if (Platform.OS === 'web') {\n      myApp.sharedVars.contentManagerHeight = configs.pathsToVisible.includes(gif.getRouteName()) ? Dimensions.get('window').height : Dimensions.get('window').height  \n      // myApp.sharedVars.contentManagerHeight = configs.pathsToVisible.includes(gif.getRouteName()) ? Dimensions.get('window').height : Dimensions.get('window').height - 400\n      // } else {\n      //   // myApp.sharedVars.contentManagerHeight = configs.pathsToVisible.includes(gif.getRouteName()) ? Dimensions.get('screen').height : Dimensions.get('window').height - 530\n      //   myApp.sharedVars.contentManagerHeight = '90%'\n      // }\n      const adasdasd = {}\n      // if (configs.tmpFirebaseProxy) {\n      //   adasdasd = {\n      //     // width: '90%',\n      //     // height: '98%',\n      //     // justifyContent: 'center',\n      //     // alignContent: 'center',\n      //     // alignItems: 'center',\n      //     // alignSelf: 'center',\n      //   }\n      // }\n      /* ---------------------------- */\n      // const height = \n      return (\n        <View style={{\n          // flex: 1,\n          // backgroundColor: Colors.blueGrey700,\n          // zIndex:-8,\n\n          overflow: 'hidden',\n\n          position: 'relative',\n          // width: Dimensions.get('screen').width,\n\n          top: 0,\n          left: 0,\n          // height: 470,\n          // width: '100%',\n          width: '100%',\n          // height: myApp.sharedVars.contentManagerHeight,\n          height: myApp.sharedVars.contentManagerHeight,\n          ...adasdasd\n          // width: configs.tmpFirebaseProxy ? '90%' : '100%',\n          // height: configs.tmpFirebaseProxy ? '90%' : myApp.sharedVars.contentManagerHeight,\n          // height: '100%',\n        }}   >\n          <Image\n            // resizeMode='cover'\n            style={{\n              overflow: 'hidden',\n              opacity: 0.5,\n              // width: Dimensions.get('window').width,\n              // height: Dimensions.get('window').height,\n              width: '100%',\n              height: '100%',\n              // zIndex:0,\n              position: 'absolute',\n              top: 0,\n              left: 0,\n            }}\n            //  resizeMode='cover'\n            blurRadius={3}\n            source={gif.imgLoader('bgs/bg1.jpg')} />\n          {/* source={{\n              // uri: myApp.configs.imageComponentPlatformQuirk + myApp.configs.defaultBgPlain\n              uri: gif.imgLoader('bgs/bg1.jpg'),\n            }} /> */}\n          {/* {!configs.pathsToVisible.includes(gif.getRouteName())&& */}\n          {true && <View style={{\n            overflow: 'hidden',\n            // backgroundColor: 'red',\n\n            // width: Dimensions.get('window').width,\n            width: '100%',\n            // height: Dimensions.get('window').height,\n            height: '100%',\n            // zIndex:0,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n\n            // overflow: 'scroll',\n            // marginTop: 56,\n            // top: 110,\n            // width: Dimensions.get('window').width,\n            // height: Dimensions.get('window').height,\n            // // zIndex:0,\n            // position: 'absolute',\n            // top: 0,\n            // left: 0,\n            // overflow: 'hidden',\n          }}>\n            {this.props['children']}\n          </View>\n          }\n          {/* {Platform.OS !== 'web' && <View style={{   overflow: 'scroll' }}>\n            {this.props['children']}\n          </View>\n          } */}\n          {/*  {Platform.OS === 'web' &&\n            <ScrollView ref={r => myApp.sharedVars.mainScrollViewRef = r}  >\n              {this.props['children']}\n            </ScrollView>\n          } */}\n\n        </View>\n      )\n    }\n  }\n)\n\nexport default connect(rxProps)(\n  // export default gif.glue(\n  tmp\n  // ,rxProps\n)\n// )\n/*================================================== */\n// export default EsEnvUiContentManager\n// export default gif.glue(EsEnvUiContentManager, (props: types.reducers) => ({\n//   router: props.router,\n// }))\n/* use something like this^ or use something like on router change */\n","import React, { createRef, useState } from 'react'\nimport { View, Alert, ScrollView, Animated } from 'react-native'\nimport { Button, Text, TextInput, Title, List, Menu, Divider, FAB, Provider, Paragraph, Dialog, Portal, Snackbar, Modal, IconButton, Checkbox, Colors } from 'react-native-paper'\nimport * as gif from '../../../libs/gif'\nimport * as types from '../../actions/types'\nimport * as myApp from '../../actions'\nimport { connect } from 'react-redux'\n\n// function name(params:type) {\n\n// }\n// name.apply(false)\n/* ================================== */\n// const Popup = (props: types.reduxInitialState) => {\n// const [visible, setVisible] = React.useState(false);\n// const showDialog = () => setVisible(true);\n// const hideDialog = () => setVisible(false);\n/* ================================== */\n// const anim1 = myApp.createAnim({ from: 1, to: 1.5, duration: 200 })\n// const anim2 = myApp.createAnim({ from: 0, to: 100, duration: 200 })\n// const anim1_ = myApp.createAnim({ from: 1.5, to: 1, duration: 200 })\n// const anim2_ = myApp.createAnim({ from: 1, to: 0, duration: 200 })\n// const anim2 = myApp.createAnim({ from: 1, to: 1.5, duration: 200 })\n// const animated_scale = anim1.val\n// const animated_opacity = anim2.val \n\nconst translateXVal = new Animated.Value(0)\nconst anim1 = Animated.timing(translateXVal, { toValue: 1, useNativeDriver: true, duration: 200,/* ,easing:Easing.linear */ })\nconst anim2 = Animated.timing(translateXVal, { toValue: 0, useNativeDriver: true, duration: 200 })\n/* note:here instead of creating another animation we used translateXVal and make it compatible with opacity */\nconst opacityOfMenu = translateXVal.interpolate({ inputRange: [0, 1], outputRange: [0, 1] })\n// const opacityOfBackgroundView = translateXVal.interpolate({ inputRange: [-1, 0], outputRange: [0, 0.5] })\n/* ================================== */\ntype State = {\n  checkBoxChecked?: boolean,\n}\ntype Props = {\n}\nexport const rxProps = (props: types.reducers) => ({\n  popupDetail: props.gifr.popupDetail,\n})\n\nexport default connect(rxProps)(\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n\n    // class PlusMenuBtn extends React.Component<Props, State> {\n    state: State = {\n      // open: false\n      checkBoxChecked: null,\n    } \n    // rrr = createRef<View>()\n    // componentDidUpdate(prevProps: Readonly<{ popupDetail: { visible: boolean; title?: string; icon?: string; content?: string; type?: 'alert' | 'confirm'; withCheckBox?: { defaultValue: boolean; text: string; }; }; }>, prevState: Readonly<State>, snapshot?: any): void {\n\n    // }\n    /* ============================= */\n    static getDerivedStateFromProps(nextProps: Props & ReturnType<typeof rxProps>, prevState: State): State {\n\n      if (prevState.checkBoxChecked === null) {\n        return {\n          checkBoxChecked: nextProps.popupDetail?.withCheckBox?.defaultValue\n        }\n      }\n      return {}\n\n    }\n\n    // componentWillMount(): void {\n\n    // }\n    componentDidUpdate() {\n      anim1.reset()\n      anim1.start()\n\n      // this.props.activateTopMenu ? anim1.start() : anim2.start() /* note:dont use props ofcomponentDidUpdate(props). read askdjh23i */\n    }\n    // componentWillUnmount(): void {\n    //   anim2.start()\n    // }\n    // componentWill(): void {\n    // componentDidUpdate(): void {\n      // anim1.run()\n      // this.props.popupDetail?.visible ?\n      //  : anim2.start() /* note:dont use props ofcomponentDidUpdate(props). read askdjh23i */\n    // }\n    /* ============================= */\n    render() {\n\n      if (!this.props.popupDetail?.visible) return null\n      const icon: any = this.props.popupDetail && this.props.popupDetail.icon ? this.props.popupDetail.icon : 'alert-octagon'\n      // <Portal>\n      // this..focus()\n      // setTimeout(() => {\n      //   this.rrr.current.focus()\n      // }, 2000);\n      // anim1.run()\n      // anim2.run()\n      return (\n\n        <Dialog style={{ zIndex: 99, backgroundColor: myApp.configs.transparent }} visible={this.props.popupDetail.visible}\n          onDismiss={() => { }}\n        >\n          <Animated.View style={{\n            // opacity:interpolatedDegree2,\n            // transform: [{\n            //   scale: anim1.val\n            //   //  , rotateX: interpolatedDegree2 }, { rotateY: interpolatedDegree2 }, { rotateZ: interpolatedDegree2\n            // }],\n            // opacity: anim2.val\n            backgroundColor: Colors.white,\n            opacity: opacityOfMenu,\n            transform: [{\n              // translateX: translateXVal \n              scale: translateXVal\n            }],\n\n          }}>\n            <Dialog.Title style={{ margin: 0, marginLeft: 5, fontSize: 15 }}>\n              <IconButton\n                size={25}\n                color='gray'\n                style={{ zIndex: -1, padding: 0, margin: 0 }}\n                icon={icon}\n              />\n              {/* <Button\n                testID='popup-title'\n                style={{ width: 100 }}\n                mode='contained'  >\n                {this.props.popupDetail.title.toUpperCase()}\n              </Button> */}\n\n              <View>\n                <Text testID='popup-title' >\n                  {this.props.popupDetail.title.toUpperCase()}\n                </Text>\n              </View>\n\n            </Dialog.Title>\n            <Dialog.Content>\n              <View testID='popup-content' style={{ height: 100 }} >{this.props.popupDetail.content && <ScrollView ><Text >\n                {this.props.popupDetail.content}\n              </Text></ScrollView>}</View>\n            </Dialog.Content>\n            <Dialog.Actions style={{\n              // alignItems: 'center',\n              // alignSelf: 'center',\n              // justifyContent: 'center',\n              // alignContent: 'center',\n              flexDirection: 'column',\n            }}>\n              {/* <View > */}\n              {/* <View\n              focusable={true}\n              ref={this.rrr}\n            > */}\n              {this.props.popupDetail.withCheckBox?.text && <View style={{\n                flexDirection: 'row',\n              }}>\n                <Checkbox\n\n                  status={this.state.checkBoxChecked ? 'checked' : 'unchecked'}\n                  onPress={\n                    () => this.setState({ checkBoxChecked: !this.state.checkBoxChecked })\n                  }\n                />\n                <Text>{this.props.popupDetail.withCheckBox.text}</Text>\n              </View>\n              }\n              <View style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                alignSelf: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}>\n                <Button\n                  testID='ok-btn'\n                  style={{ width: 100 }}\n                  mode='contained' onPress={() => {\n                    // anim2.start()\n                    // myApp.callThePopupCallback(true, this.state.checkBoxChecked)\n                    anim2.start(e => {\n                      myApp.callThePopupCallback(true, this.state.checkBoxChecked)\n                      anim2.reset()\n                    });\n                  }}>\n                  ok\n                </Button>\n                {/* </View> */}\n                {this.props.popupDetail.type == 'confirm' &&\n                  <Button\n                    testID='cancel-btn'\n                    style={{ width: 100 }}\n                    onPress={() => {\n                      anim2.start(e => {\n                        myApp.callThePopupCallback(false, this.state.checkBoxChecked)\n                        anim2.reset()\n                      });\n                    }}>\n                    cancel\n                  </Button>\n                }\n              </View>\n\n              {/* </View> */}\n\n            </Dialog.Actions>\n          </Animated.View>\n        </Dialog>\n        // </Portal >\n\n      )\n\n      // }\n\n      /* ================================== */\n      // export default  Popup\n      // export default gif.glue(Popup, (props: types.reducers) => ({\n      //   popupDetail: props.gifr.popupDetail,\n      // }))\n\n\n    }\n  }\n)\n\n      // {/* == Alert(wont exist till push the button ) */}\n\n\n      // {/* ==modal(will exit on click outside) */}\n      // {/* <Modal\n      //   visible={props.popupDetail && props.popupDetail.visible}\n      //   onDismiss={() => { props.popupDetail.callbackFn.call(false,) }}\n      //   contentContainerStyle={{ backgroundColor: Colors.white, padding: 20 }}\n      // >\n      //   <Text>Example Modal.  Click outside this area to dismiss.</Text>\n      // </Modal> */}\n\n      // {/* ==toast */}\n      // {/* <Snackbar\n      //   visible={true}\n      //   onDismiss={()=>{}}\n      //   action={{\n      //     label: 'Undo',\n      //     onPress: () => {\n      //       // Do something\n      //     },\n      //   }}>\n      //   Hey there! I'm a Snackbar.\n      // </Snackbar> */}\n\n      // {/* todo:confirm */}\n\n\n    //   <Card style={{\n    //     backgroundColor: myApp.configs.transparent\n    // }}>\n    //     <Card.Title\n    //         title={this.props.routerStates.youSentThisMessage ? 'from you' : '' + this.props.routerStates.item.senderUsername.split('@')[0]\n    //         }\n    //         subtitle={`${this.props.routerStates.item.title} `}\n    //         left={p => (<IconButton\n    //           size={25}\n    //           color='gray'\n    //           style={{ zIndex: -1, padding: 0, margin: 0 }}\n    //           icon={icon}\n    //         />)\n    //             // <Avatar.Icon {...props} icon=\"account\" />\n    //         }\n    //         right={i => <Text > {moment(this.props.routerStates.item.createTime).format('Y-m-d h:m:s ')} </Text>}\n    //     />\n    //     <Card.Content>\n\n    //     </Card.Content>\n    // </Card>\n","import React, { useState } from 'react'\nimport { View, Animated, Linking, } from 'react-native'\nimport { Appbar, IconButton, Text, Badge, Button, List } from 'react-native-paper'\nimport * as gif from '../../../libs/gif'\nimport * as myApp from '../../actions'\nimport * as types from '../../actions/types'\nimport * as configs from '../../actions/configs'\nimport { connect } from 'react-redux'\n// function name(params:type) {\n// import FontAwesomeIcon from 'react-native-vector-icons/dist/FontAwesome';\n// import EntypoIcon from 'react-native-vector-icons/dist/Entypo';\n\n// }\n// name.apply(false)\n/* ================================== */\n/* anim configs */\n// const animXVal = new Animated.Value(0)\n// const anim1 = Animated.timing(animXVal, { toValue: 1, useNativeDriver: true, })\n// const interpolatedDegree = animXVal.interpolate({ inputRange: [0, 1], outputRange: ['0deg', '360deg'] })\n/* ================================== */\n/* anim2 configs */\nconst anim1 = myApp.createAnim({ from: '0deg', to: '360deg' })\nconst anim2 = myApp.createAnim({ from: 1, to: 1.5, duration: 200 })\n/* ================================== */\n\n\n// const TopBar = (props: Props) => {\n\ntype State = {}\ntype Props = {\n  on_goBack_cb?,\n  on_gotoMessages_cb?,\n  on_refreshMainData_cb?,\n  on_activateTopMenu_cb?,\n}\nexport const rxProps = (props: types.reducers) => ({\n  // messages_unRead: props.gifr.messages_unRead,\n  router: props.router,\n})\nexport default connect(rxProps)(\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n    // state: State\n\n    // const [visible, setVisible] = React.useState(false);\n    // const showDialog = () => setVisible(true);\n    // const hideDialog = () => setVisible(false);\n\n    /* ================================== */\n    // const sheetRef = React.useRef(null)\n    // ref={sheetRef}\n    // sheetRef.current.snapTo(0)\n\n    // console.log(props)\n    /* ================================== */\n    render() {\n      if (configs.pathsToVisible.includes(gif.getRouteName())) return null\n      return (\n        <View /* ref={sheetRef}  */\n          style={{\n            overflow: 'hidden',\n            // backgroundColor: 'green',\n            // backgroundColor: myApp.configs.transparent,\n\n          }}\n        >{<Appbar.Header\n          style={{\n            // backgroundColor: myApp.configs.transparent,\n            // overflow: 'hidden',\n          }}>\n          <Appbar.BackAction\n            testID='goBack-btn'\n            onPress={() => {\n              // gif.goBack()\n              if (this.props.on_goBack_cb) this.props.on_goBack_cb()\n            }} />\n          {/* <Appbar.Action color='yellow' icon=\"account-network\" onPress={() => { }} /> */}\n          <Appbar.Content\n              style={{ marginLeft: 0, margin: 0, padding: 0, }}\n            title={configs.appName}\n            subtitle={gif.getRouteName()}\n          >\n          </Appbar.Content>\n          <View style={{ display: 'flex', flexDirection: 'row', }}>\n            <Text\n              testID='gotoMessages-btn'\n              onPress={async () => {\n                // Linking.openURL('https://mail.google.com/mail/u/INBOX@EMAIL.COM/#all/AminZarei.work@gmail.com')\n                Linking.openURL('mailto:AminZarei.work@gmail.com')\n                // Linking.openURL('https://mail.google.com/mail/?view=cm&fs=1&to=AminZarei.work@gmail.com')\n              }}>\n              <Animated.View style={{\n                // opacity:interpolatedDegree2,\n                transform: [{\n                  scale: anim2.val\n                  //  , rotateX: interpolatedDegree2 }, { rotateY: interpolatedDegree2 }, { rotateZ: interpolatedDegree2\n                }],\n                }}>\n                  <List.Icon style={{ width: 25 }} color='yellow' icon=\"email\" />\n\n                </Animated.View>\n              </Text>\n              {/* <FontAwesomeIcon name=\"pied-piper-alt\" size={30} color=\"#010\" />\n<EntypoIcon name=\"bug\" size={30} color=\"#404\" /> */}\n              <Text\n                testID='refreshMainData-btn'\n                onPress={async () => {\n                  Linking.openURL('/assets/resume.pdf')\n                }}>\n                <Animated.View style={{\n                  transform: [{ rotateX: anim1.val }, { rotateY: anim1.val }, { rotateZ: anim1.val }],\n                }}>\n                  <List.Icon style={{ width: 25 }} color='orange' icon=\"download\" />\n                </Animated.View>\n              </Text>\n            </View>\n\n\n            {/* <Appbar.Action icon=\"magnify\" onPress={() => { }} /> */}\n            <Appbar.Action\n              testID='activateTopMenu-btn'\n              icon={'dots-vertical'} onPress={() => {\n                // setTimeout(()=>{\n                const newState = !gif.getStore('activateTopMenu')\n                // gif.setStore({ activateTopMenu: newState })\n                if (this.props.on_activateTopMenu_cb) this.props.on_activateTopMenu_cb(newState)\n                // },100) \n              }} />\n          </Appbar.Header>\n          }</View>\n\n      )\n    }\n  }\n)\n/* ================================== */\n// export default  Popup\n// export default gif.glue(TopBar, (props: types.reducers) => ({\n//   messages_unRead: this.props.gifr.messages_unRead,\n//   router: this.props.router,\n// }))\n\n\n","import React from 'react'\nimport { Dimensions, View } from 'react-native'\nimport { Button, Text, TextInput, Title, List, Menu, Divider, FAB, Provider, Paragraph, Dialog, Portal, Snackbar, Modal } from 'react-native-paper'\nimport { connect } from 'react-redux'\nimport * as gif from '../../../libs/gif'\nimport * as types from '../../actions/types'\nimport * as myApp from '../../actions'\n\n// function name(params:type) {\n\n// }\n// name.apply(false)\n// const asdasd: any = null\n/* ================================== */\n// class name extends React.Component {\n//    state={visible:false}\n//    componentWillReceiveProps\n// }\n\ntype State = {}\ntype Props = {\n  // on_goBack_cb?,\n  // on_gotoMessages_cb?,\n  // on_refreshMainData_cb?,\n  // on_activateTopMenu_cb?,\n}\nexport const rxProps = (props: types.reducers) => ({\n  toastDetails: props.gifr.toastDetails,\n  // router: props.router,\n})\nexport default connect(rxProps)(\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n    // state: State\n\n    // const Toast = (props: types.reduxInitialState) =>\n    // const [visible, setVisible] = React.useState();\n    // const showDialog = () => setVisible(true);\n    // const hideDialog = () => setVisible(false);\n    // useEffect(()=>{\n    //   if(props.toastDetails){\n    //     setVisible(props.toastDetails.visible)\n    //   }\n    // },[props.toastDetails.visible])\n    /* ================================== */\n    render() {\n      if (!this.props.toastDetails?.visible) return null\n      return (<View\n        /* testID='toast' */ /* Note:we cant put testId here because we'll have '' err and this is because of empty Tag or no height */\n        // testID='toast'\n        style={{\n          zIndex: 100,\n          // backgroundColor: 'red',\n          // width: 300,\n          // height: 300,\n          // zIndex: 1000,\n          // position: 'absolute',\n        }}>\n        {/* <Text>123123123</Text> */}\n        <Snackbar\n          testID='toast'\n          wrapperStyle={{\n            // height: 100,\n            // position:'absolute',\n            // bottom:10,\n          }}\n          style={{\n            // minHeight: 100,\n            // top: 100,ok\n            // top: myApp.sharedVars.contentManagerHeight,\n            // top: myApp.sharedVars.contentManagerHeight - 100,\n            top: Dimensions.get('window').height - 30,// ok\n            opacity: 0.9,\n            // height: 100,\n            // marginBottom: 30,\n            // bottom: 100,\n            // justifyContent:'center',\n            // alignContent:'center',\n            // alignItems:'center',\n            // alignSelf:'center',  \n            // flexDirection:'row',\n            // paddingLeft:30\n\n          }}\n\n          // actions \n          // visible={true}\n          visible={this.props.toastDetails.visible}\n          onDismiss={() => { }}\n        // action={{\n        //   label: 'Undo',\n        //   onPress: () => {\n        //     // Do something\n        //   },\n        // }}\n        // duration={1}\n        >\n          {/* asdasd asdasd */}\n          {/* <View>\n        \n      </View> */}\n          {/* Note:dont use text here cause then Snackbar wont work and u cant use View without Text eather because rn throw \"string outside Text\"  */}\n          {this.props.toastDetails.title ? this.props.toastDetails.title + ': ' : null}\n          {this.props.toastDetails.content ? this.props.toastDetails.content : null}\n          {/* askjdh323yuqh23 */}\n          {/* <Text>askjdh323yuqh23</Text> */}\n          {/* <View style={{ }}>\n      <Text>{props.toastDetails.title}</Text>\n      <Text>{props.toastDetails.content}</Text>\n      </View>\n\n      <Surface></Surface> */}\n          {/* {props.toastDetails && props.toastDetails.content} */}\n        </Snackbar>\n      </View>\n      )\n\n    }\n  }\n)\n\n/* ================================== */\n// export default  Popup\n// export default gif.glue(Toast, (props: types.reducers) => ({\n//   toastDetails: props.gifr.toastDetails,\n// }))\n\n\n    //   {/* == Alert(wont exist till push the button ) */}\n      // {/* <Dialog\n    //   style={{\n    //     backgroundColor: Colors.black,\n    //     height: 50,\n    //     width: Dimensions.get('window').width-50,\n    //     // position: 'absolute',\n    //     // bottom:10,\n    //     opacity:0.7,\n    //   }}\n    //    visible={props.toastDetails && props.toastDetails.visible} onDismiss={() => { }}>\n    //     <Dialog.Content >\n    //       <Paragraph style={{ color: Colors.white }}>{props.toastDetails && props.toastDetails.content}</Paragraph>\n    //     </Dialog.Content>\n    //   </Dialog> */}\n\n\n    //   {/* ==modal(will exit on click outside) */}\n    //   {/* <Modal\n    //     visible={props.toastDetails && props.toastDetails.visible}\n    //     onDismiss={() => { props.toastDetails.callbackFn.call(false,) }}\n    //     contentContainerStyle={{ backgroundColor: Colors.white, padding: 20 }}\n    //   >\n    //     <Text>Example Modal.  Click outside this area to dismiss.</Text>\n    //   </Modal> */}\n\n    //   {/* ==toast */}\n\n\n    //   {/* todo:confirm */}\n    // {/* </Portal> */}\n","import React, { useState, useEffect } from 'react'\nimport { View, } from 'react-native'\nimport { ProgressBar, IconButton, List, Button, Text, Portal, ActivityIndicator, Colors } from 'react-native-paper'\nimport { connect } from 'react-redux'\nimport * as gif from '../../../libs/gif'\nimport * as types from '../../actions/types'\n/* ============================= */\ntype State = {}\ntype Props = {}\nexport const rxProps = (props: types.reducers) => ({\n  spinnerDetails: props.gifr.spinnerDetails,\n})\nexport default connect(rxProps)(\n  class Cmp extends React.Component<Props & ReturnType<typeof rxProps>, State> {\n    /* ---------------------------- */\n    render() {\n      if (!this.props.spinnerDetails?.visible) return null\n      return (<View\n        testID='spinner'\n        style={{\n          // display: 'flex',\n          // flexDirection: 'row',\n          flexDirection: 'column',\n          alignContent: 'center',\n          alignItems: 'center',\n          alignSelf: 'center',\n          justifyContent: 'center',\n\n          // flex: 1,\n          width: '100%',\n          height: '100%',\n          // backgroundColor: 'rgba(128, 128, 128, 0.7)',\n          backgroundColor: Colors.grey900 + 'ce',\n          // backgroundColor: Colors.grey900,\n          zIndex: 98,\n\n        }}\n      >\n        {/* {this.props.spinnerDetails && this.props.spinnerDetails.visible && */}\n\n\n        <View style={{\n          justifyContent: 'space-evenly',\n\n        }}>\n          {/* kajsdhiu23 */}\n          <Text style={{ textAlign: 'center' }}>\n            <ActivityIndicator />\n          </Text>\n          {/* <Button \n      style={{\n        width: '100%',\n      }}\n      loading\n    // loading={this.props.spinnerDetails && this.props.spinnerDetails.visible}\n    ><Text></Text></Button> */}\n          <Text style={{\n            textAlign: 'center',\n            fontWeight: 'bold',\n            fontSize: 15,\n            margin: 5,\n          }} >\n            {this.props.spinnerDetails.title}\n            {/* askjdh323yuqh23 */}\n          </Text>\n          <Text style={{\n            textAlign: 'center',\n            fontSize: 12,\n            margin: 5,\n          }} >\n            {this.props.spinnerDetails.content}\n          </Text>\n        </View>\n\n        {/* </Button> */}\n        {/* } */}\n      </View>\n      )\n    }\n  }\n)\n/* ================================== */\n// export default  Popup\n// export default gif.glue(Spinner, (props: types.reducers) => ({\n//   spinnerDetails: props.gifr.spinnerDetails,\n// }))\n\n/* ======================================= */\n// let loadMoreIndexr = 1\n// let asd = 0.30\n/* ======================================= */\n// const { height, width } = Dimensions.get('window')\n/* ======================================= */\n\n\n{/* {props.spinnerDetails && props.spinnerDetails.content} */ }\n{/* </List.Icon> */ }\n\n    //   {/* == Alert(wont exist till push the button ) */}\n      // {/* <Dialog\n    //   style={{\n    //     backgroundColor: Colors.black,\n    //     height: 50,\n    //     width: Dimensions.get('window').width-50,\n    //     // position: 'absolute',\n    //     // bottom:10,\n    //     opacity:0.7,\n    //   }}\n    //    visible={props.spinnerDetails && props.spinnerDetails.visible} onDismiss={() => { }}>\n    //     <Dialog.Content >\n    //       <Paragraph style={{ color: Colors.white }}>{props.spinnerDetails && props.spinnerDetails.content}</Paragraph>\n    //     </Dialog.Content>\n    //   </Dialog> */}\n\n\n    //   {/* ==modal(will exit on click outside) */}\n    //   {/* <Modal\n    //     visible={props.spinnerDetails && props.spinnerDetails.visible}\n    //     onDismiss={() => { props.spinnerDetails.callbackFn.call(false,) }}\n    //     contentContainerStyle={{ backgroundColor: Colors.white, padding: 20 }}\n    //   >\n    //     <Text>Example Modal.  Click outside this area to dismiss.</Text>\n    //   </Modal> */}\n\n    //   {/* ==toast */}\n\n\n    //   {/* todo:confirm */}\n    // {/* </Portal> */}\n","import React from 'react'\nimport { BackHandler, I18nManager, Dimensions, Text, View, Platform } from 'react-native'\nimport { Provider } from 'react-redux'\n\nimport store from './utils/store'\nimport { DefaultTheme, DarkTheme, configureFonts, Provider as PaperProvider, Portal, ProgressBar } from 'react-native-paper'\nimport Router from './utils/Router'\nimport EsEnvUiContentManager from './myApp/pages/EsEnvUiContentManager'\n\n// import Tmp from './Tmp'\nimport Popup from './myApp/pages/Popup'\nimport TopBar from './myApp/pages/TopBar'\nimport Toast from './myApp/pages/Toast'\nimport Spinner from './myApp/pages/Spinner'\n\nimport * as configs from './myApp/actions/configs'\nimport * as types from './myApp/actions/types'\nimport * as gif from './libs/gif'\nimport * as myApp from './myApp/actions'\n/* --------------------------- */\n/* managing used icons */\n/* just add all used icons here */\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import { fab } from '@fortawesome/free-brands-svg-icons' \n// import { faEdit } from '@fortawesome/free-solid-svg-icons'\n// import sharedVars from './myApp/actions/sharedVars';\n// library.add(faEdit)\n\n// import sharedVars from './myApp/actions/sharedVars';\n\n// import * as configs from './myApp/actions/configs';\n// import * as gif from './libs/gif';\n// import * as myApp from './myApp/actions';\n// /* --------------------------- */\n/* --------------------------- */\n/* managing used icons */\n/* just add all used icons here */\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// // import { fab } from '@fortawesome/free-brands-svg-icons' \n// import { faEdit } from '@fortawesome/free-solid-svg-icons'\n// library.add(faEdit)\n/* --------------------------- */\n/* rn-papaer theming */\nconst fontConfig = {\n    web: {\n        regular: {\n            fontFamily: 'sans-serif',\n            fontWeight: 'normal',\n        },\n        medium: {\n            fontFamily: 'sans-serif-medium',\n            fontWeight: 'normal',\n        },\n        light: {\n            fontFamily: 'sans-serif-light',\n            fontWeight: 'normal',\n        },\n        thin: {\n            fontFamily: 'sans-serif-thin',\n            fontWeight: 'normal',\n        },\n    },\n    ios: {\n        regular: {\n            fontFamily: 'sans-serif',\n            fontWeight: 'normal',\n        },\n        medium: {\n            fontFamily: 'sans-serif-medium',\n            fontWeight: 'normal',\n        },\n        light: {\n            fontFamily: 'sans-serif-light',\n            fontWeight: 'normal',\n        },\n        thin: {\n            fontFamily: 'sans-serif-thin',\n            fontWeight: 'normal',\n        },\n    },\n    android: {\n        regular: {\n            fontFamily: 'sans-serif',\n            fontWeight: 'normal',\n        },\n        medium: {\n            fontFamily: 'sans-serif-medium',\n            fontWeight: 'normal',\n        },\n        light: {\n            fontFamily: 'sans-serif-light',\n            fontWeight: 'normal',\n        },\n        thin: {\n            fontFamily: 'sans-serif-thin',\n            fontWeight: 'normal',\n        },\n    }\n}\n// /* --------------------------- */\nconst theme = {\n    ...DefaultTheme,\n    colors: {\n        ...DefaultTheme.colors,\n        // primary: 'tomato',\n        // accent: 'yellow',\n    },\n    // fonts: configureFonts(fontConfig),\n}\n// window.screen\n/* window.screen['height']= */\n// import {  } from \"react-native-vector-icons\";\n\nexport default class App extends React.Component {\n    /* --------------------------- */\n    constructor(props) {\n        super(props)\n        gif.handleBackPress()\n    }\n    /* --------------------------- */\n    // refff: React.RefObject<View> =null\n    // constructor(props) {\n    //     super(props)\n    //     console.log('app.js', 'routing and configuring application...')\n    //     // this.refff = React.createRef()\n    // }\n    // refff2: View \n    // refff: any = React.createRef().current\n    /* --------------------------- */\n    async componentDidMount() {\n        myApp.showSpinner({ content: 'please wait for app to initilize...' })\n        // BackHandler.removeEventListener('hardwareBackPress', gif.handleBackPress)\n\n\n        // window.location.reload()\n        if (Platform.OS == 'web') {\n            Dimensions.addEventListener('change', (asd) => {\n                window.location.reload()\n                /* opt.todo:akjsdkjasdjne */\n            })\n        }\n\n        /* ---------------------------- */\n        await myApp.initAppAfterComponentDidMount()\n        myApp.showSpinner(false)\n        /* ---------------------------- */\n        // sharedVars.mainViewRef = this.refff.current.forceUpdate.bind(this)\n        // const asd:any=this\n        // sharedVars.mainViewRef = asd \n        // this.refff2.forceUpdate()\n        // setTimeout(() => {\n        // this.refff.current.forceUpdate()\n        // this.refff.current.forceUpdate()\n        // console.log(this.refff )\n        // console.log(this.refff2.forceUpdate())\n        // }, 5000);\n        /* ---------------------------- */\n    }\n    /* --------------------------- */\n    render() {\n        // let adasdasd = {}\n        // // if (configs.tmpFirebaseProxy) {\n        // adasdasd = {\n        //     // position: 'relative', left: 0, top: 0,\n        //     // // paddingTop: 10,\n        //     // // backgroundColor: 'red',\n        //     width: '100%',\n        //     height: '100%',\n        //     // justifyContent: 'center',\n        //     // alignContent: 'center',\n        //     // alignItems: 'center',\n        //     // alignSelf: 'center',\n        //     overflolow: 'hidden'\n        // }\n        // }\n\n        return (\n            <React.StrictMode>\n            <Provider store={store} >\n                <PaperProvider theme={theme} >\n                    <React.Fragment >\n\n                        {Platform.OS === 'web' ? (\n                            <style type=\"text/css\">{`\n                            ::-webkit-scrollbar {\n                            width: 10px;\n                            }\n\n                            /* Track */\n                            ::-webkit-scrollbar-track {\n                                background: transparent; \n                                border-radius: 50%; \n                            }\n                            ::-webkit-scrollbar-button {\n                                border-radius: 50%; \n                                background: transparent;\n                            }\n                            \n                            /* Handle */\n                            ::-webkit-scrollbar-thumb {\n                                border-radius: 100px; \n                                background: lightgray; \n                            }\n                            ::-webkit-scrollbar-thumb:hover {\n                                background: gray; \n                            }\n \n                            ::-webkit-resizer {\n                                // background: transparent; \n                            }\n                            ::-webkit-scrollbar-corner {\n                                background: transparent; \n                            }\n                            ::-webkit-scrollbar-track-piece {\n                                // background: transparent; \n                            }\n                            `}</style>\n                        ) : null}\n\n                        {/* {Platform.OS === 'web' ? (\n                            <style type=\"text/css\">{`\n                                @font-face {\n                                font-family: 'MaterialCommunityIcons';\n                                src: url(${require('react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf')}) format('truetype');\n                                } \n                                \n                        `}</style>\n                         ) : null} */}\n                        {/* <View><Text>ok2asd</Text></View> */}\n                        {/* <Portal><Tmp /></Portal> */}\n                        <View style={{\n\n                            // justifyContent: 'center',\n                            // alignContent: 'center',\n                            // alignItems: 'center',\n                            // alignSelf: 'center',\n\n\n                            // width: '100%',\n                            // height: '100%',\n                            // backgroundColor: 'red',\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            // width: '100%',\n                            // height: '100%',\n                            width: Dimensions.get('window').width,\n                            /* -------- */\n                            /* anbox_tmp_styling */\n                            // height: Platform.OS == 'web' ? Dimensions.get('window').height : Dimensions.get('window').height - 20,\n                            /* -------- */\n                            height: Dimensions.get('window').height,\n                            overflow: 'hidden',\n                        }}>\n                            {/* <Portal> */}\n                            {/* <View style={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                width: '100%',\n                                height: '100%',\n                                backgroundColor: 'red',\n                                // zIndex: 1111,\n                            }}> */}\n                            {/* ----------- */}\n\n                            {/* ----------- */}\n                            {/* Note:above have higher zIndex , portals in the same level have their own zindex */}\n                            {/* ----------- */}\n                            <View style={{\n                                position: 'relative',\n                                top: 0,\n                                left: 0,\n                                width: '100%'\n                            }}>\n                                <TopBar\n                                        on_goBack_cb={() => gif.handleBackPress_()}\n                                    // on_gotoMessages_cb={() => gif.goto('Messages')}\n                                    // on_refreshMainData_cb={() => myApp.refreshMainData(true)}\n                                    on_activateTopMenu_cb={(newState) => gif.setStore({ activateTopMenu: newState })}\n                                />\n                            </View>\n                            {/* ----------- */}\n                            <View style={{}}>\n                                <EsEnvUiContentManager   >\n                                    <Router />\n                                    {/* <Text>ok</Text> */}\n                                </EsEnvUiContentManager>\n                            </View>\n                                {/* ----------- */}\n                            {/* ----------- */}\n                            {/* todo:enable only on specific pages */}\n                            {/* ----------- */}\n                            {/* </View> */}\n                            {/* </Portal> */}\n\n                            {/* ----------- */}\n                            <Portal>{/* Note: above tags have higher zIndex / portals in the same level have their own zindex */}\n                                {/* <View style={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                                    width: '100%',\n                                    height: '100%',\n                                    backgroundColor: 'blue',\n                                    // zIndex: 0,\n                                }}> */}\n\n                                {/* </View> */}\n                            </Portal>\n                            <Portal>\n                                <Spinner />\n                            </Portal>\n                            <Portal>\n                                <Popup />\n                            </Portal>\n                            <Portal>\n                                <Toast />\n                            </Portal>\n                            {/* ----------- */}\n                        </View>\n\n                    </React.Fragment>\n                </PaperProvider>\n            </Provider>\n            </React.StrictMode>\n        )\n    }\n    /* --------------------------- */\n}\n    /* --------------------------- */\n\n\n// WARNING: We noticed you're using the `useBuiltIns` option without declaring a core-js version. Currently, we assume version 2.x when no version is passed. Since this default version will likely change in future versions of Babel, we recommend explicitly setting the core-js version you are using via the `corejs` option.\n\n// You should also be sure that the version you pass to the `corejs` option matches the version specified in your `package.json`'s `dependencies` section. If it doesn't, you need to run one of the following commands:\n\n//   npm install --save core-js@2    npm install --save core-js@3\n//   yarn add core-js@2              yarn add core-js@3\n\n// Browserslist: caniuse-lite is outdated. Please run next command `yarn upgrade`\n\n\n// { //                 <PaperProvider theme={theme} > }\n//                         { <View  > }\n//                              { -----------}\n// { //                             <Portal>\n// //                                 <LeftMenu />\n// //                                 <EsTabs />\n// //                                 <PlusMenuBtn />\n// //                                 <Spinner />\n// //                                 <Popup />\n// //                                 <Toast />\n// //                             </Portal>}\n//                              { -----------}\n// { //                             <TopBar />}\n//                             { -----------}\n//                              { {}}\n// { //                             <EsEnvUiContentManager   >}\n// { //                                 <Router />}\n// { //                             </EsEnvUiContentManager>}\n//                              { -----------}\n//                              { todo:enable only on specific pages}\n//                              { <Portal>}\n//                              { </Portal>}\n//                              { -----------}\n// { //                         </View> }\n//                     { </PaperProvider>}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BackHandler, } from 'react-native'\n// import { Dimensions } from 'react-native'\nimport App from './App'\n// import * as gif from './App/libs/gif'\n\n// import {View,Text} from 'react-native'\n// import './App/utils/fontInjector.web'\n// Dimensions.set({\n//   window: {\n//     height: 1,\n//     width: 1,\n//   }\n// })\n// export const App = () => asd\n// const App=()=><View><Text>ok</Text></View> \n// const App=()=><div>23</div>\n\nReactDOM.render(\n  //<React.StrictMode>\n  <App />\n  //</React.StrictMode>, \n  ,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n","/* ------------------------ */\n/* ksajnsdkjas */\n// if(process?.argv[0]==='node'){}\n\n/* ------------------------ */\nimport { Colors } from 'react-native-paper'\nimport * as types from '../actions/types'\n// import firebaseJson from '../../../../firebase_/firebase.json'\n// import fbServerConfigs from './fbServerConfigs.json'\n// import firebaseJson from '../../../../firebase_/firebase.json'\n// throw firebaseJson.emulators.auth.host\n/* ======================================== */\n// export const development = process.argv[0]\n// console.log(process?.argv[0]==='node')\n// process.exit()\n\n/* ======================================== */\n/* ==start_rmOnRelease== */\nexport const development = false\n// export const development = true\n/* ==end_rmOnRelease== */\n/* ==start_rmOnRelease== */\n// import fbServerConfigs from './fbServerConfigs.json'\n// export const firebaseConfig: types.fbConfigs = fbServerConfigs\n// export const firebaseConfig: types.fbConfigs = {\n//     apiKey: '',\n//     appId: '',\n//     authDomain: '',\n//     messagingSenderId: '',\n//     projectId: '',\n//     storageBucket: ''\n// }\n/* ==end_rmOnRelease== */\n/* ======================================== */\n\nexport const nodeEnv = development && process && process?.argv0 == 'node'\nconsole.log({ nodeEnv })\n/* ------------------------ */\n// import { Platform } from 'react-native'\n// || configs.Platform.OS == 'web'\n// || configs.Platform.OS == 'web'\nexport const useFbSdk = true\n/* ================= */\n/* android_web_switch_start */\nconst web = true\nexport const normalSdk = true\n/* ---- */\n// const web = false\n// export const normalSdk = false\n/* android_web_switch_end */\n/* ================= */\nexport const Platform: { OS: 'web' | 'android' } = nodeEnv || web ? { OS: 'web' } : require('react-native').Platform\n// eslint-disable-next-line prefer-const , no-unneeded-ternary\nconsole.log(Platform)\n\n// export const useFbEmulator = development && true\nexport const useFbEmulator = development\n// export const host = 'http://localhost'\nexport const host = ''\n// export const tmpFirebaseProxy = Platform.OS === 'android'\nexport const tmpFirebaseProxy = false\n// export const firebaseHost = 'http://' + require('../../../../firebase_/firebase.json').emulators.auth.host //ok on anbox\n/* ---------------------------------- */\n/**usage is only in useFbEmulator */\nexport let firebaseHost = ''\n// platform\n// if (nodeEnv) {\n//     /* feeding */\n//     firebaseHost = 'http://' + firebaseJson.emulators.auth.host\n// } else {\n/* real device */\n// firebaseHost = 'http://' + '10.42.0.1' //ok on realDevice\nfirebaseHost = 'http://' + '0.0.0.0' //ok on emulator\n// firebaseHost = 'http://' + '127.0.0.1' //ok on emulator\n// }\n/* ---------------------------------- */\n// export const firebaseHost = 'http://' + '10.42.0.1' //ok on anbox\n// export const firebaseHost = 'http://' + 'localhost' //ok on anbox\n/* ======================================== */\n\nexport const pathsToVisible = [\n    '/Init',\n    '/',\n    // '/WebviewLoader',\n    // '/RegisterNewUser',\n    // '/RegisterNewUser_',\n    // '/RegisterNewGroup',\n    // '/EsSlider',\n]\nexport const appName = 'Amin Zarei'\nexport const aboutUs = {\n    firstName: 'Amin',\n    lastname: 'Zarei',\n    number: '1',\n    email: 'AminZarei.work@gmail.com',\n    github: 'https://github.com/AminZarei72',\n    title: 'aboutUs',\n    subtitle: 'A smart way to manage your multi-level marketing business',\n    descreiption: `\n    smartnet helps you to easily initiate your multi-level marketing business. \n    we developed multiple strategies for different senarios.\n    and aimed to develope more strategies based on your feedbacks in future.\n    so feel free to tell us what exactly you need for your special usecases.\n\n    smartnet is a free app based on open-source projects like :\n        -tsfr:\n            -https://github.com/AminZarei72/ts-firebase-rules\n        -react-native-todoList-boilerplate\n            -https://github.com/AminZarei72/react-native-todoList-boilerplate\n    `,\n    aboutMe: `\n    a 10years-survived fullstack developer who loves programming with web technologies like react-native,\n    clouds and testing frameworks which made the app developments more stable and fun.\n    `,\n}\n\n\n/* ======================================== */\n// export const host = 'http://127.0.0.1' //ok on anbox\n// export const host = 'http://0.0.0.0' //ok on anbox\n// export const host = 'http://10.0.2.2' //ok on g-emulators\n// export const host='http://10.42.0.1'\n// export const fireStore_port = 8080\n// export const firebase_host = host + ':' + fireStore_port + '/v1/projects/customermanager-1/databases/(default)/documents'\n// export const fireStorage_port = 9199\n// export const firebase_host_storage = host + ':' + fireStorage_port + '/v0/b/customermanager-1.appspot.com/o'\n/* const firebase_auth_api_host=https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${myApp.configs.firebaseConfig.apiKey} */\n// export const fireAuthService_port = 9099\n// export const firebase_auth_api_host = host + ':' + fireAuthService_port + '/identitytoolkit.googleapis.com/v1'\n/* ------- */\n/* ================================= */\n/* ================================= */\n/* ================================= */\n\n/* ================================= */\n/* ================================= */\n/* ================================= */\n/* **Note:Dont change these ports,if u did u must also change :\n    -anbox launch --package=org.anbox.appmgr --component=org.anbox.appmgr.AppViewActivity && adb reverse tcp:9100 tcp:9100 && adb reverse tcp:9101 tcp:9101 && adb reverse tcp:9102 tcp:9102 &&  adb reverse tcp:9103 tcp:9103 && adb reverse tcp:65525 tcp:65525\n    -configs of tmpFirebaseProxy\n    -update documents\n*/\n/* ================================= */\n/* ================================= */\n/* ================================= */\nlet firebase_auth_url = ''\nlet firebase_auth_url_reseter = ''\nlet firebase_fireStore_url = ''\nlet firebase_fireStore_url_reseter = ''\nlet firebase_storage_url = ''\nlet firebase_hosting = ''\n\n// /* auth */\nexport const firebase_auth_port = 9100\n// /* ------- */\n// /* firestore */\nexport const firebase_fireStore_port = 9101\n// /* ------- */\n// // /* storage */\nexport const firebase_storage_port = 9102\n// // /* ------- */\n// /* dont have for now */\nexport const firebase_hosting_port = 9103\n// // /* ------- */\n/* this is just for the rest mode */\n// if (!useFbSdk) {\nif (useFbEmulator) {\n    firebase_auth_url = firebaseHost + ':' + firebase_auth_port + '/identitytoolkit.googleapis.com/v1' /* ok in local */\n    firebase_fireStore_url = firebaseHost + ':' + firebase_fireStore_port + '/v1/projects/customermanager-1/databases/(default)/documents'\n    firebase_storage_url = firebaseHost + ':' + firebase_storage_port + '/v0/b/customermanager-1.appspot.com/o'\n    firebase_hosting = firebaseHost + ':' + firebase_hosting_port + '/'\n    /* ---switched end--- */\n} else {\n    /* ---switched start--- */\n    // export const firebase_auth_port = ''\n    firebase_auth_url = `https://identitytoolkit.googleapis.com/v1`\n    // firebase_auth_url_reseter = `https://identitytoolkit.googleapis.com` + '' + '' + '' + '/v1/projects/customermanager-1/accounts'\n    /* ------- */\n    /* firestore */\n    // firebase_fireStore_port = ''\n    firebase_fireStore_url = `https://firestore.googleapis.com` + '' + '' + '/v1/projects/customermanager-1/databases/(default)/documents'\n    // firebase_fireStore_url_reseter = `https://firestore.googleapis.com` + '' + '' + '' + '/v1/projects/customermanager-1/databases/(default)/documents'\n    /* ------- */\n    /* storage */\n    // firebase_storage_port = ''\n    firebase_storage_url = `https://firebasestorage.googleapis.com` + '' + '' + '/v0/b/customermanager-1.appspot.com/o'\n    /* ------- */\n    /* dont have for now */\n    // firebase_hosting_port = ''\n    firebase_hosting = `https://hosting.googleapis.com` + '' + '' + '/'\n}\n// }\n// /* ------- */\nfirebase_auth_url_reseter = firebaseHost + ':' + firebase_auth_port + '/emulator' + '/v1/projects/customermanager-1/accounts'\nfirebase_fireStore_url_reseter = firebaseHost + ':' + firebase_fireStore_port + '/emulator' + '/v1/projects/customermanager-1/databases/(default)/documents'\n\nexport {\n    firebase_auth_url,\n    firebase_auth_url_reseter,\n    firebase_fireStore_url,\n    firebase_fireStore_url_reseter,\n    firebase_storage_url,\n    firebase_hosting,\n}\n// /* ------- */\n\n// /* ---switched start--- */\n// /* ------- */\n\n// /* ---switched end--- */\n/* ================================= */\n/* ================================= */\n/* ================================= */\n/* ================================= */\n/* asdh2ueh */\n// export const firebase_auth_url=`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${firebaseConfig.apiKey}`\n// await fetch('http://localhost:9099/emulator/v1/projects/customermanager-1/accounts', {\n// await fetch('http://localhost:8080/emulator/v1/projects/customermanager-1/databases/(default)/documents', {\n// export const firebase_auth_url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${firebaseConfig.apiKey}`\n// // export const firebase_fireStore_url_reseter = host + ':' + '8080' + '/emulator' + '/v1/projects/customermanager-1/documents'\n// /* ------- */\n// /* ------- */\n// export const imagesUrl = host + ':' + firebase_storage_port + '/v0/b/customermanager-1.appspot.com/o/images'\n/* ======================================== */\n/* ======================================== */\n/* ======================================== */\nexport const imagesUrl = `${firebase_storage_url}/images`\n/* ----------- */\nconst defaultMarketerImgPlain = 'images/marketers/defaultMarketerImg.png'\nconst defaultBgPlain = 'images/bgs/bg1.jpg'\n\n/* these are for webviews */\nconst assetDir_a = Platform.OS == 'web' ? '.' : 'file:///android_asset'\nlet defaultMarketerImg = ''\nlet defaultBgImg = ''\nif (Platform.OS == 'web' && development) {\n    defaultMarketerImg = host + ':3000/assets/' + defaultMarketerImgPlain\n    defaultBgImg = host + ':3000/' + defaultBgPlain\n} else if (Platform.OS == 'web' && !development) {\n    defaultMarketerImg = host + '/assets/' + defaultMarketerImgPlain\n    defaultBgImg = host + '/' + defaultBgPlain\n} else if (Platform.OS == 'android') {\n    defaultMarketerImg = assetDir_a + '/assets/' + defaultMarketerImgPlain\n    defaultBgImg = assetDir_a + '/' + defaultBgPlain\n}\n\nconst imageComponentPlatformQuirk = Platform.OS == 'web' ? 'assets/' : 'asset:/'\nexport {\n    assetDir_a,\n    defaultMarketerImg,\n    defaultBgImg,\n    defaultMarketerImgPlain,\n    imageComponentPlatformQuirk,\n    defaultBgPlain,\n}\n/* ----------- */\nexport const userProfileImage = {\n    maxSize: 1,\n    maxWidthHeight: 256, /* note:this was ok with 1024 on web */\n    maxTryToCompression: 10,\n\n}\n/* ----------- */\n\nexport const defaultAppData = {\n    version: 100,\n}\n\nexport const app = {\n    version: '1.0.0',\n}\n\n// export const appPackageNameInAndroid = 'com.azdev.myApp'\n// export const appPackageNameInAndroid = 'com.supercell.clashofclans'\nexport const appPackageNameInAndroid = 'com.aminzarei72.smartnet'\nexport const transparent = 'transparent'\n\n\n/* ========================================== */\n/* group configs */\n/* note:change firestore createGroupConditions,editGroupConditions,validateGroupPercentageCalculationConfigs */\nexport const maxSalePrice = 100000000000\nexport const minSalePrice = 0\n\nexport const minAllowedUsers = 1 /* admin itself */\nexport const maxAllowedUsers = 500 /* Math.pow(2,9)  */\n\nexport const minAllowedDirects = 0\n/** maximum allowed directs ,this is here to for ui limitations (e.g treeview ...) */\nexport const maxAllowedDirects = 500 /* Math.sqrt(512)=>22 */\n\nexport const min_groupPercentageCalculationConfigs = 0\nexport const max_groupPercentageCalculationConfigs = 40\n/* ========================================== */\n/* texts */\nexport const loginTitleMsg = 'wellcome to ' + appName\nexport const initilizingMsg = 'initializing...'\n/* ========================================== */\n\n\n// export const technologies: {[key:types.Technologies]:{icon,color}} = {\n// export const technologies: Map<types.Technologies,any> = {\n//     'firebase'|\n// 'angular'|\n// 'react'|\n// 'laravel'|\n// 'go'|\n// 'tensorflow'|\n// 'nodejs'|\n// 'language-typescript'\nexport type technologie = {\n    title: string,\n    icon: string,\n    color: string,\n    parent: (keyof (typeof technologies)),\n    level: number,\n}\n// type asd = (keyof (typeof technologies))\n// const original = new Map<asd, technologie>([\n//     [\n//         'firebase', {\n//             title: 'firebase',\n//             icon: 'firebase',\n//             color: Colors.red500,\n//             parent:''\n//         }\n//     ],\n// ])\n// export const technologiessss: Map<string, string> = new Map(\n//     'asd': 'asd'\n// )\n// export const technologies: Map<string,technologie>= {\nexport const technologies: { [key: string]: technologie } = {\n    // export const technologies = {\n    // 'asd':'',\n\n    'clouds': {\n        title: 'clouds',\n        icon: 'clouds',\n        color: Colors.red500,\n        parent: null,\n        level: 1,\n    },\n    'heroku': {\n        title: 'heroku',\n        icon: 'heroku',\n        color: Colors.purple800,\n        parent: 'clouds',\n        level: 2,\n    },\n\n\n    'firebase': {\n        title: 'firebase',\n        icon: 'firebase',\n        color: Colors.red500,\n        parent: 'clouds',\n        level: 2,\n    },\n    /* ---------- */\n    'language': {\n        title: 'language',\n        icon: 'language',\n        color: Colors.blue900,\n        parent: null,\n        level: 1,\n    },\n    'nodejs': {\n        title: 'nodejs',\n        icon: 'nodejs',\n        color: Colors.yellow900,\n        parent: 'language',\n        level: 2,\n    },\n    'typescript': {\n        title: 'typescript',\n        icon: 'language-typescript',\n        // icon: 'typescript',\n        color: Colors.blue900,\n        parent: 'nodejs',\n        level: 3,\n    },\n\n    // 'go': {\n    //     title: 'go',\n    //     icon: 'language-go',\n    //     color: Colors.grey700,\n    //     parent: 'language',\n    //     level: 2,\n    // },\n\n    'database': {\n        title: 'database',\n        icon: 'database',\n        color: Colors.grey700,\n        parent: null,\n        level: 1,\n    },\n    'mongoDb': {\n        title: 'mongoDb',\n        icon: 'mongoDb',\n        color: Colors.grey700,\n        parent: 'database',\n        level: 2,\n    },\n    'mysql': {\n        title: 'mysql',\n        icon: 'mysql',\n        color: Colors.grey700,\n        parent: 'database',\n        level: 2,\n    },\n\n    /* -------- */\n    'electron': {\n        title: 'electron',\n        icon: 'electron',\n        color: Colors.blue700,\n        parent: 'nodejs',\n        level: 3,\n    },\n    'react': {\n        title: 'react',\n        icon: 'react',\n        color: Colors.blue400,\n        parent: 'nodejs',\n        level: 3,\n    },\n    'react-native': {\n        title: 'react-native',\n        icon: 'react',\n        color: Colors.blue800,\n        parent: 'react',\n        level: 4,\n    },\n    'redux': {\n        title: 'redux',\n        icon: 'react',\n        color: Colors.blue800,\n        parent: 'react',\n        level: 4,\n    },\n    'angular': {\n        title: 'angular',\n        icon: 'angular',\n        color: Colors.red900,\n        parent: 'nodejs',\n        level: 3,\n    },\n    'ionic': {\n        title: 'ionic/cordova',\n        icon: 'cordova',\n        color: Colors.blue700,\n        parent: 'angular',\n        level: 4,\n    },\n\n    /* -------- */\n    'go': {\n        title: 'go',\n        icon: 'language-go',\n        color: Colors.blueGrey600,\n        parent: 'language',\n        level: 2,\n    },\n    /* -------- */\n    'php': {\n        title: 'php',\n        icon: 'language-php',\n        color: Colors.blueGrey600,\n        parent: 'language',\n        level: 2,\n    },\n    'mva': {\n        title: 'mvA(angular/php)',\n        icon: 'language-php',\n        color: Colors.red900,\n        parent: 'php',\n        level: 3,\n    },\n    'laravel': {\n        title: 'laravel',\n        icon: 'laravel',\n        color: Colors.red800,\n        parent: 'php',\n        level: 3,\n    },\n    'cms': {\n        title: 'cms',\n        icon: 'cms',\n        color: Colors.blue700,\n        parent: 'php',\n        level: 3,\n    },\n    'joomla': {\n        title: 'joomla',\n        icon: 'joomla',\n        color: Colors.blue700,\n        parent: 'cms',\n        level: 4,\n    },\n    'wordpress': {\n        title: 'wordpress',\n        icon: 'wordpress',\n        color: Colors.blue700,\n        parent: 'cms',\n        level: 4,\n    },\n    /* -------- */\n    'design': {\n        title: 'design',\n        icon: 'design',\n        color: Colors.purple400,\n        parent: null,\n        level: 1,\n    },\n    'threejs': {\n        title: 'threejs',\n        icon: 'threejs',\n        color: Colors.purple400,\n        parent: 'design',\n        level: 2,\n    },\n    'html': {\n        title: 'html',\n        icon: 'html',\n        color: Colors.purple400,\n        parent: 'design',\n        level: 2,\n    },\n    'jquery': {\n        title: 'jquery',\n        icon: 'jquery',\n        color: Colors.purple400,\n        parent: 'design',\n        level: 2,\n    },\n    'paper': {\n        title: 'paper',\n        icon: 'paper',\n        color: Colors.purple400,\n        parent: 'design',\n        level: 2,\n    },\n    'bootsrap': {\n        title: 'bootsrap',\n        icon: 'bootsrap',\n        color: Colors.purple400,\n        parent: 'design',\n        level: 2,\n    },\n    'reactsrap': {\n        title: 'reactsrap',\n        icon: 'reactsrap',\n        color: Colors.purple400,\n        parent: 'bootsrap',\n        level: 3,\n    },\n    'css': {\n        title: 'css',\n        icon: 'css',\n        color: Colors.purple400,\n        parent: 'design',\n        level: 2,\n    },\n    'sass': {\n        title: 'sass/css',\n        icon: 'sass',\n        color: Colors.purple400,\n        parent: 'css',\n        level: 3,\n    },\n    /* ---------- */\n    'tools': {\n        title: 'tools',\n        icon: 'tools',\n        color: Colors.red800,\n        parent: null,\n        level: 1,\n    },\n    'docker': {\n        title: 'docker',\n        icon: 'docker',\n        color: Colors.purple800,\n        parent: 'tools',\n        level: 2,\n    },\n    'tensorflow': {\n        title: 'tensorflow',\n        icon: 'tensorflow',\n        color: Colors.blue400,\n        parent: 'tools',\n        level: 2,\n    },\n\n    'map': {\n        title: 'map apis',\n        icon: 'googleMap',\n        color: Colors.red800,\n        parent: 'tools',\n        level: 2,\n    },\n    'googleMap': {\n        title: 'googleMap',\n        icon: 'googleMap',\n        color: Colors.red800,\n        parent: 'map',\n        level: 3,\n    },\n    'OpenStreetMap': {\n        title: 'OpenStreetMap',\n        icon: 'OpenStreetMap',\n        color: Colors.red800,\n        parent: 'map',\n        level: 3,\n    },\n    /* -------- */\n    'OS': {\n        title: 'OS',\n        icon: 'OS',\n        color: Colors.purple800,\n        parent: null,\n        level: 1,\n    },\n    'windows': {\n        title: 'windows',\n        icon: 'windows',\n        color: Colors.purple800,\n        parent: 'OS',\n        level: 2,\n\n    },\n    'linux': {\n        title: 'debian/ubuntu server',\n        icon: 'linux',\n        color: Colors.purple800,\n        parent: 'OS',\n        level: 2,\n\n    },\n    'ubuntu': {\n        title: 'ubuntu',\n        icon: 'ubuntu',\n        color: Colors.purple800,\n        parent: 'OS',\n        level: 2,\n    },\n    /* -------- */\n    'editor': {\n        title: 'editor',\n        icon: 'editor',\n        color: Colors.purple800,\n        parent: null,\n        level: 1,\n    },\n    'vscode': {\n        title: 'vscode',\n        icon: 'vscode',\n        color: Colors.purple800,\n        parent: 'editor',\n        level: 2,\n    },\n    'sublime': {\n        title: 'sublime',\n        icon: 'sublime',\n        color: Colors.purple800,\n        parent: 'editor',\n        level: 2,\n    },\n    /* -------- */\n    'version-controller': {\n        title: 'version-controller',\n        icon: 'version-controller',\n        color: Colors.purple800,\n        parent: null,\n        level: 2,\n    },\n    'git': {\n        title: 'git',\n        icon: 'git',\n        color: Colors.purple800,\n        parent: 'version-controller',\n        level: 3,\n    },\n    'gitlab': {\n        title: 'gitlab',\n        icon: 'gitlab',\n        color: Colors.purple800,\n        parent: 'git',\n        level: 4,\n    },\n    'github': {\n        title: 'github',\n        icon: 'github',\n        color: Colors.purple800,\n        parent: 'git',\n        level: 4,\n    },\n    'bitbucket': {\n        title: 'bitbucket',\n        icon: 'bitbucket',\n        color: Colors.purple800,\n        parent: 'git',\n        level: 4,\n    },\n    /* -------- */\n    'testing': {\n        title: 'testing',\n        icon: 'testing',\n        color: Colors.purple800,\n        parent: 'tools',\n        level: 2,\n    },\n    'jest': {\n        title: 'jest',\n        icon: 'jest',\n        color: Colors.purple800,\n        parent: 'testing',\n        level: 3,\n    },\n    'rntl': {\n        title: 'react-native-testing-library',\n        icon: 'rntl',\n        color: Colors.purple800,\n        parent: 'testing',\n        level: 3,\n    },\n    'detox': {\n        title: 'detox',\n        icon: 'detox',\n        color: Colors.purple800,\n        parent: 'testing',\n        level: 3,\n    },\n    /* -------- */\n    'emulator': {\n        title: 'emulator',\n        icon: 'emulator',\n        color: Colors.purple800,\n        parent: null,\n        level: 1,\n    },\n    'virtualbox': {\n        title: 'virtualbox',\n        icon: 'virtualbox',\n        color: Colors.purple800,\n        parent: 'emulator',\n        level: 2,\n    },\n    'vmware': {\n        title: 'vmware',\n        icon: 'vmware',\n        color: Colors.purple800,\n        parent: 'emulator',\n        level: 2,\n    },\n    'anbox': {\n        title: 'anbox',\n        icon: 'anbox',\n        color: Colors.purple800,\n        parent: 'emulator',\n        level: 2,\n    },\n    'genymotion': {\n        title: 'genymotion',\n        icon: 'genymotion',\n        color: Colors.purple800,\n        parent: 'emulator',\n        level: 2,\n    },\n    'android-studio': {\n        title: 'android-studio',\n        icon: 'android-studio',\n        color: Colors.purple800,\n        parent: 'emulator',\n        level: 2,\n    },\n    /* -------- */\n\n\n}\n//   /* ================================ */\n//   export type pageData = {\n//   }\n/* ================================ */\nexport type pageData = {\n    // id: string,\n    title: string,\n    comment: string,\n    img: string,\n    publishDate: string,\n    icon: string,\n    web: string[],\n    app?: string,\n    usedTechnologies: (keyof (typeof technologies))[],\n}\n/* ================================ */\nexport const pagesData: pageData[] = [\n    {\n        title: 'ts-firebase-rules(tsfr)',\n        comment: `an open-source project which lets you write typescript and compile it to firebase .rules file \n        and a lot of helpful features like Helper-functions and a straight forward built-in cli for build/watch process .\n        this project is my small share to open-source commiunity which helped me build my life :)\n        `,\n        publishDate: '2022',\n        icon: 'apps/tsfr/icon.jpg',\n        img: 'apps/tsfr/anim.gif',\n        web: [\n            'https://github.com/AminZarei72/ts-firebase-rules',\n            'https://www.npmjs.com/package/ts-firebase-rules',\n        ],\n        // app: 'http://abmp.rf.gd/bime/',\n        usedTechnologies: [\n            'typescript', 'nodejs', 'firebase',\n        ],\n    },\n    {\n        title: 'SmartNet',\n        comment: `smartnet was a side project/startup which could helps you to easily initiate your multi-level marketing business. \n        i developed multiple strategies for different marketing senarios.\n        it was a free app based on open-source projects like :\n            -tsfr:\n                -https://github.com/AminZarei72/ts-firebase-rules\n            -react-native-todoList-boilerplate\n                -https://github.com/AminZarei72/react-native-todoList-boilerplate\n       `,\n        publishDate: '2021',\n        icon: 'apps/smartNet/icon.png',\n        img: 'apps/smartNet/anim.gif',\n        web: [\n            'https://customermanager-1.web.app',\n        ],\n        // app: 'smartnet',\n        usedTechnologies: [\n            'react', 'firebase', 'react-native', 'typescript',\n        ],\n    },\n    {\n        title: 'other research projects(ai/ml)',\n        comment: `in 2020(the year of Panic & Pandamic) i created a micro framework to create Ai models with reinforcement technique based on google Tensorflow.\n        and used this for creating my stock market trading bots and other research projects like Ai model-creator based on multi-species and DNA crossover (just for fun '_' )`,\n        publishDate: '2020',\n        icon: 'apps/rlf/icon.png',\n        img: 'apps/rlf/anim.gif',\n        web: [\n        ],\n        // app: '',\n        usedTechnologies: [\n            'tensorflow', 'typescript', 'threejs', 'nodejs', 'react', 'mongoDb'\n        ],\n    },\n    {\n        title: 'Bime(insurance)',\n        comment: `a rebuild of an insurance/marketting website with a lot of recursive user management`,\n        publishDate: '2019',\n        icon: 'apps/bime/icon.jpg',\n        img: 'apps/bime/anim.gif',\n        web: [\n            'http://abmp.rf.gd/bime/',\n        ],\n        // app: ,\n        usedTechnologies: [\n            'php'\n        ],\n    },\n    {\n        title: 'Traffic Counter',\n        comment: `TrafficCounter was a android app as a gui for a traffic counting hardware `,\n        publishDate: '2018',\n        icon: 'apps/trafficCounter/icon.png',\n        img: 'apps/trafficCounter/anim.gif',\n        web: [\n        ],\n        // app: '',\n        usedTechnologies: [\n            'laravel', 'react-native'\n        ],\n    },\n\n    {\n        title: 'Tracker(gps tracking platform)',\n        comment: `Tracker was a full feature tracking platform with support\n         for almost all of popular tracking devices like:\n            Coban models\n            Teltonika \n            and other hardwares\n        but i also wrote a middleware specially for our hardware team customized device.\n       i write this project with angular and google maps but later had to rewrite it with React and OpenStreetMap because of Google sanctions on Iran\n        `,\n        publishDate: '2017',\n        icon: 'apps/tracker/icon.jpg',\n        img: 'apps/tracker/anim.gif',\n        web: [\n        ],\n        // app: '',\n        usedTechnologies: [\n            'angular',\n            'laravel', 'react',\n            'nodejs', 'go', 'googleMap', 'OpenStreetMap'\n        ],\n    },\n    {\n        title: 'SmartTaxi',\n        comment: `SmartTaxi was an online taxi app(uber-like) .\n        i developed this for multiple platforms and classes :\n            -a Android for Driver\n            -a Android for Passenger\n            -a web cms for Managers/admins\n            -a web cms for Operators \n            -a web cms for Agencies \n       `,\n        publishDate: '2016',\n        icon: 'apps/smartTaxi/icon.jpg',\n        img: 'apps/smartTaxi/anim.gif',\n        web: [\n            'https://powerful-bayou-65212.herokuapp.com/demo/driver',\n            'https://powerful-bayou-65212.herokuapp.com/demo/passenger',\n            'https://powerful-bayou-65212.herokuapp.com/demo/manager',\n            'https://powerful-bayou-65212.herokuapp.com/demo/introduction',\n        ],\n        // app: '',\n        usedTechnologies: [\n            , 'angular', 'laravel', 'ionic', 'googleMap', 'sass',\n        ],\n    },\n    {\n        title: 'Danabina shop',\n        comment: `Danabina shop was a online shopping website\n         based on \"mvA\" (my micro framework based on MVC system to connect angular1 to php)\n       `,\n        publishDate: '2013',\n        icon: 'apps/danabina/icon.jpg',\n        img: 'apps/danabina/anim.gif',\n        web: [\n            'http://abmp.rf.gd/shop/',\n        ],\n        app: '',\n        usedTechnologies: [\n            'angular', 'php', 'mva',\n        ],\n    },\n    {\n        title: 'abmp',\n        comment: `abmp was a corporative website(In the field of school services) .\n        even though it was my first professional project and it was based on Joomla , we had a country-level job application. \n        also things like payments and etc...\n       `,\n        publishDate: '2011',\n        icon: 'apps/abmp/icon.jpg',\n        img: 'apps/abmp/anim.gif',\n        web: [\n            'http://abmp.rf.gd/index.php',\n        ],\n        // app: '',\n        usedTechnologies: [\n            'joomla', 'php',\n        ],\n    },\n\n]\n/* ========================================== */\n\n\n/* ========================================== */\n/* **Note:if u change this, firestore.rules.loggedIn must also change  */\nexport const username = {\n    max_length: 20,\n    min_length: 6,\n    match: /^[A-Za-z][A-Za-z0-9]\\S*$/, /* \\S=noSpace */\n}\nexport const password = {\n    max_length: 20,\n    min_length: 6,\n    match: /^[A-Za-z0-9]\\S*$/, /* \\S=noSpace */\n}\n"],"sourceRoot":""}